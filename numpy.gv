digraph numpy {
	graph [scale=1]
	size="36,36"
	numpy [color=blue fontsize=16 shape=box]
	"numpy.add_newdocs" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.add_newdocs" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.char" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.char" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.compat" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.compat" [color=blue penwidth=1 style=dashed]
	"numpy.compat" [color=blue fontsize=16 shape=box]
	"numpy.compat.py3k" [color=blue fontsize=16 shape=box]
		"numpy.compat" -> "numpy.compat.py3k" [color=blue penwidth=1 style=dashed]
	"numpy.compat.py3k" [color=blue fontsize=16 shape=box]
	"numpy.compat.py3k.sys" [color=blue fontsize=16 shape=box]
		"numpy.compat.py3k" -> "numpy.compat.py3k.sys" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.core" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.core" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.arrayprint" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.arrayprint" [color=blue penwidth=1 style=dashed]
	"numpy.core.arrayprint" [color=blue fontsize=16 shape=box]
	"numpy.core.arrayprint.sys" [color=blue fontsize=16 shape=box]
		"numpy.core.arrayprint" -> "numpy.core.arrayprint.sys" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.char" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.char" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.defchararray" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.defchararray" [color=blue penwidth=1 style=dashed]
	"numpy.core.defchararray" [color=blue fontsize=16 shape=box]
	"numpy.core.defchararray.numpy" [color=blue fontsize=16 shape=box]
		"numpy.core.defchararray" -> "numpy.core.defchararray.numpy" [color=blue penwidth=1 style=dashed]
	"numpy.core.defchararray" [color=blue fontsize=16 shape=box]
	"numpy.core.defchararray.sys" [color=blue fontsize=16 shape=box]
		"numpy.core.defchararray" -> "numpy.core.defchararray.sys" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.fromnumeric" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.fromnumeric" [color=blue penwidth=1 style=dashed]
	"numpy.core.fromnumeric" [color=blue fontsize=16 shape=box]
	"numpy.core.fromnumeric.mu" [color=blue fontsize=16 shape=box]
		"numpy.core.fromnumeric" -> "numpy.core.fromnumeric.mu" [color=blue penwidth=1 style=dashed]
	"numpy.core.fromnumeric" [color=blue fontsize=16 shape=box]
	"numpy.core.fromnumeric.np" [color=blue fontsize=16 shape=box]
		"numpy.core.fromnumeric" -> "numpy.core.fromnumeric.np" [color=blue penwidth=1 style=dashed]
	"numpy.core.fromnumeric" [color=blue fontsize=16 shape=box]
	"numpy.core.fromnumeric.nt" [color=blue fontsize=16 shape=box]
		"numpy.core.fromnumeric" -> "numpy.core.fromnumeric.nt" [color=blue penwidth=1 style=dashed]
	"numpy.core.fromnumeric" [color=blue fontsize=16 shape=box]
	"numpy.core.fromnumeric.types" [color=blue fontsize=16 shape=box]
		"numpy.core.fromnumeric" -> "numpy.core.fromnumeric.types" [color=blue penwidth=1 style=dashed]
	"numpy.core.fromnumeric" [color=blue fontsize=16 shape=box]
	"numpy.core.fromnumeric.um" [color=blue fontsize=16 shape=box]
		"numpy.core.fromnumeric" -> "numpy.core.fromnumeric.um" [color=blue penwidth=1 style=dashed]
	"numpy.core.fromnumeric" [color=blue fontsize=16 shape=box]
	"numpy.core.fromnumeric.warnings" [color=blue fontsize=16 shape=box]
		"numpy.core.fromnumeric" -> "numpy.core.fromnumeric.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.function_base" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.function_base" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.getlimits" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.getlimits" [color=blue penwidth=1 style=dashed]
	"numpy.core.getlimits" [color=blue fontsize=16 shape=box]
	"numpy.core.getlimits.ntypes" [color=blue fontsize=16 shape=box]
		"numpy.core.getlimits" -> "numpy.core.getlimits.ntypes" [color=blue penwidth=1 style=dashed]
	"numpy.core.getlimits" [color=blue fontsize=16 shape=box]
	"numpy.core.getlimits.numeric" [color=blue fontsize=16 shape=box]
		"numpy.core.getlimits" -> "numpy.core.getlimits.numeric" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.info" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.info" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.machar" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.machar" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.multiarray" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.multiarray" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.numeric" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.numeric" [color=blue penwidth=1 style=dashed]
	"numpy.core.numeric" [color=blue fontsize=16 shape=box]
	"numpy.core.numeric.builtins" [color=blue fontsize=16 shape=box]
		"numpy.core.numeric" -> "numpy.core.numeric.builtins" [color=blue penwidth=1 style=dashed]
	"numpy.core.numeric" [color=blue fontsize=16 shape=box]
	"numpy.core.numeric.collections" [color=blue fontsize=16 shape=box]
		"numpy.core.numeric" -> "numpy.core.numeric.collections" [color=blue penwidth=1 style=dashed]
	"numpy.core.numeric" [color=blue fontsize=16 shape=box]
	"numpy.core.numeric.fromnumeric" [color=blue fontsize=16 shape=box]
		"numpy.core.numeric" -> "numpy.core.numeric.fromnumeric" [color=blue penwidth=1 style=dashed]
	"numpy.core.numeric" [color=blue fontsize=16 shape=box]
	"numpy.core.numeric.multiarray" [color=blue fontsize=16 shape=box]
		"numpy.core.numeric" -> "numpy.core.numeric.multiarray" [color=blue penwidth=1 style=dashed]
	"numpy.core.numeric" [color=blue fontsize=16 shape=box]
	"numpy.core.numeric.numerictypes" [color=blue fontsize=16 shape=box]
		"numpy.core.numeric" -> "numpy.core.numeric.numerictypes" [color=blue penwidth=1 style=dashed]
	"numpy.core.numeric" [color=blue fontsize=16 shape=box]
	"numpy.core.numeric.operator" [color=blue fontsize=16 shape=box]
		"numpy.core.numeric" -> "numpy.core.numeric.operator" [color=blue penwidth=1 style=dashed]
	"numpy.core.numeric" [color=blue fontsize=16 shape=box]
	"numpy.core.numeric.pickle" [color=blue fontsize=16 shape=box]
		"numpy.core.numeric" -> "numpy.core.numeric.pickle" [color=blue penwidth=1 style=dashed]
	"numpy.core.numeric" [color=blue fontsize=16 shape=box]
	"numpy.core.numeric.sys" [color=blue fontsize=16 shape=box]
		"numpy.core.numeric" -> "numpy.core.numeric.sys" [color=blue penwidth=1 style=dashed]
	"numpy.core.numeric" [color=blue fontsize=16 shape=box]
	"numpy.core.numeric.umath" [color=blue fontsize=16 shape=box]
		"numpy.core.numeric" -> "numpy.core.numeric.umath" [color=blue penwidth=1 style=dashed]
	"numpy.core.numeric" [color=blue fontsize=16 shape=box]
	"numpy.core.numeric.warnings" [color=blue fontsize=16 shape=box]
		"numpy.core.numeric" -> "numpy.core.numeric.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.numerictypes" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.numerictypes" [color=blue penwidth=1 style=dashed]
	"numpy.core.numerictypes" [color=blue fontsize=16 shape=box]
	"numpy.core.numerictypes.numbers" [color=blue fontsize=16 shape=box]
		"numpy.core.numerictypes" -> "numpy.core.numerictypes.numbers" [color=blue penwidth=1 style=dashed]
	"numpy.core.numerictypes" [color=blue fontsize=16 shape=box]
	"numpy.core.numerictypes.sys" [color=blue fontsize=16 shape=box]
		"numpy.core.numerictypes" -> "numpy.core.numerictypes.sys" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.rec" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.rec" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.records" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.records" [color=blue penwidth=1 style=dashed]
	"numpy.core.records" [color=blue fontsize=16 shape=box]
	"numpy.core.records.nt" [color=blue fontsize=16 shape=box]
		"numpy.core.records" -> "numpy.core.records.nt" [color=blue penwidth=1 style=dashed]
	"numpy.core.records" [color=blue fontsize=16 shape=box]
	"numpy.core.records.os" [color=blue fontsize=16 shape=box]
		"numpy.core.records" -> "numpy.core.records.os" [color=blue penwidth=1 style=dashed]
	"numpy.core.records" [color=blue fontsize=16 shape=box]
	"numpy.core.records.sb" [color=blue fontsize=16 shape=box]
		"numpy.core.records" -> "numpy.core.records.sb" [color=blue penwidth=1 style=dashed]
	"numpy.core.records" [color=blue fontsize=16 shape=box]
	"numpy.core.records.sys" [color=blue fontsize=16 shape=box]
		"numpy.core.records" -> "numpy.core.records.sys" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.shape_base" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.shape_base" [color=blue penwidth=1 style=dashed]
	"numpy.core" [color=blue fontsize=16 shape=box]
	"numpy.core.umath" [color=blue fontsize=16 shape=box]
		"numpy.core" -> "numpy.core.umath" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.ctypeslib" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.ctypeslib" [color=blue penwidth=1 style=dashed]
	"numpy.ctypeslib" [color=blue fontsize=16 shape=box]
	"numpy.ctypeslib.ct" [color=blue fontsize=16 shape=box]
		"numpy.ctypeslib" -> "numpy.ctypeslib.ct" [color=blue penwidth=1 style=dashed]
	"numpy.ctypeslib" [color=blue fontsize=16 shape=box]
	"numpy.ctypeslib.ctypes" [color=blue fontsize=16 shape=box]
		"numpy.ctypeslib" -> "numpy.ctypeslib.ctypes" [color=blue penwidth=1 style=dashed]
	"numpy.ctypeslib" [color=blue fontsize=16 shape=box]
	"numpy.ctypeslib.os" [color=blue fontsize=16 shape=box]
		"numpy.ctypeslib" -> "numpy.ctypeslib.os" [color=blue penwidth=1 style=dashed]
	"numpy.ctypeslib" [color=blue fontsize=16 shape=box]
	"numpy.ctypeslib.sys" [color=blue fontsize=16 shape=box]
		"numpy.ctypeslib" -> "numpy.ctypeslib.sys" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.emath" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.emath" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.fft" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.fft" [color=blue penwidth=1 style=dashed]
	"numpy.fft" [color=blue fontsize=16 shape=box]
	"numpy.fft.fftpack" [color=blue fontsize=16 shape=box]
		"numpy.fft" -> "numpy.fft.fftpack" [color=blue penwidth=1 style=dashed]
	"numpy.fft.fftpack" [color=blue fontsize=16 shape=box]
	"numpy.fft.fftpack.fftpack" [color=blue fontsize=16 shape=box]
		"numpy.fft.fftpack" -> "numpy.fft.fftpack.fftpack" [color=blue penwidth=1 style=dashed]
	"numpy.fft" [color=blue fontsize=16 shape=box]
	"numpy.fft.fftpack_lite" [color=blue fontsize=16 shape=box]
		"numpy.fft" -> "numpy.fft.fftpack_lite" [color=blue penwidth=1 style=dashed]
	"numpy.fft" [color=blue fontsize=16 shape=box]
	"numpy.fft.helper" [color=blue fontsize=16 shape=box]
		"numpy.fft" -> "numpy.fft.helper" [color=blue penwidth=1 style=dashed]
	"numpy.fft" [color=blue fontsize=16 shape=box]
	"numpy.fft.info" [color=blue fontsize=16 shape=box]
		"numpy.fft" -> "numpy.fft.info" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.lib" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.lib" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.arraypad" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.arraypad" [color=blue penwidth=1 style=dashed]
	"numpy.lib.arraypad" [color=blue fontsize=16 shape=box]
	"numpy.lib.arraypad.np" [color=blue fontsize=16 shape=box]
		"numpy.lib.arraypad" -> "numpy.lib.arraypad.np" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.arraysetops" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.arraysetops" [color=blue penwidth=1 style=dashed]
	"numpy.lib.arraysetops" [color=blue fontsize=16 shape=box]
	"numpy.lib.arraysetops.np" [color=blue fontsize=16 shape=box]
		"numpy.lib.arraysetops" -> "numpy.lib.arraysetops.np" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.arrayterator" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.arrayterator" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.emath" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.emath" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.financial" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.financial" [color=blue penwidth=1 style=dashed]
	"numpy.lib.financial" [color=blue fontsize=16 shape=box]
	"numpy.lib.financial.np" [color=blue fontsize=16 shape=box]
		"numpy.lib.financial" -> "numpy.lib.financial.np" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.format" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.format" [color=blue penwidth=1 style=dashed]
	"numpy.lib.format" [color=blue fontsize=16 shape=box]
	"numpy.lib.format.io" [color=blue fontsize=16 shape=box]
		"numpy.lib.format" -> "numpy.lib.format.io" [color=blue penwidth=1 style=dashed]
	"numpy.lib.format" [color=blue fontsize=16 shape=box]
	"numpy.lib.format.numpy" [color=blue fontsize=16 shape=box]
		"numpy.lib.format" -> "numpy.lib.format.numpy" [color=blue penwidth=1 style=dashed]
	"numpy.lib.format" [color=blue fontsize=16 shape=box]
	"numpy.lib.format.pickle" [color=blue fontsize=16 shape=box]
		"numpy.lib.format" -> "numpy.lib.format.pickle" [color=blue penwidth=1 style=dashed]
	"numpy.lib.format" [color=blue fontsize=16 shape=box]
	"numpy.lib.format.sys" [color=blue fontsize=16 shape=box]
		"numpy.lib.format" -> "numpy.lib.format.sys" [color=blue penwidth=1 style=dashed]
	"numpy.lib.format" [color=blue fontsize=16 shape=box]
	"numpy.lib.format.warnings" [color=blue fontsize=16 shape=box]
		"numpy.lib.format" -> "numpy.lib.format.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.function_base" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.function_base" [color=blue penwidth=1 style=dashed]
	"numpy.lib.function_base" [color=blue fontsize=16 shape=box]
	"numpy.lib.function_base.collections" [color=blue fontsize=16 shape=box]
		"numpy.lib.function_base" -> "numpy.lib.function_base.collections" [color=blue penwidth=1 style=dashed]
	"numpy.lib.function_base" [color=blue fontsize=16 shape=box]
	"numpy.lib.function_base.np" [color=blue fontsize=16 shape=box]
		"numpy.lib.function_base" -> "numpy.lib.function_base.np" [color=blue penwidth=1 style=dashed]
	"numpy.lib.function_base" [color=blue fontsize=16 shape=box]
	"numpy.lib.function_base.operator" [color=blue fontsize=16 shape=box]
		"numpy.lib.function_base" -> "numpy.lib.function_base.operator" [color=blue penwidth=1 style=dashed]
	"numpy.lib.function_base" [color=blue fontsize=16 shape=box]
	"numpy.lib.function_base.sys" [color=blue fontsize=16 shape=box]
		"numpy.lib.function_base" -> "numpy.lib.function_base.sys" [color=blue penwidth=1 style=dashed]
	"numpy.lib.function_base" [color=blue fontsize=16 shape=box]
	"numpy.lib.function_base.warnings" [color=blue fontsize=16 shape=box]
		"numpy.lib.function_base" -> "numpy.lib.function_base.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.index_tricks" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.index_tricks" [color=blue penwidth=1 style=dashed]
	"numpy.lib.index_tricks" [color=blue fontsize=16 shape=box]
	"numpy.lib.index_tricks.function_base" [color=blue fontsize=16 shape=box]
		"numpy.lib.index_tricks" -> "numpy.lib.index_tricks.function_base" [color=blue penwidth=1 style=dashed]
	"numpy.lib.index_tricks" [color=blue fontsize=16 shape=box]
	"numpy.lib.index_tricks.math" [color=blue fontsize=16 shape=box]
		"numpy.lib.index_tricks" -> "numpy.lib.index_tricks.math" [color=blue penwidth=1 style=dashed]
	"numpy.lib.index_tricks" [color=blue fontsize=16 shape=box]
	"numpy.lib.index_tricks.matrix" [color=blue fontsize=16 shape=box]
		"numpy.lib.index_tricks" -> "numpy.lib.index_tricks.matrix" [color=blue penwidth=1 style=dashed]
	"numpy.lib.index_tricks" [color=blue fontsize=16 shape=box]
	"numpy.lib.index_tricks.sys" [color=blue fontsize=16 shape=box]
		"numpy.lib.index_tricks" -> "numpy.lib.index_tricks.sys" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.math" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.math" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.nanfunctions" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.nanfunctions" [color=blue penwidth=1 style=dashed]
	"numpy.lib.nanfunctions" [color=blue fontsize=16 shape=box]
	"numpy.lib.nanfunctions.np" [color=blue fontsize=16 shape=box]
		"numpy.lib.nanfunctions" -> "numpy.lib.nanfunctions.np" [color=blue penwidth=1 style=dashed]
	"numpy.lib.nanfunctions" [color=blue fontsize=16 shape=box]
	"numpy.lib.nanfunctions.warnings" [color=blue fontsize=16 shape=box]
		"numpy.lib.nanfunctions" -> "numpy.lib.nanfunctions.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.npyio" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.npyio" [color=blue penwidth=1 style=dashed]
	"numpy.lib.npyio" [color=blue fontsize=16 shape=box]
	"numpy.lib.npyio.format" [color=blue fontsize=16 shape=box]
		"numpy.lib.npyio" -> "numpy.lib.npyio.format" [color=blue penwidth=1 style=dashed]
	"numpy.lib.npyio" [color=blue fontsize=16 shape=box]
	"numpy.lib.npyio.itertools" [color=blue fontsize=16 shape=box]
		"numpy.lib.npyio" -> "numpy.lib.npyio.itertools" [color=blue penwidth=1 style=dashed]
	"numpy.lib.npyio" [color=blue fontsize=16 shape=box]
	"numpy.lib.npyio.np" [color=blue fontsize=16 shape=box]
		"numpy.lib.npyio" -> "numpy.lib.npyio.np" [color=blue penwidth=1 style=dashed]
	"numpy.lib.npyio" [color=blue fontsize=16 shape=box]
	"numpy.lib.npyio.os" [color=blue fontsize=16 shape=box]
		"numpy.lib.npyio" -> "numpy.lib.npyio.os" [color=blue penwidth=1 style=dashed]
	"numpy.lib.npyio" [color=blue fontsize=16 shape=box]
	"numpy.lib.npyio.pickle" [color=blue fontsize=16 shape=box]
		"numpy.lib.npyio" -> "numpy.lib.npyio.pickle" [color=blue penwidth=1 style=dashed]
	"numpy.lib.npyio" [color=blue fontsize=16 shape=box]
	"numpy.lib.npyio.re" [color=blue fontsize=16 shape=box]
		"numpy.lib.npyio" -> "numpy.lib.npyio.re" [color=blue penwidth=1 style=dashed]
	"numpy.lib.npyio" [color=blue fontsize=16 shape=box]
	"numpy.lib.npyio.sys" [color=blue fontsize=16 shape=box]
		"numpy.lib.npyio" -> "numpy.lib.npyio.sys" [color=blue penwidth=1 style=dashed]
	"numpy.lib.npyio" [color=blue fontsize=16 shape=box]
	"numpy.lib.npyio.warnings" [color=blue fontsize=16 shape=box]
		"numpy.lib.npyio" -> "numpy.lib.npyio.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.lib.npyio" [color=blue fontsize=16 shape=box]
	"numpy.lib.npyio.weakref" [color=blue fontsize=16 shape=box]
		"numpy.lib.npyio" -> "numpy.lib.npyio.weakref" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.polynomial" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.polynomial" [color=blue penwidth=1 style=dashed]
	"numpy.lib.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.lib.polynomial.NX" [color=blue fontsize=16 shape=box]
		"numpy.lib.polynomial" -> "numpy.lib.polynomial.NX" [color=blue penwidth=1 style=dashed]
	"numpy.lib.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.lib.polynomial.re" [color=blue fontsize=16 shape=box]
		"numpy.lib.polynomial" -> "numpy.lib.polynomial.re" [color=blue penwidth=1 style=dashed]
	"numpy.lib.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.lib.polynomial.warnings" [color=blue fontsize=16 shape=box]
		"numpy.lib.polynomial" -> "numpy.lib.polynomial.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.scimath" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.scimath" [color=blue penwidth=1 style=dashed]
	"numpy.lib.scimath" [color=blue fontsize=16 shape=box]
	"numpy.lib.scimath.nt" [color=blue fontsize=16 shape=box]
		"numpy.lib.scimath" -> "numpy.lib.scimath.nt" [color=blue penwidth=1 style=dashed]
	"numpy.lib.scimath" [color=blue fontsize=16 shape=box]
	"numpy.lib.scimath.nx" [color=blue fontsize=16 shape=box]
		"numpy.lib.scimath" -> "numpy.lib.scimath.nx" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.shape_base" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.shape_base" [color=blue penwidth=1 style=dashed]
	"numpy.lib.shape_base" [color=blue fontsize=16 shape=box]
	"numpy.lib.shape_base.warnings" [color=blue fontsize=16 shape=box]
		"numpy.lib.shape_base" -> "numpy.lib.shape_base.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.stride_tricks" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.stride_tricks" [color=blue penwidth=1 style=dashed]
	"numpy.lib.stride_tricks" [color=blue fontsize=16 shape=box]
	"numpy.lib.stride_tricks.np" [color=blue fontsize=16 shape=box]
		"numpy.lib.stride_tricks" -> "numpy.lib.stride_tricks.np" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.twodim_base" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.twodim_base" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.type_check" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.type_check" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.ufunclike" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.ufunclike" [color=blue penwidth=1 style=dashed]
	"numpy.lib.ufunclike" [color=blue fontsize=16 shape=box]
	"numpy.lib.ufunclike.nx" [color=blue fontsize=16 shape=box]
		"numpy.lib.ufunclike" -> "numpy.lib.ufunclike.nx" [color=blue penwidth=1 style=dashed]
	"numpy.lib" [color=blue fontsize=16 shape=box]
	"numpy.lib.utils" [color=blue fontsize=16 shape=box]
		"numpy.lib" -> "numpy.lib.utils" [color=blue penwidth=1 style=dashed]
	"numpy.lib.utils" [color=blue fontsize=16 shape=box]
	"numpy.lib.utils.os" [color=blue fontsize=16 shape=box]
		"numpy.lib.utils" -> "numpy.lib.utils.os" [color=blue penwidth=1 style=dashed]
	"numpy.lib.utils" [color=blue fontsize=16 shape=box]
	"numpy.lib.utils.re" [color=blue fontsize=16 shape=box]
		"numpy.lib.utils" -> "numpy.lib.utils.re" [color=blue penwidth=1 style=dashed]
	"numpy.lib.utils" [color=blue fontsize=16 shape=box]
	"numpy.lib.utils.sys" [color=blue fontsize=16 shape=box]
		"numpy.lib.utils" -> "numpy.lib.utils.sys" [color=blue penwidth=1 style=dashed]
	"numpy.lib.utils" [color=blue fontsize=16 shape=box]
	"numpy.lib.utils.types" [color=blue fontsize=16 shape=box]
		"numpy.lib.utils" -> "numpy.lib.utils.types" [color=blue penwidth=1 style=dashed]
	"numpy.lib.utils" [color=blue fontsize=16 shape=box]
	"numpy.lib.utils.warnings" [color=blue fontsize=16 shape=box]
		"numpy.lib.utils" -> "numpy.lib.utils.warnings" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.linalg" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.linalg" [color=blue penwidth=1 style=dashed]
	"numpy.linalg" [color=blue fontsize=16 shape=box]
	"numpy.linalg.info" [color=blue fontsize=16 shape=box]
		"numpy.linalg" -> "numpy.linalg.info" [color=blue penwidth=1 style=dashed]
	"numpy.linalg" [color=blue fontsize=16 shape=box]
	"numpy.linalg.lapack_lite" [color=blue fontsize=16 shape=box]
		"numpy.linalg" -> "numpy.linalg.lapack_lite" [color=blue penwidth=1 style=dashed]
	"numpy.linalg" [color=blue fontsize=16 shape=box]
	"numpy.linalg.linalg" [color=blue fontsize=16 shape=box]
		"numpy.linalg" -> "numpy.linalg.linalg" [color=blue penwidth=1 style=dashed]
	"numpy.linalg.linalg" [color=blue fontsize=16 shape=box]
	"numpy.linalg.linalg.lapack_lite" [color=blue fontsize=16 shape=box]
		"numpy.linalg.linalg" -> "numpy.linalg.linalg.lapack_lite" [color=blue penwidth=1 style=dashed]
	"numpy.linalg.linalg" [color=blue fontsize=16 shape=box]
	"numpy.linalg.linalg.warnings" [color=blue fontsize=16 shape=box]
		"numpy.linalg.linalg" -> "numpy.linalg.linalg.warnings" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.ma" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.ma" [color=blue penwidth=1 style=dashed]
	"numpy.ma" [color=blue fontsize=16 shape=box]
	"numpy.ma.core" [color=blue fontsize=16 shape=box]
		"numpy.ma" -> "numpy.ma.core" [color=blue penwidth=1 style=dashed]
	"numpy.ma.core" [color=blue fontsize=16 shape=box]
	"numpy.ma.core.builtins" [color=blue fontsize=16 shape=box]
		"numpy.ma.core" -> "numpy.ma.core.builtins" [color=blue penwidth=1 style=dashed]
	"numpy.ma.core" [color=blue fontsize=16 shape=box]
	"numpy.ma.core.np" [color=blue fontsize=16 shape=box]
		"numpy.ma.core" -> "numpy.ma.core.np" [color=blue penwidth=1 style=dashed]
	"numpy.ma.core" [color=blue fontsize=16 shape=box]
	"numpy.ma.core.ntypes" [color=blue fontsize=16 shape=box]
		"numpy.ma.core" -> "numpy.ma.core.ntypes" [color=blue penwidth=1 style=dashed]
	"numpy.ma.core" [color=blue fontsize=16 shape=box]
	"numpy.ma.core.pickle" [color=blue fontsize=16 shape=box]
		"numpy.ma.core" -> "numpy.ma.core.pickle" [color=blue penwidth=1 style=dashed]
	"numpy.ma.core" [color=blue fontsize=16 shape=box]
	"numpy.ma.core.sys" [color=blue fontsize=16 shape=box]
		"numpy.ma.core" -> "numpy.ma.core.sys" [color=blue penwidth=1 style=dashed]
	"numpy.ma.core" [color=blue fontsize=16 shape=box]
	"numpy.ma.core.umath" [color=blue fontsize=16 shape=box]
		"numpy.ma.core" -> "numpy.ma.core.umath" [color=blue penwidth=1 style=dashed]
	"numpy.ma.core" [color=blue fontsize=16 shape=box]
	"numpy.ma.core.warnings" [color=blue fontsize=16 shape=box]
		"numpy.ma.core" -> "numpy.ma.core.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.ma" [color=blue fontsize=16 shape=box]
	"numpy.ma.extras" [color=blue fontsize=16 shape=box]
		"numpy.ma" -> "numpy.ma.extras" [color=blue penwidth=1 style=dashed]
	"numpy.ma.extras" [color=blue fontsize=16 shape=box]
	"numpy.ma.extras.itertools" [color=blue fontsize=16 shape=box]
		"numpy.ma.extras" -> "numpy.ma.extras.itertools" [color=blue penwidth=1 style=dashed]
	"numpy.ma.extras" [color=blue fontsize=16 shape=box]
	"numpy.ma.extras.ma" [color=blue fontsize=16 shape=box]
		"numpy.ma.extras" -> "numpy.ma.extras.ma" [color=blue penwidth=1 style=dashed]
	"numpy.ma.extras" [color=blue fontsize=16 shape=box]
	"numpy.ma.extras.np" [color=blue fontsize=16 shape=box]
		"numpy.ma.extras" -> "numpy.ma.extras.np" [color=blue penwidth=1 style=dashed]
	"numpy.ma.extras" [color=blue fontsize=16 shape=box]
	"numpy.ma.extras.umath" [color=blue fontsize=16 shape=box]
		"numpy.ma.extras" -> "numpy.ma.extras.umath" [color=blue penwidth=1 style=dashed]
	"numpy.ma.extras" [color=blue fontsize=16 shape=box]
	"numpy.ma.extras.warnings" [color=blue fontsize=16 shape=box]
		"numpy.ma.extras" -> "numpy.ma.extras.warnings" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.math" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.math" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.matrixlib" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.matrixlib" [color=blue penwidth=1 style=dashed]
	"numpy.matrixlib" [color=blue fontsize=16 shape=box]
	"numpy.matrixlib.defmatrix" [color=blue fontsize=16 shape=box]
		"numpy.matrixlib" -> "numpy.matrixlib.defmatrix" [color=blue penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix" [color=blue fontsize=16 shape=box]
	"numpy.matrixlib.defmatrix.N" [color=blue fontsize=16 shape=box]
		"numpy.matrixlib.defmatrix" -> "numpy.matrixlib.defmatrix.N" [color=blue penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix" [color=blue fontsize=16 shape=box]
	"numpy.matrixlib.defmatrix.sys" [color=blue fontsize=16 shape=box]
		"numpy.matrixlib.defmatrix" -> "numpy.matrixlib.defmatrix.sys" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.polynomial" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.polynomial" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.chebyshev" [color=blue fontsize=16 shape=box]
		"numpy.polynomial" -> "numpy.polynomial.chebyshev" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.chebyshev.la" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.chebyshev" -> "numpy.polynomial.chebyshev.la" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.chebyshev.np" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.chebyshev" -> "numpy.polynomial.chebyshev.np" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.chebyshev.pu" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.chebyshev" -> "numpy.polynomial.chebyshev.pu" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.chebyshev.warnings" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.chebyshev" -> "numpy.polynomial.chebyshev.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.hermite" [color=blue fontsize=16 shape=box]
		"numpy.polynomial" -> "numpy.polynomial.hermite" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.hermite" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.hermite.la" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.hermite" -> "numpy.polynomial.hermite.la" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.hermite" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.hermite.np" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.hermite" -> "numpy.polynomial.hermite.np" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.hermite" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.hermite.pu" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.hermite" -> "numpy.polynomial.hermite.pu" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.hermite" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.hermite.warnings" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.hermite" -> "numpy.polynomial.hermite.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.hermite_e" [color=blue fontsize=16 shape=box]
		"numpy.polynomial" -> "numpy.polynomial.hermite_e" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.hermite_e.la" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.hermite_e" -> "numpy.polynomial.hermite_e.la" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.hermite_e.np" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.hermite_e" -> "numpy.polynomial.hermite_e.np" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.hermite_e.pu" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.hermite_e" -> "numpy.polynomial.hermite_e.pu" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.hermite_e.warnings" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.hermite_e" -> "numpy.polynomial.hermite_e.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.laguerre" [color=blue fontsize=16 shape=box]
		"numpy.polynomial" -> "numpy.polynomial.laguerre" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.laguerre" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.laguerre.la" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.laguerre" -> "numpy.polynomial.laguerre.la" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.laguerre" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.laguerre.np" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.laguerre" -> "numpy.polynomial.laguerre.np" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.laguerre" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.laguerre.pu" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.laguerre" -> "numpy.polynomial.laguerre.pu" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.laguerre" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.laguerre.warnings" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.laguerre" -> "numpy.polynomial.laguerre.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.legendre" [color=blue fontsize=16 shape=box]
		"numpy.polynomial" -> "numpy.polynomial.legendre" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.legendre" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.legendre.la" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.legendre" -> "numpy.polynomial.legendre.la" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.legendre" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.legendre.np" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.legendre" -> "numpy.polynomial.legendre.np" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.legendre" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.legendre.pu" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.legendre" -> "numpy.polynomial.legendre.pu" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.legendre" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.legendre.warnings" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.legendre" -> "numpy.polynomial.legendre.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.polynomial" [color=blue fontsize=16 shape=box]
		"numpy.polynomial" -> "numpy.polynomial.polynomial" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.polynomial.la" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.polynomial" -> "numpy.polynomial.polynomial.la" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.polynomial.np" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.polynomial" -> "numpy.polynomial.polynomial.np" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.polynomial.pu" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.polynomial" -> "numpy.polynomial.polynomial.pu" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.polynomial.warnings" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.polynomial" -> "numpy.polynomial.polynomial.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.polyutils" [color=blue fontsize=16 shape=box]
		"numpy.polynomial" -> "numpy.polynomial.polyutils" [color=blue penwidth=1 style=dashed]
	"numpy.polynomial.polyutils" [color=blue fontsize=16 shape=box]
	"numpy.polynomial.polyutils.np" [color=blue fontsize=16 shape=box]
		"numpy.polynomial.polyutils" -> "numpy.polynomial.polyutils.np" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.random" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.random" [color=blue penwidth=1 style=dashed]
	"numpy.random" [color=blue fontsize=16 shape=box]
	"numpy.random.info" [color=blue fontsize=16 shape=box]
		"numpy.random" -> "numpy.random.info" [color=blue penwidth=1 style=dashed]
	"numpy.random" [color=blue fontsize=16 shape=box]
	"numpy.random.mtrand" [color=blue fontsize=16 shape=box]
		"numpy.random" -> "numpy.random.mtrand" [color=blue penwidth=1 style=dashed]
	"numpy.random.mtrand" [color=blue fontsize=16 shape=box]
	"numpy.random.mtrand.np" [color=blue fontsize=16 shape=box]
		"numpy.random.mtrand" -> "numpy.random.mtrand.np" [color=blue penwidth=1 style=dashed]
	"numpy.random.mtrand" [color=blue fontsize=16 shape=box]
	"numpy.random.mtrand.operator" [color=blue fontsize=16 shape=box]
		"numpy.random.mtrand" -> "numpy.random.mtrand.operator" [color=blue penwidth=1 style=dashed]
	"numpy.random.mtrand" [color=blue fontsize=16 shape=box]
	"numpy.random.mtrand.warnings" [color=blue fontsize=16 shape=box]
		"numpy.random.mtrand" -> "numpy.random.mtrand.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.random" [color=blue fontsize=16 shape=box]
	"numpy.random.np" [color=blue fontsize=16 shape=box]
		"numpy.random" -> "numpy.random.np" [color=blue penwidth=1 style=dashed]
	"numpy.random" [color=blue fontsize=16 shape=box]
	"numpy.random.operator" [color=blue fontsize=16 shape=box]
		"numpy.random" -> "numpy.random.operator" [color=blue penwidth=1 style=dashed]
	"numpy.random" [color=blue fontsize=16 shape=box]
	"numpy.random.warnings" [color=blue fontsize=16 shape=box]
		"numpy.random" -> "numpy.random.warnings" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.rec" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.rec" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.testing" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.testing" [color=blue penwidth=1 style=dashed]
	"numpy.testing" [color=blue fontsize=16 shape=box]
	"numpy.testing.dec" [color=blue fontsize=16 shape=box]
		"numpy.testing" -> "numpy.testing.dec" [color=blue penwidth=1 style=dashed]
	"numpy.testing" [color=blue fontsize=16 shape=box]
	"numpy.testing.decorators" [color=blue fontsize=16 shape=box]
		"numpy.testing" -> "numpy.testing.decorators" [color=blue penwidth=1 style=dashed]
	"numpy.testing.decorators" [color=blue fontsize=16 shape=box]
	"numpy.testing.decorators.collections" [color=blue fontsize=16 shape=box]
		"numpy.testing.decorators" -> "numpy.testing.decorators.collections" [color=blue penwidth=1 style=dashed]
	"numpy.testing.decorators" [color=blue fontsize=16 shape=box]
	"numpy.testing.decorators.warnings" [color=blue fontsize=16 shape=box]
		"numpy.testing.decorators" -> "numpy.testing.decorators.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.testing" [color=blue fontsize=16 shape=box]
	"numpy.testing.nosetester" [color=blue fontsize=16 shape=box]
		"numpy.testing" -> "numpy.testing.nosetester" [color=blue penwidth=1 style=dashed]
	"numpy.testing.nosetester" [color=blue fontsize=16 shape=box]
	"numpy.testing.nosetester.np" [color=blue fontsize=16 shape=box]
		"numpy.testing.nosetester" -> "numpy.testing.nosetester.np" [color=blue penwidth=1 style=dashed]
	"numpy.testing.nosetester" [color=blue fontsize=16 shape=box]
	"numpy.testing.nosetester.os" [color=blue fontsize=16 shape=box]
		"numpy.testing.nosetester" -> "numpy.testing.nosetester.os" [color=blue penwidth=1 style=dashed]
	"numpy.testing.nosetester" [color=blue fontsize=16 shape=box]
	"numpy.testing.nosetester.sys" [color=blue fontsize=16 shape=box]
		"numpy.testing.nosetester" -> "numpy.testing.nosetester.sys" [color=blue penwidth=1 style=dashed]
	"numpy.testing.nosetester" [color=blue fontsize=16 shape=box]
	"numpy.testing.nosetester.warnings" [color=blue fontsize=16 shape=box]
		"numpy.testing.nosetester" -> "numpy.testing.nosetester.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.testing" [color=blue fontsize=16 shape=box]
	"numpy.testing.utils" [color=blue fontsize=16 shape=box]
		"numpy.testing" -> "numpy.testing.utils" [color=blue penwidth=1 style=dashed]
	"numpy.testing.utils" [color=blue fontsize=16 shape=box]
	"numpy.testing.utils.contextlib" [color=blue fontsize=16 shape=box]
		"numpy.testing.utils" -> "numpy.testing.utils.contextlib" [color=blue penwidth=1 style=dashed]
	"numpy.testing.utils" [color=blue fontsize=16 shape=box]
	"numpy.testing.utils.operator" [color=blue fontsize=16 shape=box]
		"numpy.testing.utils" -> "numpy.testing.utils.operator" [color=blue penwidth=1 style=dashed]
	"numpy.testing.utils" [color=blue fontsize=16 shape=box]
	"numpy.testing.utils.os" [color=blue fontsize=16 shape=box]
		"numpy.testing.utils" -> "numpy.testing.utils.os" [color=blue penwidth=1 style=dashed]
	"numpy.testing.utils" [color=blue fontsize=16 shape=box]
	"numpy.testing.utils.re" [color=blue fontsize=16 shape=box]
		"numpy.testing.utils" -> "numpy.testing.utils.re" [color=blue penwidth=1 style=dashed]
	"numpy.testing.utils" [color=blue fontsize=16 shape=box]
	"numpy.testing.utils.shutil" [color=blue fontsize=16 shape=box]
		"numpy.testing.utils" -> "numpy.testing.utils.shutil" [color=blue penwidth=1 style=dashed]
	"numpy.testing.utils" [color=blue fontsize=16 shape=box]
	"numpy.testing.utils.sys" [color=blue fontsize=16 shape=box]
		"numpy.testing.utils" -> "numpy.testing.utils.sys" [color=blue penwidth=1 style=dashed]
	"numpy.testing.utils" [color=blue fontsize=16 shape=box]
	"numpy.testing.utils.warnings" [color=blue fontsize=16 shape=box]
		"numpy.testing.utils" -> "numpy.testing.utils.warnings" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.version" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.version" [color=blue penwidth=1 style=dashed]
	numpy [color=blue fontsize=16 shape=box]
	"numpy.warnings" [color=blue fontsize=16 shape=box]
		numpy -> "numpy.warnings" [color=blue penwidth=1 style=dashed]
	"numpy.lib.npyio.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio.sys" -> "numpy.lib.npyio.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio.sys" -> "numpy.lib.npyio.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio.sys" -> "numpy.lib.npyio.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio.sys" -> "numpy.lib.npyio.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.info-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.info" -> "numpy.core.info-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.info-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.info" -> "numpy.core.info-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.info-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.info" -> "numpy.core.info-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.info-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.info" -> "numpy.core.info-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.info.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.core.info-nofta" -> "numpy.core.info.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.core.info.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.info-nofta" -> "numpy.core.info.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.info.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.info-nofta" -> "numpy.core.info.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.info.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.info-nofta" -> "numpy.core.info.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.info.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.info-nofta" -> "numpy.core.info.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.info.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.core.info-nofta" -> "numpy.core.info.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.core.info.depends" [color=black fontsize=16 shape=none]
		"numpy.core.info-nofta" -> "numpy.core.info.depends" [color=black penwidth=1 style=dashed]
	"numpy.core.info.division" [color=black fontsize=16 shape=none]
		"numpy.core.info-nofta" -> "numpy.core.info.division" [color=black penwidth=1 style=dashed]
	"numpy.core.info.global_symbols" [color=black fontsize=16 shape=none]
		"numpy.core.info-nofta" -> "numpy.core.info.global_symbols" [color=black penwidth=1 style=dashed]
	"numpy.core.info.print_function" [color=black fontsize=16 shape=none]
		"numpy.core.info-nofta" -> "numpy.core.info.print_function" [color=black penwidth=1 style=dashed]
	"numpy.random.mtrand.operator-builtins" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand.operator" -> "numpy.random.mtrand.operator-builtins" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.operator-classes" [color=gold fontsize=16 shape=none]
		"numpy.random.mtrand.operator" -> "numpy.random.mtrand.operator-classes" [color=gold penwidth=1 style=dashed]
	"numpy.random.mtrand.operator-functions" [color=purple fontsize=16 shape=none]
		"numpy.random.mtrand.operator" -> "numpy.random.mtrand.operator-functions" [color=purple penwidth=1 style=dashed]
	"numpy.random.mtrand.operator-nofta" [color=black fontsize=16 shape=none]
		"numpy.random.mtrand.operator" -> "numpy.random.mtrand.operator-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.umath-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.core.umath" -> "numpy.ma.core.umath-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.core.umath-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.core.umath" -> "numpy.ma.core.umath-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.umath-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.core.umath" -> "numpy.ma.core.umath-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.umath-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.core.umath" -> "numpy.ma.core.umath-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.shutil-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.utils.shutil" -> "numpy.testing.utils.shutil-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.utils.shutil-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils.shutil" -> "numpy.testing.utils.shutil-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.shutil-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils.shutil" -> "numpy.testing.utils.shutil-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.shutil-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.utils.shutil" -> "numpy.testing.utils.shutil-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.math-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.index_tricks.math" -> "numpy.lib.index_tricks.math-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.index_tricks.math-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks.math" -> "numpy.lib.index_tricks.math-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks.math-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks.math" -> "numpy.lib.index_tricks.math-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.math-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks.math" -> "numpy.lib.index_tricks.math-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio.np" -> "numpy.lib.npyio.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio.np" -> "numpy.lib.npyio.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio.np" -> "numpy.lib.npyio.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio.np" -> "numpy.lib.npyio.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.collections-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numeric.collections" -> "numpy.core.numeric.collections-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.collections-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric.collections" -> "numpy.core.numeric.collections-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.collections-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric.collections" -> "numpy.core.numeric.collections-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.collections-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numeric.collections" -> "numpy.core.numeric.collections-nofta" [color=black penwidth=1 style=dashed]
	"numpy.char-builtins" [color=red fontsize=16 shape=none]
		"numpy.char" -> "numpy.char-builtins" [color=red penwidth=1 style=dashed]
	"numpy.char-classes" [color=gold fontsize=16 shape=none]
		"numpy.char" -> "numpy.char-classes" [color=gold penwidth=1 style=dashed]
	"numpy.char-functions" [color=purple fontsize=16 shape=none]
		"numpy.char" -> "numpy.char-functions" [color=purple penwidth=1 style=dashed]
	"numpy.char-nofta" [color=black fontsize=16 shape=none]
		"numpy.char" -> "numpy.char-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.re-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.polynomial.re" -> "numpy.lib.polynomial.re-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.polynomial.re-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.polynomial.re" -> "numpy.lib.polynomial.re-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.polynomial.re-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial.re" -> "numpy.lib.polynomial.re-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.re-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial.re" -> "numpy.lib.polynomial.re-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numerictypes" -> "numpy.core.numerictypes-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numerictypes.array" [color=red fontsize=16 shape=none]
		"numpy.core.numerictypes-builtins" -> "numpy.core.numerictypes.array" [color=red penwidth=1 style=dashed]
	"numpy.core.numerictypes.busday_count" [color=red fontsize=16 shape=none]
		"numpy.core.numerictypes-builtins" -> "numpy.core.numerictypes.busday_count" [color=red penwidth=1 style=dashed]
	"numpy.core.numerictypes.busday_offset" [color=red fontsize=16 shape=none]
		"numpy.core.numerictypes-builtins" -> "numpy.core.numerictypes.busday_offset" [color=red penwidth=1 style=dashed]
	"numpy.core.numerictypes.datetime_as_string" [color=red fontsize=16 shape=none]
		"numpy.core.numerictypes-builtins" -> "numpy.core.numerictypes.datetime_as_string" [color=red penwidth=1 style=dashed]
	"numpy.core.numerictypes.datetime_data" [color=red fontsize=16 shape=none]
		"numpy.core.numerictypes-builtins" -> "numpy.core.numerictypes.datetime_data" [color=red penwidth=1 style=dashed]
	"numpy.core.numerictypes.empty" [color=red fontsize=16 shape=none]
		"numpy.core.numerictypes-builtins" -> "numpy.core.numerictypes.empty" [color=red penwidth=1 style=dashed]
	"numpy.core.numerictypes.is_busday" [color=red fontsize=16 shape=none]
		"numpy.core.numerictypes-builtins" -> "numpy.core.numerictypes.is_busday" [color=red penwidth=1 style=dashed]
	"numpy.core.numerictypes-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes" -> "numpy.core.numerictypes-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes._typedict" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes._typedict" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.bool" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.bool" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.bool8" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.bool8" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.bool_" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.bool_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.buffer_type" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.buffer_type" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.busdaycalendar" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.busdaycalendar" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.byte" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.byte" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.bytes" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.bytes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.bytes_" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.bytes_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.cdouble" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.cdouble" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.cfloat" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.cfloat" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.character" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.character" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.clongdouble" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.clongdouble" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.clongfloat" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.clongfloat" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.complex" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.complex" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.complex128" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.complex128" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.complex256" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.complex256" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.complex64" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.complex64" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.complex_" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.complex_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.complexfloating" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.complexfloating" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.csingle" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.csingle" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.datetime64" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.datetime64" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.double" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.double" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.dtype" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.dtype" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.flexible" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.flexible" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.float" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.float" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.float128" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.float128" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.float16" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.float16" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.float32" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.float32" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.float64" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.float64" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.float_" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.float_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.floating" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.floating" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.generic" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.generic" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.half" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.half" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.inexact" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.inexact" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.int" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.int" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.int0" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.int0" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.int16" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.int16" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.int32" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.int32" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.int64" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.int64" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.int8" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.int8" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.int_" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.int_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.intc" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.intc" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.integer" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.integer" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.intp" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.intp" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.long" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.long" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.longcomplex" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.longcomplex" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.longdouble" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.longdouble" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.longfloat" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.longfloat" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.longlong" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.longlong" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.ndarray" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.number" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.number" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.object" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.object" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.object0" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.object0" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.object_" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.object_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.short" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.short" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.signedinteger" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.signedinteger" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.single" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.single" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.singlecomplex" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.singlecomplex" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.str" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.str" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.str_" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.str_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.string0" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.string0" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.string_" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.string_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.timedelta64" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.timedelta64" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.ubyte" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.ubyte" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.uint" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.uint" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.uint0" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.uint0" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.uint16" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.uint16" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.uint32" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.uint32" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.uint64" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.uint64" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.uint8" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.uint8" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.uintc" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.uintc" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.uintp" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.uintp" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.ulonglong" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.ulonglong" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.unicode" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.unicode" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.unicode0" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.unicode0" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.unicode_" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.unicode_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.unsignedinteger" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.unsignedinteger" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.ushort" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.ushort" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.void" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.void" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.void0" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes-classes" -> "numpy.core.numerictypes.void0" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes" -> "numpy.core.numerictypes-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._add_aliases" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._add_aliases" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._add_array_type" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._add_array_type" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._add_integer_aliases" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._add_integer_aliases" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._add_types" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._add_types" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._can_coerce_all" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._can_coerce_all" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._construct_char_code_lookup" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._construct_char_code_lookup" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._construct_lookups" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._construct_lookups" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._evalname" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._evalname" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._find_common_coerce" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._find_common_coerce" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._python_type" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._python_type" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._register_types" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._register_types" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._set_array_types" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._set_array_types" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes._set_up_aliases" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes._set_up_aliases" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.bitname" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes.bitname" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.english_capitalize" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes.english_capitalize" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.english_lower" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes.english_lower" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.english_upper" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes.english_upper" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.find_common_type" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes.find_common_type" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.issctype" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes.issctype" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.issubclass_" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes.issubclass_" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.issubdtype" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes.issubdtype" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.issubsctype" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes.issubsctype" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.maximum_sctype" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes.maximum_sctype" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.obj2sctype" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes.obj2sctype" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.sctype2char" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes-functions" -> "numpy.core.numerictypes.sctype2char" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes" -> "numpy.core.numerictypes-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.LOWER_TABLE" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.LOWER_TABLE" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.ScalarType" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.ScalarType" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.UPPER_TABLE" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.UPPER_TABLE" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.__all__" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.__all__" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.__len_test_types" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.__len_test_types" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.__test_types" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.__test_types" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes._alignment" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes._alignment" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes._all_chars" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes._all_chars" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes._ascii_lower" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes._ascii_lower" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes._ascii_upper" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes._ascii_upper" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes._kind_list" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes._kind_list" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes._m" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes._m" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes._maxvals" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes._maxvals" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes._minvals" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes._minvals" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes._python_types" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes._python_types" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes._sctype2char_dict" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes._sctype2char_dict" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes._typestr" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes._typestr" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.allTypes" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.allTypes" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.cast" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.cast" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.division" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.division" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.genericTypeRank" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.genericTypeRank" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.nbytes" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.nbytes" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.print_function" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.print_function" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.sctypeDict" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.sctypeDict" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.sctypeNA" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.sctypeNA" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.sctypes" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.sctypes" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.typeDict" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.typeDict" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.typeNA" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.typeNA" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.typecodes" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.typecodes" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.typeinfo" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.typeinfo" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.val" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes-nofta" -> "numpy.core.numerictypes.val" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.legendre" -> "numpy.polynomial.legendre-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.legendre-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.legendre" -> "numpy.polynomial.legendre-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.legendre.ABCPolyBase" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.legendre-classes" -> "numpy.polynomial.legendre.ABCPolyBase" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.legendre.Legendre" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.legendre-classes" -> "numpy.polynomial.legendre.Legendre" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.legendre-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre" -> "numpy.polynomial.legendre-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.leg2poly" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.leg2poly" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legadd" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legadd" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legcompanion" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legcompanion" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legder" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legder" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legdiv" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legdiv" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legfit" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legfit" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legfromroots" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legfromroots" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.leggauss" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.leggauss" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.leggrid2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.leggrid2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.leggrid3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.leggrid3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legint" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legint" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legline" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legline" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legmul" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legmul" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legmulx" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legmulx" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legpow" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legpow" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legroots" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legroots" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legsub" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legsub" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legtrim" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legtrim" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legval" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legval" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legval2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legval2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legval3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legval3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legvander" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legvander" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legvander2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legvander2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legvander3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legvander3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legweight" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.legweight" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.poly2leg" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre-functions" -> "numpy.polynomial.legendre.poly2leg" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre" -> "numpy.polynomial.legendre-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.__all__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.__all__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.__doc__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.__file__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.__file__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.__name__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.__name__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.__package__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.__package__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.division" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.division" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legdomain" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.legdomain" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legone" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.legone" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legx" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.legx" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.legzero" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.legzero" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.print_function" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre-nofta" -> "numpy.polynomial.legendre.print_function" [color=black penwidth=1 style=dashed]
	"numpy.core.records.nt-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.records.nt" -> "numpy.core.records.nt-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.records.nt-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.records.nt" -> "numpy.core.records.nt-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.records.nt-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.records.nt" -> "numpy.core.records.nt-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.records.nt-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.records.nt" -> "numpy.core.records.nt-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.operator-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.utils.operator" -> "numpy.testing.utils.operator-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.utils.operator-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils.operator" -> "numpy.testing.utils.operator-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.operator-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils.operator" -> "numpy.testing.utils.operator-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.operator-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.utils.operator" -> "numpy.testing.utils.operator-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base.np" -> "numpy.lib.function_base.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base.np" -> "numpy.lib.function_base.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base.np" -> "numpy.lib.function_base.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base.np" -> "numpy.lib.function_base.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.polyutils.np" -> "numpy.polynomial.polyutils.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polyutils.np" -> "numpy.polynomial.polyutils.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polyutils.np" -> "numpy.polynomial.polyutils.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polyutils.np" -> "numpy.polynomial.polyutils.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.linalg-builtins" [color=red fontsize=16 shape=none]
		"numpy.linalg" -> "numpy.linalg-builtins" [color=red penwidth=1 style=dashed]
	"numpy.linalg-classes" [color=gold fontsize=16 shape=none]
		"numpy.linalg" -> "numpy.linalg-classes" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.LinAlgError" [color=gold fontsize=16 shape=none]
		"numpy.linalg-classes" -> "numpy.linalg.LinAlgError" [color=gold penwidth=1 style=dashed]
	"numpy.linalg-functions" [color=purple fontsize=16 shape=none]
		"numpy.linalg" -> "numpy.linalg-functions" [color=purple penwidth=1 style=dashed]
	"numpy.linalg._numpy_tester" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg._numpy_tester" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.cholesky" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.cholesky" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.cond" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.cond" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.det" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.det" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.eig" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.eig" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.eigh" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.eigh" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.eigvals" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.eigvals" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.eigvalsh" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.eigvalsh" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.inv" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.inv" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.lstsq" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.lstsq" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.matrix_power" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.matrix_power" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.matrix_rank" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.matrix_rank" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.multi_dot" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.multi_dot" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.norm" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.norm" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.pinv" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.pinv" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.qr" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.qr" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.slogdet" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.slogdet" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.solve" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.solve" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.svd" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.svd" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.tensorinv" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.tensorinv" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.tensorsolve" [color=purple fontsize=16 shape=none]
		"numpy.linalg-functions" -> "numpy.linalg.tensorsolve" [color=purple penwidth=1 style=dashed]
	"numpy.linalg-nofta" [color=black fontsize=16 shape=none]
		"numpy.linalg" -> "numpy.linalg-nofta" [color=black penwidth=1 style=dashed]
	"numpy.linalg.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.linalg-nofta" -> "numpy.linalg.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.__doc__" [color=black fontsize=16 shape=none]
		"numpy.linalg-nofta" -> "numpy.linalg.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.__file__" [color=black fontsize=16 shape=none]
		"numpy.linalg-nofta" -> "numpy.linalg.__file__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.__name__" [color=black fontsize=16 shape=none]
		"numpy.linalg-nofta" -> "numpy.linalg.__name__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.__package__" [color=black fontsize=16 shape=none]
		"numpy.linalg-nofta" -> "numpy.linalg.__package__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.__path__" [color=black fontsize=16 shape=none]
		"numpy.linalg-nofta" -> "numpy.linalg.__path__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.linalg-nofta" -> "numpy.linalg.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.linalg.bench" [color=black fontsize=16 shape=none]
		"numpy.linalg-nofta" -> "numpy.linalg.bench" [color=black penwidth=1 style=dashed]
	"numpy.linalg.division" [color=black fontsize=16 shape=none]
		"numpy.linalg-nofta" -> "numpy.linalg.division" [color=black penwidth=1 style=dashed]
	"numpy.linalg.print_function" [color=black fontsize=16 shape=none]
		"numpy.linalg-nofta" -> "numpy.linalg.print_function" [color=black penwidth=1 style=dashed]
	"numpy.linalg.test" [color=black fontsize=16 shape=none]
		"numpy.linalg-nofta" -> "numpy.linalg.test" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numeric.warnings" -> "numpy.core.numeric.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric.warnings" -> "numpy.core.numeric.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric.warnings" -> "numpy.core.numeric.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numeric.warnings" -> "numpy.core.numeric.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.ntypes-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.core.ntypes" -> "numpy.ma.core.ntypes-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.core.ntypes-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.core.ntypes" -> "numpy.ma.core.ntypes-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.ntypes-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.core.ntypes" -> "numpy.ma.core.ntypes-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.ntypes-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.core.ntypes" -> "numpy.ma.core.ntypes-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing" -> "numpy.testing-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing" -> "numpy.testing-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.IgnoreException" [color=gold fontsize=16 shape=none]
		"numpy.testing-classes" -> "numpy.testing.IgnoreException" [color=gold penwidth=1 style=dashed]
	"numpy.testing.KnownFailureException" [color=gold fontsize=16 shape=none]
		"numpy.testing-classes" -> "numpy.testing.KnownFailureException" [color=gold penwidth=1 style=dashed]
	"numpy.testing.SkipTest" [color=gold fontsize=16 shape=none]
		"numpy.testing-classes" -> "numpy.testing.SkipTest" [color=gold penwidth=1 style=dashed]
	"numpy.testing.TestCase" [color=gold fontsize=16 shape=none]
		"numpy.testing-classes" -> "numpy.testing.TestCase" [color=gold penwidth=1 style=dashed]
	"numpy.testing.Tester" [color=gold fontsize=16 shape=none]
		"numpy.testing-classes" -> "numpy.testing.Tester" [color=gold penwidth=1 style=dashed]
	"numpy.testing.clear_and_catch_warnings" [color=gold fontsize=16 shape=none]
		"numpy.testing-classes" -> "numpy.testing.clear_and_catch_warnings" [color=gold penwidth=1 style=dashed]
	"numpy.testing-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing" -> "numpy.testing-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_allclose" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_allclose" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_almost_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_almost_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_approx_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_approx_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_array_almost_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_array_almost_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_array_almost_equal_nulp" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_array_almost_equal_nulp" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_array_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_array_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_array_less" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_array_less" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_array_max_ulp" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_array_max_ulp" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_no_warnings" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_no_warnings" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_raises" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_raises" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_raises_regex" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_raises_regex" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_string_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_string_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.assert_warns" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.assert_warns" [color=purple penwidth=1 style=dashed]
	"numpy.testing.build_err_msg" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.build_err_msg" [color=purple penwidth=1 style=dashed]
	"numpy.testing.decorate_methods" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.decorate_methods" [color=purple penwidth=1 style=dashed]
	"numpy.testing.jiffies" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.jiffies" [color=purple penwidth=1 style=dashed]
	"numpy.testing.measure" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.measure" [color=purple penwidth=1 style=dashed]
	"numpy.testing.memusage" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.memusage" [color=purple penwidth=1 style=dashed]
	"numpy.testing.print_assert_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.print_assert_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.raises" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.raises" [color=purple penwidth=1 style=dashed]
	"numpy.testing.rand" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.rand" [color=purple penwidth=1 style=dashed]
	"numpy.testing.run_module_suite" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.run_module_suite" [color=purple penwidth=1 style=dashed]
	"numpy.testing.rundocs" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.rundocs" [color=purple penwidth=1 style=dashed]
	"numpy.testing.runstring" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.runstring" [color=purple penwidth=1 style=dashed]
	"numpy.testing.tempdir" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.tempdir" [color=purple penwidth=1 style=dashed]
	"numpy.testing.temppath" [color=purple fontsize=16 shape=none]
		"numpy.testing-functions" -> "numpy.testing.temppath" [color=purple penwidth=1 style=dashed]
	"numpy.testing-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing" -> "numpy.testing-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.testing-nofta" -> "numpy.testing.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.testing.__doc__" [color=black fontsize=16 shape=none]
		"numpy.testing-nofta" -> "numpy.testing.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.testing.__file__" [color=black fontsize=16 shape=none]
		"numpy.testing-nofta" -> "numpy.testing.__file__" [color=black penwidth=1 style=dashed]
	"numpy.testing.__name__" [color=black fontsize=16 shape=none]
		"numpy.testing-nofta" -> "numpy.testing.__name__" [color=black penwidth=1 style=dashed]
	"numpy.testing.__package__" [color=black fontsize=16 shape=none]
		"numpy.testing-nofta" -> "numpy.testing.__package__" [color=black penwidth=1 style=dashed]
	"numpy.testing.__path__" [color=black fontsize=16 shape=none]
		"numpy.testing-nofta" -> "numpy.testing.__path__" [color=black penwidth=1 style=dashed]
	"numpy.testing.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.testing-nofta" -> "numpy.testing.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.testing.division" [color=black fontsize=16 shape=none]
		"numpy.testing-nofta" -> "numpy.testing.division" [color=black penwidth=1 style=dashed]
	"numpy.testing.print_function" [color=black fontsize=16 shape=none]
		"numpy.testing-nofta" -> "numpy.testing.print_function" [color=black penwidth=1 style=dashed]
	"numpy.testing.test" [color=black fontsize=16 shape=none]
		"numpy.testing-nofta" -> "numpy.testing.test" [color=black penwidth=1 style=dashed]
	"numpy.testing.verbose" [color=black fontsize=16 shape=none]
		"numpy.testing-nofta" -> "numpy.testing.verbose" [color=black penwidth=1 style=dashed]
	"numpy.core.rec-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.rec" -> "numpy.core.rec-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.rec-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.rec" -> "numpy.core.rec-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.rec-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.rec" -> "numpy.core.rec-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.rec-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.rec" -> "numpy.core.rec-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.la-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.laguerre.la" -> "numpy.polynomial.laguerre.la-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.la-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.laguerre.la" -> "numpy.polynomial.laguerre.la-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.la-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre.la" -> "numpy.polynomial.laguerre.la-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.la-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre.la" -> "numpy.polynomial.laguerre.la-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.umath-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.umath" -> "numpy.core.umath-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.umath._add_newdoc_ufunc" [color=red fontsize=16 shape=none]
		"numpy.core.umath-builtins" -> "numpy.core.umath._add_newdoc_ufunc" [color=red penwidth=1 style=dashed]
	"numpy.core.umath.frompyfunc" [color=red fontsize=16 shape=none]
		"numpy.core.umath-builtins" -> "numpy.core.umath.frompyfunc" [color=red penwidth=1 style=dashed]
	"numpy.core.umath.geterrobj" [color=red fontsize=16 shape=none]
		"numpy.core.umath-builtins" -> "numpy.core.umath.geterrobj" [color=red penwidth=1 style=dashed]
	"numpy.core.umath.seterrobj" [color=red fontsize=16 shape=none]
		"numpy.core.umath-builtins" -> "numpy.core.umath.seterrobj" [color=red penwidth=1 style=dashed]
	"numpy.core.umath-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.umath" -> "numpy.core.umath-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.umath-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.umath" -> "numpy.core.umath-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.umath-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.umath" -> "numpy.core.umath-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.ERR_CALL" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.ERR_CALL" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.ERR_DEFAULT" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.ERR_DEFAULT" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.ERR_IGNORE" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.ERR_IGNORE" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.ERR_LOG" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.ERR_LOG" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.ERR_PRINT" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.ERR_PRINT" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.ERR_RAISE" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.ERR_RAISE" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.ERR_WARN" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.ERR_WARN" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.FLOATING_POINT_SUPPORT" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.FLOATING_POINT_SUPPORT" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.FPE_DIVIDEBYZERO" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.FPE_DIVIDEBYZERO" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.FPE_INVALID" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.FPE_INVALID" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.FPE_OVERFLOW" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.FPE_OVERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.FPE_UNDERFLOW" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.FPE_UNDERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.NAN" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.NAN" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.NINF" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.NINF" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.NZERO" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.NZERO" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.PINF" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.PINF" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.PZERO" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.PZERO" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.SHIFT_DIVIDEBYZERO" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.SHIFT_DIVIDEBYZERO" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.SHIFT_INVALID" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.SHIFT_INVALID" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.SHIFT_OVERFLOW" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.SHIFT_OVERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.SHIFT_UNDERFLOW" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.SHIFT_UNDERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.UFUNC_BUFSIZE_DEFAULT" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.UFUNC_BUFSIZE_DEFAULT" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.UFUNC_PYVALS_NAME" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.UFUNC_PYVALS_NAME" [color=black penwidth=1 style=dashed]
	"numpy.core.umath._UFUNC_API" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath._UFUNC_API" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.__version__" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.__version__" [color=black penwidth=1 style=dashed]
	"numpy.core.umath._arg" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath._arg" [color=black penwidth=1 style=dashed]
	"numpy.core.umath._ones_like" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath._ones_like" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.absolute" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.absolute" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.add" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.add" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.arccos" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.arccos" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.arccosh" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.arccosh" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.arcsin" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.arcsin" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.arcsinh" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.arcsinh" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.arctan" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.arctan" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.arctan2" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.arctan2" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.arctanh" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.arctanh" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.bitwise_and" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.bitwise_and" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.bitwise_or" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.bitwise_or" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.bitwise_xor" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.bitwise_xor" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.cbrt" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.cbrt" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.ceil" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.ceil" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.conj" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.conj" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.conjugate" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.conjugate" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.copysign" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.copysign" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.cos" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.cos" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.cosh" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.cosh" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.deg2rad" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.deg2rad" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.degrees" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.degrees" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.divide" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.divide" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.e" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.e" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.equal" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.equal" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.euler_gamma" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.euler_gamma" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.exp" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.exp" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.exp2" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.exp2" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.expm1" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.expm1" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.fabs" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.fabs" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.floor" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.floor" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.floor_divide" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.floor_divide" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.fmax" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.fmax" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.fmin" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.fmin" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.fmod" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.fmod" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.frexp" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.frexp" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.greater" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.greater" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.greater_equal" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.greater_equal" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.hypot" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.hypot" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.invert" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.invert" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.isfinite" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.isfinite" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.isinf" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.isinf" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.isnan" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.isnan" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.ldexp" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.ldexp" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.left_shift" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.left_shift" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.less" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.less" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.less_equal" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.less_equal" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.log" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.log" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.log10" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.log10" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.log1p" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.log1p" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.log2" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.log2" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.logaddexp" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.logaddexp" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.logaddexp2" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.logaddexp2" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.logical_and" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.logical_and" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.logical_not" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.logical_not" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.logical_or" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.logical_or" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.logical_xor" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.logical_xor" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.maximum" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.maximum" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.minimum" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.minimum" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.mod" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.mod" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.modf" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.modf" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.multiply" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.multiply" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.negative" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.negative" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.nextafter" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.nextafter" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.not_equal" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.not_equal" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.pi" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.pi" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.power" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.power" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.rad2deg" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.rad2deg" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.radians" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.radians" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.reciprocal" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.reciprocal" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.remainder" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.remainder" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.right_shift" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.right_shift" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.rint" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.rint" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.sign" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.sign" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.signbit" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.signbit" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.sin" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.sin" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.sinh" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.sinh" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.spacing" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.spacing" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.sqrt" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.sqrt" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.square" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.square" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.subtract" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.subtract" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.tan" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.tan" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.tanh" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.tanh" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.true_divide" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.true_divide" [color=black penwidth=1 style=dashed]
	"numpy.core.umath.trunc" [color=black fontsize=16 shape=none]
		"numpy.core.umath-nofta" -> "numpy.core.umath.trunc" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.pickle-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio.pickle" -> "numpy.lib.npyio.pickle-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio.pickle-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio.pickle" -> "numpy.lib.npyio.pickle-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.pickle-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio.pickle" -> "numpy.lib.npyio.pickle-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.pickle-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio.pickle" -> "numpy.lib.npyio.pickle-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.decorators.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.decorators.warnings" -> "numpy.testing.decorators.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.decorators.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.decorators.warnings" -> "numpy.testing.decorators.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.decorators.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.decorators.warnings" -> "numpy.testing.decorators.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.decorators.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.decorators.warnings" -> "numpy.testing.decorators.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.warnings" -> "numpy.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.warnings" -> "numpy.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.warnings" -> "numpy.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.warnings" -> "numpy.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.random.mtrand.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand.np" -> "numpy.random.mtrand.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.random.mtrand.np" -> "numpy.random.mtrand.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.random.mtrand.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.random.mtrand.np" -> "numpy.random.mtrand.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.random.mtrand.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.random.mtrand.np" -> "numpy.random.mtrand.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.linalg.info-builtins" [color=red fontsize=16 shape=none]
		"numpy.linalg.info" -> "numpy.linalg.info-builtins" [color=red penwidth=1 style=dashed]
	"numpy.linalg.info-classes" [color=gold fontsize=16 shape=none]
		"numpy.linalg.info" -> "numpy.linalg.info-classes" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.info-functions" [color=purple fontsize=16 shape=none]
		"numpy.linalg.info" -> "numpy.linalg.info-functions" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.info-nofta" [color=black fontsize=16 shape=none]
		"numpy.linalg.info" -> "numpy.linalg.info-nofta" [color=black penwidth=1 style=dashed]
	"numpy.linalg.info.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.linalg.info-nofta" -> "numpy.linalg.info.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.info.__doc__" [color=black fontsize=16 shape=none]
		"numpy.linalg.info-nofta" -> "numpy.linalg.info.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.info.__file__" [color=black fontsize=16 shape=none]
		"numpy.linalg.info-nofta" -> "numpy.linalg.info.__file__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.info.__name__" [color=black fontsize=16 shape=none]
		"numpy.linalg.info-nofta" -> "numpy.linalg.info.__name__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.info.__package__" [color=black fontsize=16 shape=none]
		"numpy.linalg.info-nofta" -> "numpy.linalg.info.__package__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.info.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.linalg.info-nofta" -> "numpy.linalg.info.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.linalg.info.depends" [color=black fontsize=16 shape=none]
		"numpy.linalg.info-nofta" -> "numpy.linalg.info.depends" [color=black penwidth=1 style=dashed]
	"numpy.linalg.info.division" [color=black fontsize=16 shape=none]
		"numpy.linalg.info-nofta" -> "numpy.linalg.info.division" [color=black penwidth=1 style=dashed]
	"numpy.linalg.info.print_function" [color=black fontsize=16 shape=none]
		"numpy.linalg.info-nofta" -> "numpy.linalg.info.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.utils.warnings" -> "numpy.lib.utils.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.utils.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.utils.warnings" -> "numpy.lib.utils.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.utils.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils.warnings" -> "numpy.lib.utils.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.utils.warnings" -> "numpy.lib.utils.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraysetops-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.arraysetops" -> "numpy.lib.arraysetops-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.arraysetops-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.arraysetops" -> "numpy.lib.arraysetops-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.arraysetops-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraysetops" -> "numpy.lib.arraysetops-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraysetops.ediff1d" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraysetops-functions" -> "numpy.lib.arraysetops.ediff1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraysetops.in1d" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraysetops-functions" -> "numpy.lib.arraysetops.in1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraysetops.intersect1d" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraysetops-functions" -> "numpy.lib.arraysetops.intersect1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraysetops.setdiff1d" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraysetops-functions" -> "numpy.lib.arraysetops.setdiff1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraysetops.setxor1d" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraysetops-functions" -> "numpy.lib.arraysetops.setxor1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraysetops.union1d" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraysetops-functions" -> "numpy.lib.arraysetops.union1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraysetops.unique" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraysetops-functions" -> "numpy.lib.arraysetops.unique" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraysetops-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.arraysetops" -> "numpy.lib.arraysetops-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraysetops.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.arraysetops-nofta" -> "numpy.lib.arraysetops.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraysetops.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.arraysetops-nofta" -> "numpy.lib.arraysetops.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraysetops.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.arraysetops-nofta" -> "numpy.lib.arraysetops.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraysetops.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.arraysetops-nofta" -> "numpy.lib.arraysetops.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraysetops.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.arraysetops-nofta" -> "numpy.lib.arraysetops.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraysetops.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.arraysetops-nofta" -> "numpy.lib.arraysetops.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraysetops.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.arraysetops-nofta" -> "numpy.lib.arraysetops.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraysetops.division" [color=black fontsize=16 shape=none]
		"numpy.lib.arraysetops-nofta" -> "numpy.lib.arraysetops.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraysetops.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.arraysetops-nofta" -> "numpy.lib.arraysetops.print_function" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.extras.warnings" -> "numpy.ma.extras.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.extras.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras.warnings" -> "numpy.ma.extras.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras.warnings" -> "numpy.ma.extras.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.extras.warnings" -> "numpy.ma.extras.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.math-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.math" -> "numpy.lib.math-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.math-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.math" -> "numpy.lib.math-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.math-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.math" -> "numpy.lib.math-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.math-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.math" -> "numpy.lib.math-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.os-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio.os" -> "numpy.lib.npyio.os-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio.os-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio.os" -> "numpy.lib.npyio.os-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.os-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio.os" -> "numpy.lib.npyio.os-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.os-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio.os" -> "numpy.lib.npyio.os-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.la-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.la" -> "numpy.polynomial.hermite_e.la-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.la-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.la" -> "numpy.polynomial.hermite_e.la-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.la-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.la" -> "numpy.polynomial.hermite_e.la-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.la-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.la" -> "numpy.polynomial.hermite_e.la-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.polynomial.warnings" -> "numpy.polynomial.polynomial.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polynomial.warnings" -> "numpy.polynomial.polynomial.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial.warnings" -> "numpy.polynomial.polynomial.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial.warnings" -> "numpy.polynomial.polynomial.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.pu-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.pu" -> "numpy.polynomial.chebyshev.pu-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.pu-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.pu" -> "numpy.polynomial.chebyshev.pu-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.pu-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.pu" -> "numpy.polynomial.chebyshev.pu-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.pu-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.pu" -> "numpy.polynomial.chebyshev.pu-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.machar-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.machar" -> "numpy.core.machar-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.machar-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.machar" -> "numpy.core.machar-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.machar.MachAr" [color=gold fontsize=16 shape=none]
		"numpy.core.machar-classes" -> "numpy.core.machar.MachAr" [color=gold penwidth=1 style=dashed]
	"numpy.core.machar.errstate" [color=gold fontsize=16 shape=none]
		"numpy.core.machar-classes" -> "numpy.core.machar.errstate" [color=gold penwidth=1 style=dashed]
	"numpy.core.machar-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.machar" -> "numpy.core.machar-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.machar.any" [color=purple fontsize=16 shape=none]
		"numpy.core.machar-functions" -> "numpy.core.machar.any" [color=purple penwidth=1 style=dashed]
	"numpy.core.machar-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.machar" -> "numpy.core.machar-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.machar.__all__" [color=black fontsize=16 shape=none]
		"numpy.core.machar-nofta" -> "numpy.core.machar.__all__" [color=black penwidth=1 style=dashed]
	"numpy.core.machar.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.core.machar-nofta" -> "numpy.core.machar.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.core.machar.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.machar-nofta" -> "numpy.core.machar.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.machar.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.machar-nofta" -> "numpy.core.machar.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.machar.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.machar-nofta" -> "numpy.core.machar.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.machar.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.machar-nofta" -> "numpy.core.machar.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.machar.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.core.machar-nofta" -> "numpy.core.machar.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.core.machar.division" [color=black fontsize=16 shape=none]
		"numpy.core.machar-nofta" -> "numpy.core.machar.division" [color=black penwidth=1 style=dashed]
	"numpy.core.machar.print_function" [color=black fontsize=16 shape=none]
		"numpy.core.machar-nofta" -> "numpy.core.machar.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.io-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.format.io" -> "numpy.lib.format.io-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.format.io-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.format.io" -> "numpy.lib.format.io-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.format.io-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.format.io" -> "numpy.lib.format.io-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.io-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.format.io" -> "numpy.lib.format.io-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.type_check" -> "numpy.lib.type_check-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.type_check.array" [color=red fontsize=16 shape=none]
		"numpy.lib.type_check-builtins" -> "numpy.lib.type_check.array" [color=red penwidth=1 style=dashed]
	"numpy.lib.type_check.zeros" [color=red fontsize=16 shape=none]
		"numpy.lib.type_check-builtins" -> "numpy.lib.type_check.zeros" [color=red penwidth=1 style=dashed]
	"numpy.lib.type_check-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.type_check" -> "numpy.lib.type_check-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.type_check-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check" -> "numpy.lib.type_check-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check._getmaxmin" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check._getmaxmin" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.asarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.asfarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.asfarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.asscalar" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.asscalar" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.common_type" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.common_type" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.imag" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.imag" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.iscomplex" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.iscomplex" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.iscomplexobj" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.iscomplexobj" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.isneginf" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.isneginf" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.isposinf" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.isposinf" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.isreal" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.isreal" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.isrealobj" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.isrealobj" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.mintypecode" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.mintypecode" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.nan_to_num" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.nan_to_num" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.obj2sctype" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.obj2sctype" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.real" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.real" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.real_if_close" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.real_if_close" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check.typename" [color=purple fontsize=16 shape=none]
		"numpy.lib.type_check-functions" -> "numpy.lib.type_check.typename" [color=purple penwidth=1 style=dashed]
	"numpy.lib.type_check-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check" -> "numpy.lib.type_check-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check._namefromtype" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check._namefromtype" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check._typecodes_by_elsize" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check._typecodes_by_elsize" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check.array_precision" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check.array_precision" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check.array_type" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check.array_type" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check.division" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check.isnan" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check.isnan" [color=black penwidth=1 style=dashed]
	"numpy.lib.type_check.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.type_check-nofta" -> "numpy.lib.type_check.print_function" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.hermite.np" -> "numpy.polynomial.hermite.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.hermite.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite.np" -> "numpy.polynomial.hermite.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite.np" -> "numpy.polynomial.hermite.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite.np" -> "numpy.polynomial.hermite.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.nanfunctions.np" -> "numpy.lib.nanfunctions.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.nanfunctions.np" -> "numpy.lib.nanfunctions.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions.np" -> "numpy.lib.nanfunctions.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.nanfunctions.np" -> "numpy.lib.nanfunctions.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.random.operator-builtins" [color=red fontsize=16 shape=none]
		"numpy.random.operator" -> "numpy.random.operator-builtins" [color=red penwidth=1 style=dashed]
	"numpy.random.operator-classes" [color=gold fontsize=16 shape=none]
		"numpy.random.operator" -> "numpy.random.operator-classes" [color=gold penwidth=1 style=dashed]
	"numpy.random.operator-functions" [color=purple fontsize=16 shape=none]
		"numpy.random.operator" -> "numpy.random.operator-functions" [color=purple penwidth=1 style=dashed]
	"numpy.random.operator-nofta" [color=black fontsize=16 shape=none]
		"numpy.random.operator" -> "numpy.random.operator-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.ufunclike.nx-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.ufunclike.nx" -> "numpy.lib.ufunclike.nx-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.ufunclike.nx-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.ufunclike.nx" -> "numpy.lib.ufunclike.nx-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.ufunclike.nx-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.ufunclike.nx" -> "numpy.lib.ufunclike.nx-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.ufunclike.nx-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.ufunclike.nx" -> "numpy.lib.ufunclike.nx-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.nosetester.warnings" -> "numpy.testing.nosetester.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.nosetester.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.nosetester.warnings" -> "numpy.testing.nosetester.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.nosetester.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.nosetester.warnings" -> "numpy.testing.nosetester.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.nosetester.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester.warnings" -> "numpy.testing.nosetester.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.decorators.collections-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.decorators.collections" -> "numpy.testing.decorators.collections-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.decorators.collections-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.decorators.collections" -> "numpy.testing.decorators.collections-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.decorators.collections-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.decorators.collections" -> "numpy.testing.decorators.collections-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.decorators.collections-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.decorators.collections" -> "numpy.testing.decorators.collections-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.extras" -> "numpy.ma.extras-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.extras.nxarray" [color=red fontsize=16 shape=none]
		"numpy.ma.extras-builtins" -> "numpy.ma.extras.nxarray" [color=red penwidth=1 style=dashed]
	"numpy.ma.extras-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras" -> "numpy.ma.extras-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras.AxisConcatenator" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras-classes" -> "numpy.ma.extras.AxisConcatenator" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras.MAError" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras-classes" -> "numpy.ma.extras.MAError" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras.MAxisConcatenator" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras-classes" -> "numpy.ma.extras.MAxisConcatenator" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras.MaskedArray" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras-classes" -> "numpy.ma.extras.MaskedArray" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras._fromnxfunction" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras-classes" -> "numpy.ma.extras._fromnxfunction" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras.masked_array" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras-classes" -> "numpy.ma.extras.masked_array" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras.mr_class" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras-classes" -> "numpy.ma.extras.mr_class" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras.ndarray" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras-classes" -> "numpy.ma.extras.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras" -> "numpy.ma.extras-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras._covhelper" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras._covhelper" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras._ezclump" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras._ezclump" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras._median" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras._median" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras._ureduce" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras._ureduce" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.apply_along_axis" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.apply_along_axis" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.apply_over_axes" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.apply_over_axes" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.array" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.array" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.asarray" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.average" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.average" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.clump_masked" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.clump_masked" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.clump_unmasked" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.clump_unmasked" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.compress_cols" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.compress_cols" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.compress_nd" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.compress_nd" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.compress_rowcols" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.compress_rowcols" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.compress_rows" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.compress_rows" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.concatenate" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.concatenate" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.corrcoef" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.corrcoef" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.count_masked" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.count_masked" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.cov" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.cov" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.dot" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.dot" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.ediff1d" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.ediff1d" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.filled" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.filled" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.flatnotmasked_contiguous" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.flatnotmasked_contiguous" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.flatnotmasked_edges" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.flatnotmasked_edges" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.flatten_inplace" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.flatten_inplace" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.get_masked_subclass" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.get_masked_subclass" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.getdata" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.getdata" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.getmask" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.getmask" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.getmaskarray" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.getmaskarray" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.in1d" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.in1d" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.intersect1d" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.intersect1d" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.issequence" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.issequence" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.make_mask_descr" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.make_mask_descr" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.mask_cols" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.mask_cols" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.mask_or" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.mask_or" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.mask_rowcols" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.mask_rowcols" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.mask_rows" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.mask_rows" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.masked_all" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.masked_all" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.masked_all_like" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.masked_all_like" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.median" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.median" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.notmasked_contiguous" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.notmasked_contiguous" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.notmasked_edges" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.notmasked_edges" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.polyfit" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.polyfit" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.setdiff1d" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.setdiff1d" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.setxor1d" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.setxor1d" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.sort" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.sort" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.union1d" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.union1d" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.unique" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.unique" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.vander" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras-functions" -> "numpy.ma.extras.vander" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.extras" -> "numpy.ma.extras-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.__all__" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.__all__" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.__doc__" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.__file__" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.__file__" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.__name__" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.__name__" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.__package__" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.__package__" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.add" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.add" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.atleast_1d" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.atleast_1d" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.atleast_2d" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.atleast_2d" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.atleast_3d" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.atleast_3d" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.column_stack" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.column_stack" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.count" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.count" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.diagflat" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.diagflat" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.division" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.division" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.dstack" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.dstack" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.hsplit" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.hsplit" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.hstack" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.hstack" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.masked" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.masked" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.mr_" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.mr_" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.nomask" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.nomask" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.ones" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.ones" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.print_function" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.print_function" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.row_stack" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.row_stack" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.vstack" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.vstack" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.zeros" [color=black fontsize=16 shape=none]
		"numpy.ma.extras-nofta" -> "numpy.ma.extras.zeros" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite-builtins" [color=red fontsize=16 shape=none]
		"numpy.fft.fftpack_lite" -> "numpy.fft.fftpack_lite-builtins" [color=red penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite.cfftb" [color=red fontsize=16 shape=none]
		"numpy.fft.fftpack_lite-builtins" -> "numpy.fft.fftpack_lite.cfftb" [color=red penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite.cfftf" [color=red fontsize=16 shape=none]
		"numpy.fft.fftpack_lite-builtins" -> "numpy.fft.fftpack_lite.cfftf" [color=red penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite.cffti" [color=red fontsize=16 shape=none]
		"numpy.fft.fftpack_lite-builtins" -> "numpy.fft.fftpack_lite.cffti" [color=red penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite.rfftb" [color=red fontsize=16 shape=none]
		"numpy.fft.fftpack_lite-builtins" -> "numpy.fft.fftpack_lite.rfftb" [color=red penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite.rfftf" [color=red fontsize=16 shape=none]
		"numpy.fft.fftpack_lite-builtins" -> "numpy.fft.fftpack_lite.rfftf" [color=red penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite.rffti" [color=red fontsize=16 shape=none]
		"numpy.fft.fftpack_lite-builtins" -> "numpy.fft.fftpack_lite.rffti" [color=red penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite-classes" [color=gold fontsize=16 shape=none]
		"numpy.fft.fftpack_lite" -> "numpy.fft.fftpack_lite-classes" [color=gold penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite.error" [color=gold fontsize=16 shape=none]
		"numpy.fft.fftpack_lite-classes" -> "numpy.fft.fftpack_lite.error" [color=gold penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite-functions" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack_lite" -> "numpy.fft.fftpack_lite-functions" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite-nofta" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack_lite" -> "numpy.fft.fftpack_lite-nofta" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite.__doc__" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack_lite-nofta" -> "numpy.fft.fftpack_lite.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite.__file__" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack_lite-nofta" -> "numpy.fft.fftpack_lite.__file__" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite.__name__" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack_lite-nofta" -> "numpy.fft.fftpack_lite.__name__" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack_lite.__package__" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack_lite-nofta" -> "numpy.fft.fftpack_lite.__package__" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.os-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.utils.os" -> "numpy.testing.utils.os-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.utils.os-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils.os" -> "numpy.testing.utils.os-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.os-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils.os" -> "numpy.testing.utils.os-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.os-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.utils.os" -> "numpy.testing.utils.os-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits.numeric-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.getlimits.numeric" -> "numpy.core.getlimits.numeric-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.getlimits.numeric-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.getlimits.numeric" -> "numpy.core.getlimits.numeric-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.getlimits.numeric-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.getlimits.numeric" -> "numpy.core.getlimits.numeric-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.getlimits.numeric-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits.numeric" -> "numpy.core.getlimits.numeric-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.numerictypes-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numeric.numerictypes" -> "numpy.core.numeric.numerictypes-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.numerictypes-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric.numerictypes" -> "numpy.core.numeric.numerictypes-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.numerictypes-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric.numerictypes" -> "numpy.core.numeric.numerictypes-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.numerictypes-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numeric.numerictypes" -> "numpy.core.numeric.numerictypes-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray" -> "numpy.core.multiarray-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray._fastCopyAndTranspose" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray._fastCopyAndTranspose" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray._get_ndarray_c_version" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray._get_ndarray_c_version" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray._insert" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray._insert" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray._reconstruct" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray._reconstruct" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray._vec_string" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray._vec_string" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.add_docstring" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.add_docstring" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.arange" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.arange" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.array" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.array" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.bincount" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.bincount" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.busday_count" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.busday_count" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.busday_offset" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.busday_offset" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.can_cast" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.can_cast" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.compare_chararrays" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.compare_chararrays" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.concatenate" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.concatenate" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.copyto" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.copyto" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.correlate" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.correlate" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.correlate2" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.correlate2" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.count_nonzero" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.count_nonzero" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.datetime_as_string" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.datetime_as_string" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.datetime_data" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.datetime_data" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.digitize" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.digitize" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.dot" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.dot" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.einsum" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.einsum" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.empty" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.empty" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.empty_like" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.empty_like" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.format_longfloat" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.format_longfloat" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.frombuffer" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.frombuffer" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.fromfile" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.fromfile" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.fromiter" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.fromiter" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.fromstring" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.fromstring" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.getbuffer" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.getbuffer" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.inner" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.inner" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.int_asbuffer" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.int_asbuffer" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.interp" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.interp" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.is_busday" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.is_busday" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.lexsort" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.lexsort" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.matmul" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.matmul" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.may_share_memory" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.may_share_memory" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.min_scalar_type" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.min_scalar_type" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.nested_iters" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.nested_iters" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.newbuffer" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.newbuffer" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.packbits" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.packbits" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.promote_types" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.promote_types" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.putmask" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.putmask" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.ravel_multi_index" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.ravel_multi_index" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.result_type" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.result_type" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.scalar" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.scalar" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.set_datetimeparse_function" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.set_datetimeparse_function" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.set_numeric_ops" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.set_numeric_ops" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.set_string_function" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.set_string_function" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.set_typeDict" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.set_typeDict" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.shares_memory" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.shares_memory" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.test_interrupt" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.test_interrupt" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.unpackbits" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.unpackbits" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.unravel_index" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.unravel_index" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.vdot" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.vdot" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.where" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.where" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray.zeros" [color=red fontsize=16 shape=none]
		"numpy.core.multiarray-builtins" -> "numpy.core.multiarray.zeros" [color=red penwidth=1 style=dashed]
	"numpy.core.multiarray-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.multiarray" -> "numpy.core.multiarray-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.multiarray.broadcast" [color=gold fontsize=16 shape=none]
		"numpy.core.multiarray-classes" -> "numpy.core.multiarray.broadcast" [color=gold penwidth=1 style=dashed]
	"numpy.core.multiarray.busdaycalendar" [color=gold fontsize=16 shape=none]
		"numpy.core.multiarray-classes" -> "numpy.core.multiarray.busdaycalendar" [color=gold penwidth=1 style=dashed]
	"numpy.core.multiarray.dtype" [color=gold fontsize=16 shape=none]
		"numpy.core.multiarray-classes" -> "numpy.core.multiarray.dtype" [color=gold penwidth=1 style=dashed]
	"numpy.core.multiarray.error" [color=gold fontsize=16 shape=none]
		"numpy.core.multiarray-classes" -> "numpy.core.multiarray.error" [color=gold penwidth=1 style=dashed]
	"numpy.core.multiarray.flagsobj" [color=gold fontsize=16 shape=none]
		"numpy.core.multiarray-classes" -> "numpy.core.multiarray.flagsobj" [color=gold penwidth=1 style=dashed]
	"numpy.core.multiarray.flatiter" [color=gold fontsize=16 shape=none]
		"numpy.core.multiarray-classes" -> "numpy.core.multiarray.flatiter" [color=gold penwidth=1 style=dashed]
	"numpy.core.multiarray.ndarray" [color=gold fontsize=16 shape=none]
		"numpy.core.multiarray-classes" -> "numpy.core.multiarray.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.core.multiarray.nditer" [color=gold fontsize=16 shape=none]
		"numpy.core.multiarray-classes" -> "numpy.core.multiarray.nditer" [color=gold penwidth=1 style=dashed]
	"numpy.core.multiarray-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.multiarray" -> "numpy.core.multiarray-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.multiarray-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray" -> "numpy.core.multiarray-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.ALLOW_THREADS" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.ALLOW_THREADS" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.BUFSIZE" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.BUFSIZE" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.CLIP" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.CLIP" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.DATETIMEUNITS" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.DATETIMEUNITS" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.ITEM_HASOBJECT" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.ITEM_HASOBJECT" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.ITEM_IS_POINTER" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.ITEM_IS_POINTER" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.LIST_PICKLE" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.LIST_PICKLE" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.MAXDIMS" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.MAXDIMS" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.MAY_SHARE_BOUNDS" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.MAY_SHARE_BOUNDS" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.MAY_SHARE_EXACT" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.MAY_SHARE_EXACT" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.NEEDS_INIT" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.NEEDS_INIT" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.NEEDS_PYAPI" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.NEEDS_PYAPI" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.RAISE" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.RAISE" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.USE_GETITEM" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.USE_GETITEM" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.USE_SETITEM" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.USE_SETITEM" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.WRAP" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.WRAP" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray._ARRAY_API" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray._ARRAY_API" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.__version__" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.__version__" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray._flagdict" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray._flagdict" [color=black penwidth=1 style=dashed]
	"numpy.core.multiarray.typeinfo" [color=black fontsize=16 shape=none]
		"numpy.core.multiarray-nofta" -> "numpy.core.multiarray.typeinfo" [color=black penwidth=1 style=dashed]
	"numpy.version-builtins" [color=red fontsize=16 shape=none]
		"numpy.version" -> "numpy.version-builtins" [color=red penwidth=1 style=dashed]
	"numpy.version-classes" [color=gold fontsize=16 shape=none]
		"numpy.version" -> "numpy.version-classes" [color=gold penwidth=1 style=dashed]
	"numpy.version-functions" [color=purple fontsize=16 shape=none]
		"numpy.version" -> "numpy.version-functions" [color=purple penwidth=1 style=dashed]
	"numpy.version-nofta" [color=black fontsize=16 shape=none]
		"numpy.version" -> "numpy.version-nofta" [color=black penwidth=1 style=dashed]
	"numpy.version.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.version-nofta" -> "numpy.version.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.version.__doc__" [color=black fontsize=16 shape=none]
		"numpy.version-nofta" -> "numpy.version.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.version.__file__" [color=black fontsize=16 shape=none]
		"numpy.version-nofta" -> "numpy.version.__file__" [color=black penwidth=1 style=dashed]
	"numpy.version.__name__" [color=black fontsize=16 shape=none]
		"numpy.version-nofta" -> "numpy.version.__name__" [color=black penwidth=1 style=dashed]
	"numpy.version.__package__" [color=black fontsize=16 shape=none]
		"numpy.version-nofta" -> "numpy.version.__package__" [color=black penwidth=1 style=dashed]
	"numpy.version.full_version" [color=black fontsize=16 shape=none]
		"numpy.version-nofta" -> "numpy.version.full_version" [color=black penwidth=1 style=dashed]
	"numpy.version.git_revision" [color=black fontsize=16 shape=none]
		"numpy.version-nofta" -> "numpy.version.git_revision" [color=black penwidth=1 style=dashed]
	"numpy.version.release" [color=black fontsize=16 shape=none]
		"numpy.version-nofta" -> "numpy.version.release" [color=black penwidth=1 style=dashed]
	"numpy.version.short_version" [color=black fontsize=16 shape=none]
		"numpy.version-nofta" -> "numpy.version.short_version" [color=black penwidth=1 style=dashed]
	"numpy.version.version" [color=black fontsize=16 shape=none]
		"numpy.version-nofta" -> "numpy.version.version" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.weakref-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio.weakref" -> "numpy.lib.npyio.weakref-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio.weakref-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio.weakref" -> "numpy.lib.npyio.weakref-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.weakref-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio.weakref" -> "numpy.lib.npyio.weakref-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.weakref-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio.weakref" -> "numpy.lib.npyio.weakref-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.operator-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base.operator" -> "numpy.lib.function_base.operator-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.operator-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base.operator" -> "numpy.lib.function_base.operator-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.operator-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base.operator" -> "numpy.lib.function_base.operator-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.operator-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base.operator" -> "numpy.lib.function_base.operator-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.polynomial.np" -> "numpy.polynomial.polynomial.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polynomial.np" -> "numpy.polynomial.polynomial.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial.np" -> "numpy.polynomial.polynomial.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial.np" -> "numpy.polynomial.polynomial.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.core-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.core" -> "numpy.ma.core-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.core.narray" [color=red fontsize=16 shape=none]
		"numpy.ma.core-builtins" -> "numpy.ma.core.narray" [color=red penwidth=1 style=dashed]
	"numpy.ma.core.reduce" [color=red fontsize=16 shape=none]
		"numpy.ma.core-builtins" -> "numpy.ma.core.reduce" [color=red penwidth=1 style=dashed]
	"numpy.ma.core-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.core" -> "numpy.ma.core-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.MAError" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.MAError" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.MaskError" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.MaskError" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.MaskType" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.MaskType" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.MaskedArray" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.MaskedArray" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.MaskedArrayFutureWarning" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.MaskedArrayFutureWarning" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.MaskedConstant" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.MaskedConstant" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.MaskedIterator" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.MaskedIterator" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._DomainCheckInterval" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._DomainCheckInterval" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._DomainGreater" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._DomainGreater" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._DomainGreaterEqual" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._DomainGreaterEqual" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._DomainSafeDivide" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._DomainSafeDivide" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._DomainTan" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._DomainTan" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._DomainedBinaryOperation" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._DomainedBinaryOperation" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._MaskedBinaryOperation" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._MaskedBinaryOperation" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._MaskedPrintOption" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._MaskedPrintOption" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._MaskedUnaryOperation" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._MaskedUnaryOperation" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._NoValue" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._NoValue" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._convert2ma" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._convert2ma" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._extrema_operation" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._extrema_operation" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._frommethod" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._frommethod" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._maximum_operation" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._maximum_operation" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core._minimum_operation" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core._minimum_operation" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.basestring" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.basestring" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.bool_" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.bool_" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.bytes" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.bytes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.k" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.k" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.long" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.long" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.masked_array" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.masked_array" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.mvoid" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.mvoid" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.ndarray" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.unicode" [color=gold fontsize=16 shape=none]
		"numpy.ma.core-classes" -> "numpy.ma.core.unicode" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.core" -> "numpy.ma.core-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core._arraymethod" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core._arraymethod" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core._check_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core._check_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core._check_mask_axis" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core._check_mask_axis" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core._mareconstruct" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core._mareconstruct" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core._recursive_extremum_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core._recursive_extremum_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core._recursive_filled" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core._recursive_filled" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core._recursive_make_descr" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core._recursive_make_descr" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core._recursive_printoption" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core._recursive_printoption" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core._recursive_set_default_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core._recursive_set_default_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core._recursive_set_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core._recursive_set_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.allclose" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.allclose" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.allequal" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.allequal" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.amax" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.amax" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.amin" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.amin" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.append" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.append" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.argsort" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.argsort" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.array" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.array" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.asarray" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.choose" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.choose" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.clip" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.clip" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.common_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.common_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.compressed" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.compressed" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.concatenate" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.concatenate" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.default_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.default_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.diag" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.diag" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.diff" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.diff" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.doc_note" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.doc_note" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.dot" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.dot" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.dump" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.dump" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.dumps" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.dumps" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.expand_dims" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.expand_dims" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.filled" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.filled" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.fix_invalid" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.fix_invalid" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.flatten_mask" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.flatten_mask" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.flatten_structured_array" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.flatten_structured_array" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.formatargspec" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.formatargspec" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.fromfile" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.fromfile" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.fromflex" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.fromflex" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.get_data" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.get_data" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.get_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.get_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.get_mask" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.get_mask" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.get_masked_subclass" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.get_masked_subclass" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.get_object_signature" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.get_object_signature" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.getargspec" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.getargspec" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.getdata" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.getdata" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.getmask" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.getmask" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.getmaskarray" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.getmaskarray" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.indices" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.indices" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.inner" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.inner" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.innerproduct" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.innerproduct" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.isMA" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.isMA" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.isMaskedArray" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.isMaskedArray" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.is_mask" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.is_mask" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.is_masked" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.is_masked" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.isarray" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.isarray" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.iscomplexobj" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.iscomplexobj" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.left_shift" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.left_shift" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.load" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.load" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.loads" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.loads" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.make_mask" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.make_mask" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.make_mask_descr" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.make_mask_descr" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.make_mask_none" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.make_mask_none" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.mask_or" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.mask_or" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.mask_rowcols" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.mask_rowcols" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.masked_equal" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.masked_equal" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.masked_greater" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.masked_greater" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.masked_greater_equal" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.masked_greater_equal" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.masked_inside" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.masked_inside" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.masked_invalid" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.masked_invalid" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.masked_less" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.masked_less" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.masked_less_equal" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.masked_less_equal" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.masked_not_equal" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.masked_not_equal" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.masked_object" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.masked_object" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.masked_outside" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.masked_outside" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.masked_values" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.masked_values" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.masked_where" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.masked_where" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.max" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.max" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.maximum_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.maximum_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.min" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.min" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.minimum_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.minimum_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.n_expand_dims" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.n_expand_dims" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.ndim" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.ndim" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.ones_like" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.ones_like" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.outer" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.outer" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.outerproduct" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.outerproduct" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.power" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.power" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.ptp" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.ptp" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.put" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.put" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.putmask" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.putmask" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.rank" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.rank" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.reshape" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.reshape" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.resize" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.resize" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.right_shift" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.right_shift" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.round" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.round" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.round_" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.round_" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.set_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.set_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.shape" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.shape" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.sixu" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.sixu" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.size" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.size" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.sort" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.sort" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.squeeze" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.squeeze" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.take" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.take" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.transpose" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.transpose" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.where" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.where" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.zeros_like" [color=purple fontsize=16 shape=none]
		"numpy.ma.core-functions" -> "numpy.ma.core.zeros_like" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.core" -> "numpy.ma.core-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.__all__" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.__all__" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.__doc__" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.__file__" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.__file__" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.__name__" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.__name__" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.__package__" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.__package__" [color=black penwidth=1 style=dashed]
	"numpy.ma.core._print_templates" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core._print_templates" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.abs" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.abs" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.absolute" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.absolute" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.add" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.add" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.all" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.all" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.alltrue" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.alltrue" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.angle" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.angle" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.anom" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.anom" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.anomalies" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.anomalies" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.any" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.any" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.arange" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.arange" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.arccos" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.arccos" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.arccosh" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.arccosh" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.arcsin" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.arcsin" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.arcsinh" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.arcsinh" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.arctan" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.arctan" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.arctan2" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.arctan2" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.arctanh" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.arctanh" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.argmax" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.argmax" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.argmin" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.argmin" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.around" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.around" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.bitwise_and" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.bitwise_and" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.bitwise_or" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.bitwise_or" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.bitwise_xor" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.bitwise_xor" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.ceil" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.ceil" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.compress" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.compress" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.conjugate" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.conjugate" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.copy" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.copy" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.cos" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.cos" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.cosh" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.cosh" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.count" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.count" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.cumprod" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.cumprod" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.cumsum" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.cumsum" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.default_filler" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.default_filler" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.diagonal" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.diagonal" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.divide" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.divide" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.division" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.division" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.empty" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.empty" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.empty_like" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.empty_like" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.equal" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.equal" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.exp" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.exp" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.fabs" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.fabs" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.floor" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.floor" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.floor_divide" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.floor_divide" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.fmod" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.fmod" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.frombuffer" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.frombuffer" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.fromfunction" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.fromfunction" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.greater" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.greater" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.greater_equal" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.greater_equal" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.harden_mask" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.harden_mask" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.hypot" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.hypot" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.identity" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.identity" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.ids" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.ids" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.less" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.less" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.less_equal" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.less_equal" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.log" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.log" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.log10" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.log10" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.log2" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.log2" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.logical_and" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.logical_and" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.logical_not" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.logical_not" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.logical_or" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.logical_or" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.logical_xor" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.logical_xor" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.masked" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.masked" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.masked_print_option" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.masked_print_option" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.masked_singleton" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.masked_singleton" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.max_filler" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.max_filler" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.maximum" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.maximum" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.mean" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.mean" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.min_filler" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.min_filler" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.minimum" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.minimum" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.mod" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.mod" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.multiply" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.multiply" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.negative" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.negative" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.nomask" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.nomask" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.nonzero" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.nonzero" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.not_equal" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.not_equal" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.ones" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.ones" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.print_function" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.print_function" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.prod" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.prod" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.product" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.product" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.ravel" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.ravel" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.remainder" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.remainder" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.repeat" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.repeat" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.shrink_mask" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.shrink_mask" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.sin" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.sin" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.sinh" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.sinh" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.soften_mask" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.soften_mask" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.sometrue" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.sometrue" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.sqrt" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.sqrt" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.std" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.std" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.subtract" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.subtract" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.sum" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.sum" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.swapaxes" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.swapaxes" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.tan" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.tan" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.tanh" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.tanh" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.trace" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.trace" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.true_divide" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.true_divide" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.ufunc_domain" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.ufunc_domain" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.ufunc_fills" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.ufunc_fills" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.v" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.v" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.var" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.var" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.zeros" [color=black fontsize=16 shape=none]
		"numpy.ma.core-nofta" -> "numpy.ma.core.zeros" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.NX-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.polynomial.NX" -> "numpy.lib.polynomial.NX-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.polynomial.NX-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.polynomial.NX" -> "numpy.lib.polynomial.NX-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.polynomial.NX-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial.NX" -> "numpy.lib.polynomial.NX-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.NX-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial.NX" -> "numpy.lib.polynomial.NX-nofta" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.compat.py3k.sys" -> "numpy.compat.py3k.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.compat.py3k.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.compat.py3k.sys" -> "numpy.compat.py3k.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.compat.py3k.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.compat.py3k.sys" -> "numpy.compat.py3k.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.compat.py3k.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k.sys" -> "numpy.compat.py3k.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.add_newdocs-builtins" [color=red fontsize=16 shape=none]
		"numpy.add_newdocs" -> "numpy.add_newdocs-builtins" [color=red penwidth=1 style=dashed]
	"numpy.add_newdocs-classes" [color=gold fontsize=16 shape=none]
		"numpy.add_newdocs" -> "numpy.add_newdocs-classes" [color=gold penwidth=1 style=dashed]
	"numpy.add_newdocs-functions" [color=purple fontsize=16 shape=none]
		"numpy.add_newdocs" -> "numpy.add_newdocs-functions" [color=purple penwidth=1 style=dashed]
	"numpy.add_newdocs.add_newdoc" [color=purple fontsize=16 shape=none]
		"numpy.add_newdocs-functions" -> "numpy.add_newdocs.add_newdoc" [color=purple penwidth=1 style=dashed]
	"numpy.add_newdocs-nofta" [color=black fontsize=16 shape=none]
		"numpy.add_newdocs" -> "numpy.add_newdocs-nofta" [color=black penwidth=1 style=dashed]
	"numpy.add_newdocs.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.add_newdocs-nofta" -> "numpy.add_newdocs.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.add_newdocs.__doc__" [color=black fontsize=16 shape=none]
		"numpy.add_newdocs-nofta" -> "numpy.add_newdocs.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.add_newdocs.__file__" [color=black fontsize=16 shape=none]
		"numpy.add_newdocs-nofta" -> "numpy.add_newdocs.__file__" [color=black penwidth=1 style=dashed]
	"numpy.add_newdocs.__name__" [color=black fontsize=16 shape=none]
		"numpy.add_newdocs-nofta" -> "numpy.add_newdocs.__name__" [color=black penwidth=1 style=dashed]
	"numpy.add_newdocs.__package__" [color=black fontsize=16 shape=none]
		"numpy.add_newdocs-nofta" -> "numpy.add_newdocs.__package__" [color=black penwidth=1 style=dashed]
	"numpy.add_newdocs.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.add_newdocs-nofta" -> "numpy.add_newdocs.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.add_newdocs.division" [color=black fontsize=16 shape=none]
		"numpy.add_newdocs-nofta" -> "numpy.add_newdocs.division" [color=black penwidth=1 style=dashed]
	"numpy.add_newdocs.print_function" [color=black fontsize=16 shape=none]
		"numpy.add_newdocs-nofta" -> "numpy.add_newdocs.print_function" [color=black penwidth=1 style=dashed]
	"numpy.add_newdocs.tobytesdoc" [color=black fontsize=16 shape=none]
		"numpy.add_newdocs-nofta" -> "numpy.add_newdocs.tobytesdoc" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix-builtins" [color=red fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix" -> "numpy.matrixlib.defmatrix-builtins" [color=red penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.concatenate" [color=red fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-builtins" -> "numpy.matrixlib.defmatrix.concatenate" [color=red penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix-classes" [color=gold fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix" -> "numpy.matrixlib.defmatrix-classes" [color=gold penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.matrix" [color=gold fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-classes" -> "numpy.matrixlib.defmatrix.matrix" [color=gold penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix-functions" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix" -> "numpy.matrixlib.defmatrix-functions" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix._convert_from_string" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-functions" -> "numpy.matrixlib.defmatrix._convert_from_string" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix._eval" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-functions" -> "numpy.matrixlib.defmatrix._eval" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix._from_string" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-functions" -> "numpy.matrixlib.defmatrix._from_string" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-functions" -> "numpy.matrixlib.defmatrix.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.asmatrix" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-functions" -> "numpy.matrixlib.defmatrix.asmatrix" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.binary_repr" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-functions" -> "numpy.matrixlib.defmatrix.binary_repr" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.bmat" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-functions" -> "numpy.matrixlib.defmatrix.bmat" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.identity" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-functions" -> "numpy.matrixlib.defmatrix.identity" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.isscalar" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-functions" -> "numpy.matrixlib.defmatrix.isscalar" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.issubdtype" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-functions" -> "numpy.matrixlib.defmatrix.issubdtype" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.mat" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-functions" -> "numpy.matrixlib.defmatrix.mat" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.matrix_power" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-functions" -> "numpy.matrixlib.defmatrix.matrix_power" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix-nofta" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix" -> "numpy.matrixlib.defmatrix-nofta" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.__all__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-nofta" -> "numpy.matrixlib.defmatrix.__all__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-nofta" -> "numpy.matrixlib.defmatrix.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.__doc__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-nofta" -> "numpy.matrixlib.defmatrix.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.__file__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-nofta" -> "numpy.matrixlib.defmatrix.__file__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.__name__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-nofta" -> "numpy.matrixlib.defmatrix.__name__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.__package__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-nofta" -> "numpy.matrixlib.defmatrix.__package__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix._numchars" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-nofta" -> "numpy.matrixlib.defmatrix._numchars" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix._table" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-nofta" -> "numpy.matrixlib.defmatrix._table" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix._todelete" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-nofta" -> "numpy.matrixlib.defmatrix._todelete" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-nofta" -> "numpy.matrixlib.defmatrix.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.division" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-nofta" -> "numpy.matrixlib.defmatrix.division" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.print_function" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix-nofta" -> "numpy.matrixlib.defmatrix.print_function" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.getlimits" -> "numpy.core.getlimits-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.getlimits.array" [color=red fontsize=16 shape=none]
		"numpy.core.getlimits-builtins" -> "numpy.core.getlimits.array" [color=red penwidth=1 style=dashed]
	"numpy.core.getlimits-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.getlimits" -> "numpy.core.getlimits-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.getlimits.MachAr" [color=gold fontsize=16 shape=none]
		"numpy.core.getlimits-classes" -> "numpy.core.getlimits.MachAr" [color=gold penwidth=1 style=dashed]
	"numpy.core.getlimits.finfo" [color=gold fontsize=16 shape=none]
		"numpy.core.getlimits-classes" -> "numpy.core.getlimits.finfo" [color=gold penwidth=1 style=dashed]
	"numpy.core.getlimits.iinfo" [color=gold fontsize=16 shape=none]
		"numpy.core.getlimits-classes" -> "numpy.core.getlimits.iinfo" [color=gold penwidth=1 style=dashed]
	"numpy.core.getlimits-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.getlimits" -> "numpy.core.getlimits-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.getlimits._frz" [color=purple fontsize=16 shape=none]
		"numpy.core.getlimits-functions" -> "numpy.core.getlimits._frz" [color=purple penwidth=1 style=dashed]
	"numpy.core.getlimits-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits" -> "numpy.core.getlimits-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits.__all__" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits-nofta" -> "numpy.core.getlimits.__all__" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits-nofta" -> "numpy.core.getlimits.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits-nofta" -> "numpy.core.getlimits.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits-nofta" -> "numpy.core.getlimits.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits-nofta" -> "numpy.core.getlimits.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits-nofta" -> "numpy.core.getlimits.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits._convert_to_float" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits-nofta" -> "numpy.core.getlimits._convert_to_float" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits-nofta" -> "numpy.core.getlimits.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits.division" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits-nofta" -> "numpy.core.getlimits.division" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits.print_function" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits-nofta" -> "numpy.core.getlimits.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath.nx-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.scimath.nx" -> "numpy.lib.scimath.nx-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.scimath.nx-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.scimath.nx" -> "numpy.lib.scimath.nx-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.scimath.nx-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath.nx" -> "numpy.lib.scimath.nx-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.nx-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath.nx" -> "numpy.lib.scimath.nx-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.utils.warnings" -> "numpy.testing.utils.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.utils.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils.warnings" -> "numpy.testing.utils.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils.warnings" -> "numpy.testing.utils.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.utils.warnings" -> "numpy.testing.utils.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath.nt-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.scimath.nt" -> "numpy.lib.scimath.nt-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.scimath.nt-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.scimath.nt" -> "numpy.lib.scimath.nt-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.scimath.nt-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath.nt" -> "numpy.lib.scimath.nt-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.nt-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath.nt" -> "numpy.lib.scimath.nt-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray.numpy-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.defchararray.numpy" -> "numpy.core.defchararray.numpy-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.defchararray.numpy-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray.numpy" -> "numpy.core.defchararray.numpy-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray.numpy-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray.numpy" -> "numpy.core.defchararray.numpy-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.numpy-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray.numpy" -> "numpy.core.defchararray.numpy-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.decorators-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.decorators" -> "numpy.testing.decorators-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.decorators-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.decorators" -> "numpy.testing.decorators-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.decorators.SkipTest" [color=gold fontsize=16 shape=none]
		"numpy.testing.decorators-classes" -> "numpy.testing.decorators.SkipTest" [color=gold penwidth=1 style=dashed]
	"numpy.testing.decorators-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.decorators" -> "numpy.testing.decorators-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.decorators.deprecated" [color=purple fontsize=16 shape=none]
		"numpy.testing.decorators-functions" -> "numpy.testing.decorators.deprecated" [color=purple penwidth=1 style=dashed]
	"numpy.testing.decorators.knownfailureif" [color=purple fontsize=16 shape=none]
		"numpy.testing.decorators-functions" -> "numpy.testing.decorators.knownfailureif" [color=purple penwidth=1 style=dashed]
	"numpy.testing.decorators.setastest" [color=purple fontsize=16 shape=none]
		"numpy.testing.decorators-functions" -> "numpy.testing.decorators.setastest" [color=purple penwidth=1 style=dashed]
	"numpy.testing.decorators.skipif" [color=purple fontsize=16 shape=none]
		"numpy.testing.decorators-functions" -> "numpy.testing.decorators.skipif" [color=purple penwidth=1 style=dashed]
	"numpy.testing.decorators.slow" [color=purple fontsize=16 shape=none]
		"numpy.testing.decorators-functions" -> "numpy.testing.decorators.slow" [color=purple penwidth=1 style=dashed]
	"numpy.testing.decorators-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.decorators" -> "numpy.testing.decorators-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.decorators.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.testing.decorators-nofta" -> "numpy.testing.decorators.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.testing.decorators.__doc__" [color=black fontsize=16 shape=none]
		"numpy.testing.decorators-nofta" -> "numpy.testing.decorators.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.testing.decorators.__file__" [color=black fontsize=16 shape=none]
		"numpy.testing.decorators-nofta" -> "numpy.testing.decorators.__file__" [color=black penwidth=1 style=dashed]
	"numpy.testing.decorators.__name__" [color=black fontsize=16 shape=none]
		"numpy.testing.decorators-nofta" -> "numpy.testing.decorators.__name__" [color=black penwidth=1 style=dashed]
	"numpy.testing.decorators.__package__" [color=black fontsize=16 shape=none]
		"numpy.testing.decorators-nofta" -> "numpy.testing.decorators.__package__" [color=black penwidth=1 style=dashed]
	"numpy.testing.decorators.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.testing.decorators-nofta" -> "numpy.testing.decorators.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.testing.decorators.division" [color=black fontsize=16 shape=none]
		"numpy.testing.decorators-nofta" -> "numpy.testing.decorators.division" [color=black penwidth=1 style=dashed]
	"numpy.testing.decorators.print_function" [color=black fontsize=16 shape=none]
		"numpy.testing.decorators-nofta" -> "numpy.testing.decorators.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.utils" -> "numpy.lib.utils-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.utils-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.utils" -> "numpy.lib.utils-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.utils.SafeEval" [color=gold fontsize=16 shape=none]
		"numpy.lib.utils-classes" -> "numpy.lib.utils.SafeEval" [color=gold penwidth=1 style=dashed]
	"numpy.lib.utils._Deprecate" [color=gold fontsize=16 shape=none]
		"numpy.lib.utils-classes" -> "numpy.lib.utils._Deprecate" [color=gold penwidth=1 style=dashed]
	"numpy.lib.utils.ndarray" [color=gold fontsize=16 shape=none]
		"numpy.lib.utils-classes" -> "numpy.lib.utils.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.lib.utils.ufunc" [color=gold fontsize=16 shape=none]
		"numpy.lib.utils-classes" -> "numpy.lib.utils.ufunc" [color=gold penwidth=1 style=dashed]
	"numpy.lib.utils-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils" -> "numpy.lib.utils-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils._getmembers" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils._getmembers" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils._info" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils._info" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils._lookfor_generate_cache" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils._lookfor_generate_cache" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils._makenamedict" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils._makenamedict" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils._set_function_name" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils._set_function_name" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils._split_line" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils._split_line" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.asarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.byte_bounds" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.byte_bounds" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.deprecate" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.deprecate" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.deprecate_with_doc" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.deprecate_with_doc" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.formatargspec" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.formatargspec" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.get_include" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.get_include" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.getargspec" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.getargspec" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.info" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.info" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.issubclass_" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.issubclass_" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.issubdtype" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.issubdtype" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.issubsctype" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.issubsctype" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.lookfor" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.lookfor" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.safe_eval" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.safe_eval" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.source" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.source" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.who" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils-functions" -> "numpy.lib.utils.who" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.utils" -> "numpy.lib.utils-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils._dictlist" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils._dictlist" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils._function_signature_re" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils._function_signature_re" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils._lookfor_caches" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils._lookfor_caches" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils._namedict" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils._namedict" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.division" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.utils-nofta" -> "numpy.lib.utils.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio" -> "numpy.lib.npyio-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio.loads" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio-builtins" -> "numpy.lib.npyio.loads" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio.packbits" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio-builtins" -> "numpy.lib.npyio.packbits" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio.unpackbits" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio-builtins" -> "numpy.lib.npyio.unpackbits" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio" -> "numpy.lib.npyio-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.BagObj" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.BagObj" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.ConversionWarning" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.ConversionWarning" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.ConverterError" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.ConverterError" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.ConverterLockError" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.ConverterLockError" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.DataSource" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.DataSource" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.LineSplitter" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.LineSplitter" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.NameValidator" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.NameValidator" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.NpzFile" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.NpzFile" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.StringConverter" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.StringConverter" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio._bytes_to_name" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio._bytes_to_name" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.asbytes" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.asbytes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.asstr" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.asstr" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.basestring" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.basestring" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.bytes" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.bytes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.itemgetter" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.itemgetter" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.map" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.map" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.unicode" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio-classes" -> "numpy.lib.npyio.unicode" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio" -> "numpy.lib.npyio-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio._getconv" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio._getconv" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio._is_string_like" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio._is_string_like" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio._savez" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio._savez" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.asbytes_nested" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.asbytes_nested" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.easy_dtype" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.easy_dtype" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.flatten_dtype" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.flatten_dtype" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.fromregex" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.fromregex" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.genfromtxt" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.genfromtxt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.has_nested_fields" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.has_nested_fields" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.load" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.load" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.loadtxt" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.loadtxt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.mafromtxt" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.mafromtxt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.ndfromtxt" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.ndfromtxt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.recfromcsv" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.recfromcsv" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.recfromtxt" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.recfromtxt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.save" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.save" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.savetxt" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.savetxt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.savez" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.savez" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.savez_compressed" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.savez_compressed" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.zipfile_factory" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio-functions" -> "numpy.lib.npyio.zipfile_factory" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio" -> "numpy.lib.npyio-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio-nofta" -> "numpy.lib.npyio.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio-nofta" -> "numpy.lib.npyio.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio-nofta" -> "numpy.lib.npyio.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio-nofta" -> "numpy.lib.npyio.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio-nofta" -> "numpy.lib.npyio.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio-nofta" -> "numpy.lib.npyio.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio-nofta" -> "numpy.lib.npyio.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.division" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio-nofta" -> "numpy.lib.npyio.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio-nofta" -> "numpy.lib.npyio.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.os-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.utils.os" -> "numpy.lib.utils.os-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.utils.os-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.utils.os" -> "numpy.lib.utils.os-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.utils.os-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils.os" -> "numpy.lib.utils.os-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.os-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.utils.os" -> "numpy.lib.utils.os-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.core.sys" -> "numpy.ma.core.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.core.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.core.sys" -> "numpy.ma.core.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.core.sys" -> "numpy.ma.core.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.core.sys" -> "numpy.ma.core.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.random.mtrand-builtins" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand" -> "numpy.random.mtrand-builtins" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.Lock" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.Lock" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand._rand_bool" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand._rand_bool" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand._rand_int16" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand._rand_int16" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand._rand_int32" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand._rand_int32" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand._rand_int64" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand._rand_int64" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand._rand_int8" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand._rand_int8" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand._rand_uint16" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand._rand_uint16" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand._rand_uint32" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand._rand_uint32" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand._rand_uint64" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand._rand_uint64" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand._rand_uint8" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand._rand_uint8" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand._shape_from_size" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand._shape_from_size" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.beta" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.beta" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.binomial" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.binomial" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.bytes" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.bytes" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.chisquare" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.chisquare" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.choice" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.choice" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.dirichlet" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.dirichlet" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.exponential" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.exponential" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.f" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.f" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.gamma" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.gamma" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.geometric" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.geometric" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.get_state" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.get_state" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.gumbel" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.gumbel" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.hypergeometric" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.hypergeometric" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.laplace" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.laplace" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.logistic" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.logistic" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.lognormal" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.lognormal" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.logseries" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.logseries" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.multinomial" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.multinomial" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.multivariate_normal" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.multivariate_normal" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.negative_binomial" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.negative_binomial" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.noncentral_chisquare" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.noncentral_chisquare" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.noncentral_f" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.noncentral_f" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.normal" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.normal" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.pareto" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.pareto" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.permutation" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.permutation" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.poisson" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.poisson" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.power" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.power" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.rand" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.rand" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.randint" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.randint" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.randn" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.randn" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.random_integers" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.random_integers" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.random_sample" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.random_sample" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.rayleigh" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.rayleigh" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.seed" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.seed" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.set_state" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.set_state" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.shuffle" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.shuffle" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.standard_cauchy" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.standard_cauchy" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.standard_exponential" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.standard_exponential" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.standard_gamma" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.standard_gamma" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.standard_normal" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.standard_normal" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.standard_t" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.standard_t" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.triangular" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.triangular" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.uniform" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.uniform" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.vonmises" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.vonmises" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.wald" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.wald" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.weibull" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.weibull" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.zipf" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand-builtins" -> "numpy.random.mtrand.zipf" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand-classes" [color=gold fontsize=16 shape=none]
		"numpy.random.mtrand" -> "numpy.random.mtrand-classes" [color=gold penwidth=1 style=dashed]
	"numpy.random.mtrand.RandomState" [color=gold fontsize=16 shape=none]
		"numpy.random.mtrand-classes" -> "numpy.random.mtrand.RandomState" [color=gold penwidth=1 style=dashed]
	"numpy.random.mtrand-functions" [color=purple fontsize=16 shape=none]
		"numpy.random.mtrand" -> "numpy.random.mtrand-functions" [color=purple penwidth=1 style=dashed]
	"numpy.random.mtrand-nofta" [color=black fontsize=16 shape=none]
		"numpy.random.mtrand" -> "numpy.random.mtrand-nofta" [color=black penwidth=1 style=dashed]
	"numpy.random.mtrand.__doc__" [color=black fontsize=16 shape=none]
		"numpy.random.mtrand-nofta" -> "numpy.random.mtrand.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.random.mtrand.__file__" [color=black fontsize=16 shape=none]
		"numpy.random.mtrand-nofta" -> "numpy.random.mtrand.__file__" [color=black penwidth=1 style=dashed]
	"numpy.random.mtrand.__name__" [color=black fontsize=16 shape=none]
		"numpy.random.mtrand-nofta" -> "numpy.random.mtrand.__name__" [color=black penwidth=1 style=dashed]
	"numpy.random.mtrand.__package__" [color=black fontsize=16 shape=none]
		"numpy.random.mtrand-nofta" -> "numpy.random.mtrand.__package__" [color=black penwidth=1 style=dashed]
	"numpy.random.mtrand.__test__" [color=black fontsize=16 shape=none]
		"numpy.random.mtrand-nofta" -> "numpy.random.mtrand.__test__" [color=black penwidth=1 style=dashed]
	"numpy.random.mtrand._rand" [color=black fontsize=16 shape=none]
		"numpy.random.mtrand-nofta" -> "numpy.random.mtrand._rand" [color=black penwidth=1 style=dashed]
	"numpy.random.mtrand._randint_type" [color=black fontsize=16 shape=none]
		"numpy.random.mtrand-nofta" -> "numpy.random.mtrand._randint_type" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.mu-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.fromnumeric.mu" -> "numpy.core.fromnumeric.mu-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.fromnumeric.mu-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.fromnumeric.mu" -> "numpy.core.fromnumeric.mu-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.fromnumeric.mu-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric.mu" -> "numpy.core.fromnumeric.mu-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.mu-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric.mu" -> "numpy.core.fromnumeric.mu-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.polynomial.warnings" -> "numpy.lib.polynomial.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.polynomial.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.polynomial.warnings" -> "numpy.lib.polynomial.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.polynomial.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial.warnings" -> "numpy.lib.polynomial.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial.warnings" -> "numpy.lib.polynomial.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio.warnings" -> "numpy.lib.npyio.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio.warnings" -> "numpy.lib.npyio.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio.warnings" -> "numpy.lib.npyio.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio.warnings" -> "numpy.lib.npyio.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.pu-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.hermite.pu" -> "numpy.polynomial.hermite.pu-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.hermite.pu-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite.pu" -> "numpy.polynomial.hermite.pu-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite.pu-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite.pu" -> "numpy.polynomial.hermite.pu-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.pu-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite.pu" -> "numpy.polynomial.hermite.pu-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.warnings" -> "numpy.polynomial.chebyshev.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.warnings" -> "numpy.polynomial.chebyshev.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.warnings" -> "numpy.polynomial.chebyshev.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.warnings" -> "numpy.polynomial.chebyshev.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.warnings" -> "numpy.polynomial.hermite_e.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.warnings" -> "numpy.polynomial.hermite_e.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.warnings" -> "numpy.polynomial.hermite_e.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.warnings" -> "numpy.polynomial.hermite_e.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.re-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.utils.re" -> "numpy.lib.utils.re-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.utils.re-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.utils.re" -> "numpy.lib.utils.re-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.utils.re-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils.re" -> "numpy.lib.utils.re-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.re-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.utils.re" -> "numpy.lib.utils.re-nofta" [color=black penwidth=1 style=dashed]
	"numpy.fft.helper-builtins" [color=red fontsize=16 shape=none]
		"numpy.fft.helper" -> "numpy.fft.helper-builtins" [color=red penwidth=1 style=dashed]
	"numpy.fft.helper.arange" [color=red fontsize=16 shape=none]
		"numpy.fft.helper-builtins" -> "numpy.fft.helper.arange" [color=red penwidth=1 style=dashed]
	"numpy.fft.helper.concatenate" [color=red fontsize=16 shape=none]
		"numpy.fft.helper-builtins" -> "numpy.fft.helper.concatenate" [color=red penwidth=1 style=dashed]
	"numpy.fft.helper.empty" [color=red fontsize=16 shape=none]
		"numpy.fft.helper-builtins" -> "numpy.fft.helper.empty" [color=red penwidth=1 style=dashed]
	"numpy.fft.helper-classes" [color=gold fontsize=16 shape=none]
		"numpy.fft.helper" -> "numpy.fft.helper-classes" [color=gold penwidth=1 style=dashed]
	"numpy.fft.helper.integer" [color=gold fontsize=16 shape=none]
		"numpy.fft.helper-classes" -> "numpy.fft.helper.integer" [color=gold penwidth=1 style=dashed]
	"numpy.fft.helper-functions" [color=purple fontsize=16 shape=none]
		"numpy.fft.helper" -> "numpy.fft.helper-functions" [color=purple penwidth=1 style=dashed]
	"numpy.fft.helper.asarray" [color=purple fontsize=16 shape=none]
		"numpy.fft.helper-functions" -> "numpy.fft.helper.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.fft.helper.fftfreq" [color=purple fontsize=16 shape=none]
		"numpy.fft.helper-functions" -> "numpy.fft.helper.fftfreq" [color=purple penwidth=1 style=dashed]
	"numpy.fft.helper.fftshift" [color=purple fontsize=16 shape=none]
		"numpy.fft.helper-functions" -> "numpy.fft.helper.fftshift" [color=purple penwidth=1 style=dashed]
	"numpy.fft.helper.ifftshift" [color=purple fontsize=16 shape=none]
		"numpy.fft.helper-functions" -> "numpy.fft.helper.ifftshift" [color=purple penwidth=1 style=dashed]
	"numpy.fft.helper.rfftfreq" [color=purple fontsize=16 shape=none]
		"numpy.fft.helper-functions" -> "numpy.fft.helper.rfftfreq" [color=purple penwidth=1 style=dashed]
	"numpy.fft.helper.take" [color=purple fontsize=16 shape=none]
		"numpy.fft.helper-functions" -> "numpy.fft.helper.take" [color=purple penwidth=1 style=dashed]
	"numpy.fft.helper-nofta" [color=black fontsize=16 shape=none]
		"numpy.fft.helper" -> "numpy.fft.helper-nofta" [color=black penwidth=1 style=dashed]
	"numpy.fft.helper.__all__" [color=black fontsize=16 shape=none]
		"numpy.fft.helper-nofta" -> "numpy.fft.helper.__all__" [color=black penwidth=1 style=dashed]
	"numpy.fft.helper.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.fft.helper-nofta" -> "numpy.fft.helper.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.fft.helper.__doc__" [color=black fontsize=16 shape=none]
		"numpy.fft.helper-nofta" -> "numpy.fft.helper.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.fft.helper.__file__" [color=black fontsize=16 shape=none]
		"numpy.fft.helper-nofta" -> "numpy.fft.helper.__file__" [color=black penwidth=1 style=dashed]
	"numpy.fft.helper.__name__" [color=black fontsize=16 shape=none]
		"numpy.fft.helper-nofta" -> "numpy.fft.helper.__name__" [color=black penwidth=1 style=dashed]
	"numpy.fft.helper.__package__" [color=black fontsize=16 shape=none]
		"numpy.fft.helper-nofta" -> "numpy.fft.helper.__package__" [color=black penwidth=1 style=dashed]
	"numpy.fft.helper.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.fft.helper-nofta" -> "numpy.fft.helper.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.fft.helper.division" [color=black fontsize=16 shape=none]
		"numpy.fft.helper-nofta" -> "numpy.fft.helper.division" [color=black penwidth=1 style=dashed]
	"numpy.fft.helper.integer_types" [color=black fontsize=16 shape=none]
		"numpy.fft.helper-nofta" -> "numpy.fft.helper.integer_types" [color=black penwidth=1 style=dashed]
	"numpy.fft.helper.print_function" [color=black fontsize=16 shape=none]
		"numpy.fft.helper-nofta" -> "numpy.fft.helper.print_function" [color=black penwidth=1 style=dashed]
	"numpy.core.records.os-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.records.os" -> "numpy.core.records.os-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.records.os-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.records.os" -> "numpy.core.records.os-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.records.os-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.records.os" -> "numpy.core.records.os-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.records.os-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.records.os" -> "numpy.core.records.os-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.um-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.fromnumeric.um" -> "numpy.core.fromnumeric.um-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.fromnumeric.um-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.fromnumeric.um" -> "numpy.core.fromnumeric.um-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.fromnumeric.um-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric.um" -> "numpy.core.fromnumeric.um-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.um-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric.um" -> "numpy.core.fromnumeric.um-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.laguerre.warnings" -> "numpy.polynomial.laguerre.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.laguerre.warnings" -> "numpy.polynomial.laguerre.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre.warnings" -> "numpy.polynomial.laguerre.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre.warnings" -> "numpy.polynomial.laguerre.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.ufunclike-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.ufunclike" -> "numpy.lib.ufunclike-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.ufunclike-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.ufunclike" -> "numpy.lib.ufunclike-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.ufunclike-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.ufunclike" -> "numpy.lib.ufunclike-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.ufunclike.fix" [color=purple fontsize=16 shape=none]
		"numpy.lib.ufunclike-functions" -> "numpy.lib.ufunclike.fix" [color=purple penwidth=1 style=dashed]
	"numpy.lib.ufunclike.isneginf" [color=purple fontsize=16 shape=none]
		"numpy.lib.ufunclike-functions" -> "numpy.lib.ufunclike.isneginf" [color=purple penwidth=1 style=dashed]
	"numpy.lib.ufunclike.isposinf" [color=purple fontsize=16 shape=none]
		"numpy.lib.ufunclike-functions" -> "numpy.lib.ufunclike.isposinf" [color=purple penwidth=1 style=dashed]
	"numpy.lib.ufunclike-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.ufunclike" -> "numpy.lib.ufunclike-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.ufunclike.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.ufunclike-nofta" -> "numpy.lib.ufunclike.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.ufunclike.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.ufunclike-nofta" -> "numpy.lib.ufunclike.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.ufunclike.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.ufunclike-nofta" -> "numpy.lib.ufunclike.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.ufunclike.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.ufunclike-nofta" -> "numpy.lib.ufunclike.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.ufunclike.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.ufunclike-nofta" -> "numpy.lib.ufunclike.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.ufunclike.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.ufunclike-nofta" -> "numpy.lib.ufunclike.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.ufunclike.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.ufunclike-nofta" -> "numpy.lib.ufunclike.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.ufunclike.division" [color=black fontsize=16 shape=none]
		"numpy.lib.ufunclike-nofta" -> "numpy.lib.ufunclike.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.ufunclike.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.ufunclike-nofta" -> "numpy.lib.ufunclike.print_function" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.os-builtins" [color=red fontsize=16 shape=none]
		"numpy.ctypeslib.os" -> "numpy.ctypeslib.os-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ctypeslib.os-classes" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib.os" -> "numpy.ctypeslib.os-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib.os-functions" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib.os" -> "numpy.ctypeslib.os-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.os-nofta" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib.os" -> "numpy.ctypeslib.os-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.multiarray-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numeric.multiarray" -> "numpy.core.numeric.multiarray-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.multiarray-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric.multiarray" -> "numpy.core.numeric.multiarray-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.multiarray-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric.multiarray" -> "numpy.core.numeric.multiarray-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.multiarray-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numeric.multiarray" -> "numpy.core.numeric.multiarray-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.laguerre" -> "numpy.polynomial.laguerre-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.laguerre-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.laguerre" -> "numpy.polynomial.laguerre-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.ABCPolyBase" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.laguerre-classes" -> "numpy.polynomial.laguerre.ABCPolyBase" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.Laguerre" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.laguerre-classes" -> "numpy.polynomial.laguerre.Laguerre" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.laguerre-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre" -> "numpy.polynomial.laguerre-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lag2poly" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lag2poly" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagadd" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagadd" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagcompanion" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagcompanion" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagder" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagder" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagdiv" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagdiv" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagfit" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagfit" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagfromroots" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagfromroots" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.laggauss" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.laggauss" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.laggrid2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.laggrid2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.laggrid3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.laggrid3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagint" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagint" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagline" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagline" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagmul" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagmul" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagmulx" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagmulx" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagpow" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagpow" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagroots" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagroots" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagsub" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagsub" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagtrim" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagtrim" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagval" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagval" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagval2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagval2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagval3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagval3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagvander" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagvander" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagvander2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagvander2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagvander3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagvander3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagweight" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.lagweight" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.poly2lag" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre-functions" -> "numpy.polynomial.laguerre.poly2lag" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre" -> "numpy.polynomial.laguerre-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.__all__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.__all__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.__doc__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.__file__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.__file__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.__name__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.__name__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.__package__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.__package__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.division" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.division" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagdomain" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.lagdomain" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagone" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.lagone" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagx" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.lagx" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.lagzero" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.lagzero" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.print_function" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre-nofta" -> "numpy.polynomial.laguerre.print_function" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numerictypes.sys" -> "numpy.core.numerictypes.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numerictypes.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes.sys" -> "numpy.core.numerictypes.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes.sys" -> "numpy.core.numerictypes.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes.sys" -> "numpy.core.numerictypes.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix.sys" -> "numpy.matrixlib.defmatrix.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix.sys" -> "numpy.matrixlib.defmatrix.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix.sys" -> "numpy.matrixlib.defmatrix.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix.sys" -> "numpy.matrixlib.defmatrix.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.utils.sys" -> "numpy.lib.utils.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.utils.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.utils.sys" -> "numpy.lib.utils.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.utils.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils.sys" -> "numpy.lib.utils.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.utils.sys" -> "numpy.lib.utils.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.re-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.utils.re" -> "numpy.testing.utils.re-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.utils.re-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils.re" -> "numpy.testing.utils.re-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.re-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils.re" -> "numpy.testing.utils.re-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.re-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.utils.re" -> "numpy.testing.utils.re-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.la-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.polynomial.la" -> "numpy.polynomial.polynomial.la-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.la-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polynomial.la" -> "numpy.polynomial.polynomial.la-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.la-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial.la" -> "numpy.polynomial.polynomial.la-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.la-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial.la" -> "numpy.polynomial.polynomial.la-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.dec-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.dec" -> "numpy.testing.dec-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.dec-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.dec" -> "numpy.testing.dec-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.dec-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.dec" -> "numpy.testing.dec-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.dec-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.dec" -> "numpy.testing.dec-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.builtins-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.core.builtins" -> "numpy.ma.core.builtins-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.core.builtins-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.core.builtins" -> "numpy.ma.core.builtins-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.builtins-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.core.builtins" -> "numpy.ma.core.builtins-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.builtins-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.core.builtins" -> "numpy.ma.core.builtins-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.pu-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.legendre.pu" -> "numpy.polynomial.legendre.pu-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.legendre.pu-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.legendre.pu" -> "numpy.polynomial.legendre.pu-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.legendre.pu-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre.pu" -> "numpy.polynomial.legendre.pu-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.pu-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre.pu" -> "numpy.polynomial.legendre.pu-nofta" [color=black penwidth=1 style=dashed]
	"numpy.random.info-builtins" [color=red fontsize=16 shape=none]
		"numpy.random.info" -> "numpy.random.info-builtins" [color=red penwidth=1 style=dashed]
	"numpy.random.info-classes" [color=gold fontsize=16 shape=none]
		"numpy.random.info" -> "numpy.random.info-classes" [color=gold penwidth=1 style=dashed]
	"numpy.random.info-functions" [color=purple fontsize=16 shape=none]
		"numpy.random.info" -> "numpy.random.info-functions" [color=purple penwidth=1 style=dashed]
	"numpy.random.info-nofta" [color=black fontsize=16 shape=none]
		"numpy.random.info" -> "numpy.random.info-nofta" [color=black penwidth=1 style=dashed]
	"numpy.random.info.__all__" [color=black fontsize=16 shape=none]
		"numpy.random.info-nofta" -> "numpy.random.info.__all__" [color=black penwidth=1 style=dashed]
	"numpy.random.info.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.random.info-nofta" -> "numpy.random.info.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.random.info.__doc__" [color=black fontsize=16 shape=none]
		"numpy.random.info-nofta" -> "numpy.random.info.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.random.info.__file__" [color=black fontsize=16 shape=none]
		"numpy.random.info-nofta" -> "numpy.random.info.__file__" [color=black penwidth=1 style=dashed]
	"numpy.random.info.__name__" [color=black fontsize=16 shape=none]
		"numpy.random.info-nofta" -> "numpy.random.info.__name__" [color=black penwidth=1 style=dashed]
	"numpy.random.info.__package__" [color=black fontsize=16 shape=none]
		"numpy.random.info-nofta" -> "numpy.random.info.__package__" [color=black penwidth=1 style=dashed]
	"numpy.random.info.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.random.info-nofta" -> "numpy.random.info.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.random.info.depends" [color=black fontsize=16 shape=none]
		"numpy.random.info-nofta" -> "numpy.random.info.depends" [color=black penwidth=1 style=dashed]
	"numpy.random.info.division" [color=black fontsize=16 shape=none]
		"numpy.random.info-nofta" -> "numpy.random.info.division" [color=black penwidth=1 style=dashed]
	"numpy.random.info.print_function" [color=black fontsize=16 shape=none]
		"numpy.random.info-nofta" -> "numpy.random.info.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.stride_tricks.np" -> "numpy.lib.stride_tricks.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.stride_tricks.np" -> "numpy.lib.stride_tricks.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.stride_tricks.np" -> "numpy.lib.stride_tricks.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.stride_tricks.np" -> "numpy.lib.stride_tricks.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack-builtins" [color=red fontsize=16 shape=none]
		"numpy.fft.fftpack" -> "numpy.fft.fftpack-builtins" [color=red penwidth=1 style=dashed]
	"numpy.fft.fftpack.array" [color=red fontsize=16 shape=none]
		"numpy.fft.fftpack-builtins" -> "numpy.fft.fftpack.array" [color=red penwidth=1 style=dashed]
	"numpy.fft.fftpack.zeros" [color=red fontsize=16 shape=none]
		"numpy.fft.fftpack-builtins" -> "numpy.fft.fftpack.zeros" [color=red penwidth=1 style=dashed]
	"numpy.fft.fftpack-classes" [color=gold fontsize=16 shape=none]
		"numpy.fft.fftpack" -> "numpy.fft.fftpack-classes" [color=gold penwidth=1 style=dashed]
	"numpy.fft.fftpack-functions" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack" -> "numpy.fft.fftpack-functions" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack._cook_nd_args" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack._cook_nd_args" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack._raw_fft" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack._raw_fft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack._raw_fftnd" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack._raw_fftnd" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack._unitary" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack._unitary" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.asarray" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.fft" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.fft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.fft2" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.fft2" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.fftn" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.fftn" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.hfft" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.hfft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.ifft" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.ifft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.ifft2" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.ifft2" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.ifftn" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.ifftn" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.ihfft" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.ihfft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.irfft" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.irfft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.irfft2" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.irfft2" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.irfftn" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.irfftn" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.rfft" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.rfft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.rfft2" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.rfft2" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.rfftn" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.rfftn" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.shape" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.shape" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.swapaxes" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.swapaxes" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.take" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack-functions" -> "numpy.fft.fftpack.take" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack-nofta" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack" -> "numpy.fft.fftpack-nofta" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack.__all__" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack.__all__" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack.__doc__" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack.__file__" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack.__file__" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack.__name__" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack.__name__" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack.__package__" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack.__package__" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack._fft_cache" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack._fft_cache" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack._real_fft_cache" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack._real_fft_cache" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack.conjugate" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack.conjugate" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack.division" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack.division" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack.print_function" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack.print_function" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack.sqrt" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack-nofta" -> "numpy.fft.fftpack.sqrt" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.core.warnings" -> "numpy.ma.core.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.core.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.core.warnings" -> "numpy.ma.core.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.core.warnings" -> "numpy.ma.core.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.core.warnings" -> "numpy.ma.core.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite-builtins" [color=red fontsize=16 shape=none]
		"numpy.linalg.lapack_lite" -> "numpy.linalg.lapack_lite-builtins" [color=red penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite.dgelsd" [color=red fontsize=16 shape=none]
		"numpy.linalg.lapack_lite-builtins" -> "numpy.linalg.lapack_lite.dgelsd" [color=red penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite.dgeqrf" [color=red fontsize=16 shape=none]
		"numpy.linalg.lapack_lite-builtins" -> "numpy.linalg.lapack_lite.dgeqrf" [color=red penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite.dorgqr" [color=red fontsize=16 shape=none]
		"numpy.linalg.lapack_lite-builtins" -> "numpy.linalg.lapack_lite.dorgqr" [color=red penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite.xerbla" [color=red fontsize=16 shape=none]
		"numpy.linalg.lapack_lite-builtins" -> "numpy.linalg.lapack_lite.xerbla" [color=red penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite.zgelsd" [color=red fontsize=16 shape=none]
		"numpy.linalg.lapack_lite-builtins" -> "numpy.linalg.lapack_lite.zgelsd" [color=red penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite.zgeqrf" [color=red fontsize=16 shape=none]
		"numpy.linalg.lapack_lite-builtins" -> "numpy.linalg.lapack_lite.zgeqrf" [color=red penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite.zungqr" [color=red fontsize=16 shape=none]
		"numpy.linalg.lapack_lite-builtins" -> "numpy.linalg.lapack_lite.zungqr" [color=red penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite-classes" [color=gold fontsize=16 shape=none]
		"numpy.linalg.lapack_lite" -> "numpy.linalg.lapack_lite-classes" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite.LapackError" [color=gold fontsize=16 shape=none]
		"numpy.linalg.lapack_lite-classes" -> "numpy.linalg.lapack_lite.LapackError" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite-functions" [color=purple fontsize=16 shape=none]
		"numpy.linalg.lapack_lite" -> "numpy.linalg.lapack_lite-functions" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite-nofta" [color=black fontsize=16 shape=none]
		"numpy.linalg.lapack_lite" -> "numpy.linalg.lapack_lite-nofta" [color=black penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite.__doc__" [color=black fontsize=16 shape=none]
		"numpy.linalg.lapack_lite-nofta" -> "numpy.linalg.lapack_lite.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite.__file__" [color=black fontsize=16 shape=none]
		"numpy.linalg.lapack_lite-nofta" -> "numpy.linalg.lapack_lite.__file__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite.__name__" [color=black fontsize=16 shape=none]
		"numpy.linalg.lapack_lite-nofta" -> "numpy.linalg.lapack_lite.__name__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.lapack_lite.__package__" [color=black fontsize=16 shape=none]
		"numpy.linalg.lapack_lite-nofta" -> "numpy.linalg.lapack_lite.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.index_tricks.sys" -> "numpy.lib.index_tricks.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.index_tricks.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks.sys" -> "numpy.lib.index_tricks.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks.sys" -> "numpy.lib.index_tricks.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks.sys" -> "numpy.lib.index_tricks.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.char-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.char" -> "numpy.core.char-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.char-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.char" -> "numpy.core.char-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.char-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.char" -> "numpy.core.char-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.char-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.char" -> "numpy.core.char-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.umath-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numeric.umath" -> "numpy.core.numeric.umath-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.umath-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric.umath" -> "numpy.core.numeric.umath-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.umath-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric.umath" -> "numpy.core.numeric.umath-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.umath-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numeric.umath" -> "numpy.core.numeric.umath-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraypad-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.arraypad" -> "numpy.lib.arraypad-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.arraypad-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.arraypad" -> "numpy.lib.arraypad-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.arraypad-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad" -> "numpy.lib.arraypad-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._append_const" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._append_const" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._append_edge" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._append_edge" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._append_max" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._append_max" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._append_mean" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._append_mean" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._append_med" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._append_med" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._append_min" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._append_min" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._append_ramp" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._append_ramp" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._arange_ndarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._arange_ndarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._normalize_shape" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._normalize_shape" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._pad_ref" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._pad_ref" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._pad_sym" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._pad_sym" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._pad_wrap" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._pad_wrap" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._prepend_const" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._prepend_const" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._prepend_edge" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._prepend_edge" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._prepend_max" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._prepend_max" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._prepend_mean" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._prepend_mean" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._prepend_med" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._prepend_med" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._prepend_min" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._prepend_min" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._prepend_ramp" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._prepend_ramp" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._round_ifneeded" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._round_ifneeded" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad._validate_lengths" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad._validate_lengths" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad.pad" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad-functions" -> "numpy.lib.arraypad.pad" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.arraypad" -> "numpy.lib.arraypad-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraypad.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.arraypad-nofta" -> "numpy.lib.arraypad.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraypad.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.arraypad-nofta" -> "numpy.lib.arraypad.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraypad.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.arraypad-nofta" -> "numpy.lib.arraypad.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraypad.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.arraypad-nofta" -> "numpy.lib.arraypad.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraypad.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.arraypad-nofta" -> "numpy.lib.arraypad.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraypad.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.arraypad-nofta" -> "numpy.lib.arraypad.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraypad.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.arraypad-nofta" -> "numpy.lib.arraypad.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraypad.division" [color=black fontsize=16 shape=none]
		"numpy.lib.arraypad-nofta" -> "numpy.lib.arraypad.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraypad.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.arraypad-nofta" -> "numpy.lib.arraypad.print_function" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.nt-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.fromnumeric.nt" -> "numpy.core.fromnumeric.nt-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.fromnumeric.nt-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.fromnumeric.nt" -> "numpy.core.fromnumeric.nt-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.fromnumeric.nt-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric.nt" -> "numpy.core.fromnumeric.nt-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.nt-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric.nt" -> "numpy.core.fromnumeric.nt-nofta" [color=black penwidth=1 style=dashed]
	"numpy.random.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.random.warnings" -> "numpy.random.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.random.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.random.warnings" -> "numpy.random.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.random.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.random.warnings" -> "numpy.random.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.random.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.random.warnings" -> "numpy.random.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.fft.fftpack.fftpack-builtins" [color=red fontsize=16 shape=none]
		"numpy.fft.fftpack.fftpack" -> "numpy.fft.fftpack.fftpack-builtins" [color=red penwidth=1 style=dashed]
	"numpy.fft.fftpack.fftpack-classes" [color=gold fontsize=16 shape=none]
		"numpy.fft.fftpack.fftpack" -> "numpy.fft.fftpack.fftpack-classes" [color=gold penwidth=1 style=dashed]
	"numpy.fft.fftpack.fftpack-functions" [color=purple fontsize=16 shape=none]
		"numpy.fft.fftpack.fftpack" -> "numpy.fft.fftpack.fftpack-functions" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftpack.fftpack-nofta" [color=black fontsize=16 shape=none]
		"numpy.fft.fftpack.fftpack" -> "numpy.fft.fftpack.fftpack-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.fromnumeric.np" -> "numpy.core.fromnumeric.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.fromnumeric.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.fromnumeric.np" -> "numpy.core.fromnumeric.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.fromnumeric.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric.np" -> "numpy.core.fromnumeric.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric.np" -> "numpy.core.fromnumeric.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.shape_base-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.shape_base" -> "numpy.core.shape_base-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.shape_base-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.shape_base" -> "numpy.core.shape_base-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.shape_base-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.shape_base" -> "numpy.core.shape_base-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.shape_base.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy.core.shape_base-functions" -> "numpy.core.shape_base.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.shape_base.atleast_1d" [color=purple fontsize=16 shape=none]
		"numpy.core.shape_base-functions" -> "numpy.core.shape_base.atleast_1d" [color=purple penwidth=1 style=dashed]
	"numpy.core.shape_base.atleast_2d" [color=purple fontsize=16 shape=none]
		"numpy.core.shape_base-functions" -> "numpy.core.shape_base.atleast_2d" [color=purple penwidth=1 style=dashed]
	"numpy.core.shape_base.atleast_3d" [color=purple fontsize=16 shape=none]
		"numpy.core.shape_base-functions" -> "numpy.core.shape_base.atleast_3d" [color=purple penwidth=1 style=dashed]
	"numpy.core.shape_base.hstack" [color=purple fontsize=16 shape=none]
		"numpy.core.shape_base-functions" -> "numpy.core.shape_base.hstack" [color=purple penwidth=1 style=dashed]
	"numpy.core.shape_base.stack" [color=purple fontsize=16 shape=none]
		"numpy.core.shape_base-functions" -> "numpy.core.shape_base.stack" [color=purple penwidth=1 style=dashed]
	"numpy.core.shape_base.vstack" [color=purple fontsize=16 shape=none]
		"numpy.core.shape_base-functions" -> "numpy.core.shape_base.vstack" [color=purple penwidth=1 style=dashed]
	"numpy.core.shape_base-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.shape_base" -> "numpy.core.shape_base-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.shape_base.__all__" [color=black fontsize=16 shape=none]
		"numpy.core.shape_base-nofta" -> "numpy.core.shape_base.__all__" [color=black penwidth=1 style=dashed]
	"numpy.core.shape_base.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.core.shape_base-nofta" -> "numpy.core.shape_base.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.core.shape_base.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.shape_base-nofta" -> "numpy.core.shape_base.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.shape_base.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.shape_base-nofta" -> "numpy.core.shape_base.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.shape_base.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.shape_base-nofta" -> "numpy.core.shape_base.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.shape_base.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.shape_base-nofta" -> "numpy.core.shape_base.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.shape_base.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.core.shape_base-nofta" -> "numpy.core.shape_base.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.core.shape_base.division" [color=black fontsize=16 shape=none]
		"numpy.core.shape_base-nofta" -> "numpy.core.shape_base.division" [color=black penwidth=1 style=dashed]
	"numpy.core.shape_base.newaxis" [color=black fontsize=16 shape=none]
		"numpy.core.shape_base-nofta" -> "numpy.core.shape_base.newaxis" [color=black penwidth=1 style=dashed]
	"numpy.core.shape_base.print_function" [color=black fontsize=16 shape=none]
		"numpy.core.shape_base-nofta" -> "numpy.core.shape_base.print_function" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.ctypes-builtins" [color=red fontsize=16 shape=none]
		"numpy.ctypeslib.ctypes" -> "numpy.ctypeslib.ctypes-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ctypeslib.ctypes-classes" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib.ctypes" -> "numpy.ctypeslib.ctypes-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib.ctypes-functions" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib.ctypes" -> "numpy.ctypeslib.ctypes-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.ctypes-nofta" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib.ctypes" -> "numpy.ctypeslib.ctypes-nofta" [color=black penwidth=1 style=dashed]
	"numpy.random-builtins" [color=red fontsize=16 shape=none]
		"numpy.random" -> "numpy.random-builtins" [color=red penwidth=1 style=dashed]
	"numpy.random.Lock" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.Lock" [color=red penwidth=1 style=dashed]
	"numpy.random.beta" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.beta" [color=red penwidth=1 style=dashed]
	"numpy.random.binomial" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.binomial" [color=red penwidth=1 style=dashed]
	"numpy.random.bytes" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.bytes" [color=red penwidth=1 style=dashed]
	"numpy.random.chisquare" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.chisquare" [color=red penwidth=1 style=dashed]
	"numpy.random.choice" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.choice" [color=red penwidth=1 style=dashed]
	"numpy.random.dirichlet" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.dirichlet" [color=red penwidth=1 style=dashed]
	"numpy.random.exponential" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.exponential" [color=red penwidth=1 style=dashed]
	"numpy.random.f" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.f" [color=red penwidth=1 style=dashed]
	"numpy.random.gamma" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.gamma" [color=red penwidth=1 style=dashed]
	"numpy.random.geometric" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.geometric" [color=red penwidth=1 style=dashed]
	"numpy.random.get_state" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.get_state" [color=red penwidth=1 style=dashed]
	"numpy.random.gumbel" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.gumbel" [color=red penwidth=1 style=dashed]
	"numpy.random.hypergeometric" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.hypergeometric" [color=red penwidth=1 style=dashed]
	"numpy.random.laplace" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.laplace" [color=red penwidth=1 style=dashed]
	"numpy.random.logistic" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.logistic" [color=red penwidth=1 style=dashed]
	"numpy.random.lognormal" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.lognormal" [color=red penwidth=1 style=dashed]
	"numpy.random.logseries" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.logseries" [color=red penwidth=1 style=dashed]
	"numpy.random.multinomial" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.multinomial" [color=red penwidth=1 style=dashed]
	"numpy.random.multivariate_normal" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.multivariate_normal" [color=red penwidth=1 style=dashed]
	"numpy.random.negative_binomial" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.negative_binomial" [color=red penwidth=1 style=dashed]
	"numpy.random.noncentral_chisquare" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.noncentral_chisquare" [color=red penwidth=1 style=dashed]
	"numpy.random.noncentral_f" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.noncentral_f" [color=red penwidth=1 style=dashed]
	"numpy.random.normal" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.normal" [color=red penwidth=1 style=dashed]
	"numpy.random.pareto" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.pareto" [color=red penwidth=1 style=dashed]
	"numpy.random.permutation" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.permutation" [color=red penwidth=1 style=dashed]
	"numpy.random.poisson" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.poisson" [color=red penwidth=1 style=dashed]
	"numpy.random.power" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.power" [color=red penwidth=1 style=dashed]
	"numpy.random.rand" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.rand" [color=red penwidth=1 style=dashed]
	"numpy.random.randint" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.randint" [color=red penwidth=1 style=dashed]
	"numpy.random.randn" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.randn" [color=red penwidth=1 style=dashed]
	"numpy.random.random" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.random" [color=red penwidth=1 style=dashed]
	"numpy.random.random_integers" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.random_integers" [color=red penwidth=1 style=dashed]
	"numpy.random.random_sample" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.random_sample" [color=red penwidth=1 style=dashed]
	"numpy.random.ranf" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.ranf" [color=red penwidth=1 style=dashed]
	"numpy.random.rayleigh" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.rayleigh" [color=red penwidth=1 style=dashed]
	"numpy.random.sample" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.sample" [color=red penwidth=1 style=dashed]
	"numpy.random.seed" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.seed" [color=red penwidth=1 style=dashed]
	"numpy.random.set_state" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.set_state" [color=red penwidth=1 style=dashed]
	"numpy.random.shuffle" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.shuffle" [color=red penwidth=1 style=dashed]
	"numpy.random.standard_cauchy" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.standard_cauchy" [color=red penwidth=1 style=dashed]
	"numpy.random.standard_exponential" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.standard_exponential" [color=red penwidth=1 style=dashed]
	"numpy.random.standard_gamma" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.standard_gamma" [color=red penwidth=1 style=dashed]
	"numpy.random.standard_normal" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.standard_normal" [color=red penwidth=1 style=dashed]
	"numpy.random.standard_t" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.standard_t" [color=red penwidth=1 style=dashed]
	"numpy.random.triangular" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.triangular" [color=red penwidth=1 style=dashed]
	"numpy.random.uniform" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.uniform" [color=red penwidth=1 style=dashed]
	"numpy.random.vonmises" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.vonmises" [color=red penwidth=1 style=dashed]
	"numpy.random.wald" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.wald" [color=red penwidth=1 style=dashed]
	"numpy.random.weibull" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.weibull" [color=red penwidth=1 style=dashed]
	"numpy.random.zipf" [color=red fontsize=16 shape=none]
		"numpy.random-builtins" -> "numpy.random.zipf" [color=red penwidth=1 style=dashed]
	"numpy.random-classes" [color=gold fontsize=16 shape=none]
		"numpy.random" -> "numpy.random-classes" [color=gold penwidth=1 style=dashed]
	"numpy.random.RandomState" [color=gold fontsize=16 shape=none]
		"numpy.random-classes" -> "numpy.random.RandomState" [color=gold penwidth=1 style=dashed]
	"numpy.random-functions" [color=purple fontsize=16 shape=none]
		"numpy.random" -> "numpy.random-functions" [color=purple penwidth=1 style=dashed]
	"numpy.random.__RandomState_ctor" [color=purple fontsize=16 shape=none]
		"numpy.random-functions" -> "numpy.random.__RandomState_ctor" [color=purple penwidth=1 style=dashed]
	"numpy.random._numpy_tester" [color=purple fontsize=16 shape=none]
		"numpy.random-functions" -> "numpy.random._numpy_tester" [color=purple penwidth=1 style=dashed]
	"numpy.random-nofta" [color=black fontsize=16 shape=none]
		"numpy.random" -> "numpy.random-nofta" [color=black penwidth=1 style=dashed]
	"numpy.random.__all__" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.__all__" [color=black penwidth=1 style=dashed]
	"numpy.random.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.random.__doc__" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.random.__file__" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.__file__" [color=black penwidth=1 style=dashed]
	"numpy.random.__name__" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.__name__" [color=black penwidth=1 style=dashed]
	"numpy.random.__package__" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.__package__" [color=black penwidth=1 style=dashed]
	"numpy.random.__path__" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.__path__" [color=black penwidth=1 style=dashed]
	"numpy.random.__warningregistry__" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.__warningregistry__" [color=black penwidth=1 style=dashed]
	"numpy.random.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.random.bench" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.bench" [color=black penwidth=1 style=dashed]
	"numpy.random.division" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.division" [color=black penwidth=1 style=dashed]
	"numpy.random.print_function" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.print_function" [color=black penwidth=1 style=dashed]
	"numpy.random.test" [color=black fontsize=16 shape=none]
		"numpy.random-nofta" -> "numpy.random.test" [color=black penwidth=1 style=dashed]
	"numpy.random.mtrand.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.random.mtrand.warnings" -> "numpy.random.mtrand.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.random.mtrand.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.random.mtrand.warnings" -> "numpy.random.mtrand.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.random.mtrand.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.random.mtrand.warnings" -> "numpy.random.mtrand.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.random.mtrand.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.random.mtrand.warnings" -> "numpy.random.mtrand.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.itertools-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.extras.itertools" -> "numpy.ma.extras.itertools-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.extras.itertools-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras.itertools" -> "numpy.ma.extras.itertools-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras.itertools-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras.itertools" -> "numpy.ma.extras.itertools-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.itertools-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.extras.itertools" -> "numpy.ma.extras.itertools-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.nanfunctions.warnings" -> "numpy.lib.nanfunctions.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.nanfunctions.warnings" -> "numpy.lib.nanfunctions.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions.warnings" -> "numpy.lib.nanfunctions.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.nanfunctions.warnings" -> "numpy.lib.nanfunctions.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.twodim_base" -> "numpy.lib.twodim_base-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.twodim_base.arange" [color=red fontsize=16 shape=none]
		"numpy.lib.twodim_base-builtins" -> "numpy.lib.twodim_base.arange" [color=red penwidth=1 style=dashed]
	"numpy.lib.twodim_base.empty" [color=red fontsize=16 shape=none]
		"numpy.lib.twodim_base-builtins" -> "numpy.lib.twodim_base.empty" [color=red penwidth=1 style=dashed]
	"numpy.lib.twodim_base.promote_types" [color=red fontsize=16 shape=none]
		"numpy.lib.twodim_base-builtins" -> "numpy.lib.twodim_base.promote_types" [color=red penwidth=1 style=dashed]
	"numpy.lib.twodim_base.where" [color=red fontsize=16 shape=none]
		"numpy.lib.twodim_base-builtins" -> "numpy.lib.twodim_base.where" [color=red penwidth=1 style=dashed]
	"numpy.lib.twodim_base.zeros" [color=red fontsize=16 shape=none]
		"numpy.lib.twodim_base-builtins" -> "numpy.lib.twodim_base.zeros" [color=red penwidth=1 style=dashed]
	"numpy.lib.twodim_base-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.twodim_base" -> "numpy.lib.twodim_base-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.twodim_base.iinfo" [color=gold fontsize=16 shape=none]
		"numpy.lib.twodim_base-classes" -> "numpy.lib.twodim_base.iinfo" [color=gold penwidth=1 style=dashed]
	"numpy.lib.twodim_base.int16" [color=gold fontsize=16 shape=none]
		"numpy.lib.twodim_base-classes" -> "numpy.lib.twodim_base.int16" [color=gold penwidth=1 style=dashed]
	"numpy.lib.twodim_base.int32" [color=gold fontsize=16 shape=none]
		"numpy.lib.twodim_base-classes" -> "numpy.lib.twodim_base.int32" [color=gold penwidth=1 style=dashed]
	"numpy.lib.twodim_base.int64" [color=gold fontsize=16 shape=none]
		"numpy.lib.twodim_base-classes" -> "numpy.lib.twodim_base.int64" [color=gold penwidth=1 style=dashed]
	"numpy.lib.twodim_base.int8" [color=gold fontsize=16 shape=none]
		"numpy.lib.twodim_base-classes" -> "numpy.lib.twodim_base.int8" [color=gold penwidth=1 style=dashed]
	"numpy.lib.twodim_base-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base" -> "numpy.lib.twodim_base-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base._min_int" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base._min_int" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.asarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.diag" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.diag" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.diagflat" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.diagflat" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.diagonal" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.diagonal" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.eye" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.eye" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.fliplr" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.fliplr" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.flipud" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.flipud" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.histogram2d" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.histogram2d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.mask_indices" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.mask_indices" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.ones" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.ones" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.rot90" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.rot90" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.tri" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.tri" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.tril" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.tril" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.tril_indices" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.tril_indices" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.tril_indices_from" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.tril_indices_from" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.triu" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.triu" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.triu_indices" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.triu_indices" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.triu_indices_from" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.triu_indices_from" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base.vander" [color=purple fontsize=16 shape=none]
		"numpy.lib.twodim_base-functions" -> "numpy.lib.twodim_base.vander" [color=purple penwidth=1 style=dashed]
	"numpy.lib.twodim_base-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base" -> "numpy.lib.twodim_base-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.division" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.greater_equal" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.greater_equal" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.i1" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.i1" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.i2" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.i2" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.i4" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.i4" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.multiply" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.multiply" [color=black penwidth=1 style=dashed]
	"numpy.lib.twodim_base.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.twodim_base-nofta" -> "numpy.lib.twodim_base.print_function" [color=black penwidth=1 style=dashed]
	"numpy.polynomial-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial" -> "numpy.polynomial-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial" -> "numpy.polynomial-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.Chebyshev" [color=gold fontsize=16 shape=none]
		"numpy.polynomial-classes" -> "numpy.polynomial.Chebyshev" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.Hermite" [color=gold fontsize=16 shape=none]
		"numpy.polynomial-classes" -> "numpy.polynomial.Hermite" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.HermiteE" [color=gold fontsize=16 shape=none]
		"numpy.polynomial-classes" -> "numpy.polynomial.HermiteE" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.Laguerre" [color=gold fontsize=16 shape=none]
		"numpy.polynomial-classes" -> "numpy.polynomial.Laguerre" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.Legendre" [color=gold fontsize=16 shape=none]
		"numpy.polynomial-classes" -> "numpy.polynomial.Legendre" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.Polynomial" [color=gold fontsize=16 shape=none]
		"numpy.polynomial-classes" -> "numpy.polynomial.Polynomial" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial" -> "numpy.polynomial-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial._numpy_tester" [color=purple fontsize=16 shape=none]
		"numpy.polynomial-functions" -> "numpy.polynomial._numpy_tester" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial" -> "numpy.polynomial-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.polynomial-nofta" -> "numpy.polynomial.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.__doc__" [color=black fontsize=16 shape=none]
		"numpy.polynomial-nofta" -> "numpy.polynomial.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.__file__" [color=black fontsize=16 shape=none]
		"numpy.polynomial-nofta" -> "numpy.polynomial.__file__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.__name__" [color=black fontsize=16 shape=none]
		"numpy.polynomial-nofta" -> "numpy.polynomial.__name__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.__package__" [color=black fontsize=16 shape=none]
		"numpy.polynomial-nofta" -> "numpy.polynomial.__package__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.__path__" [color=black fontsize=16 shape=none]
		"numpy.polynomial-nofta" -> "numpy.polynomial.__path__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.polynomial-nofta" -> "numpy.polynomial.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.bench" [color=black fontsize=16 shape=none]
		"numpy.polynomial-nofta" -> "numpy.polynomial.bench" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.division" [color=black fontsize=16 shape=none]
		"numpy.polynomial-nofta" -> "numpy.polynomial.division" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.print_function" [color=black fontsize=16 shape=none]
		"numpy.polynomial-nofta" -> "numpy.polynomial.print_function" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.test" [color=black fontsize=16 shape=none]
		"numpy.polynomial-nofta" -> "numpy.polynomial.test" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.contextlib-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.utils.contextlib" -> "numpy.testing.utils.contextlib-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.utils.contextlib-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils.contextlib" -> "numpy.testing.utils.contextlib-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.contextlib-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils.contextlib" -> "numpy.testing.utils.contextlib-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.contextlib-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.utils.contextlib" -> "numpy.testing.utils.contextlib-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.np" -> "numpy.polynomial.chebyshev.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.np" -> "numpy.polynomial.chebyshev.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.np" -> "numpy.polynomial.chebyshev.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.np" -> "numpy.polynomial.chebyshev.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.rec-builtins" [color=red fontsize=16 shape=none]
		"numpy.rec" -> "numpy.rec-builtins" [color=red penwidth=1 style=dashed]
	"numpy.rec-classes" [color=gold fontsize=16 shape=none]
		"numpy.rec" -> "numpy.rec-classes" [color=gold penwidth=1 style=dashed]
	"numpy.rec-functions" [color=purple fontsize=16 shape=none]
		"numpy.rec" -> "numpy.rec-functions" [color=purple penwidth=1 style=dashed]
	"numpy.rec-nofta" [color=black fontsize=16 shape=none]
		"numpy.rec" -> "numpy.rec-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.arrayterator-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.arrayterator" -> "numpy.lib.arrayterator-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.arrayterator.mul" [color=red fontsize=16 shape=none]
		"numpy.lib.arrayterator-builtins" -> "numpy.lib.arrayterator.mul" [color=red penwidth=1 style=dashed]
	"numpy.lib.arrayterator.reduce" [color=red fontsize=16 shape=none]
		"numpy.lib.arrayterator-builtins" -> "numpy.lib.arrayterator.reduce" [color=red penwidth=1 style=dashed]
	"numpy.lib.arrayterator-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.arrayterator" -> "numpy.lib.arrayterator-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.arrayterator.Arrayterator" [color=gold fontsize=16 shape=none]
		"numpy.lib.arrayterator-classes" -> "numpy.lib.arrayterator.Arrayterator" [color=gold penwidth=1 style=dashed]
	"numpy.lib.arrayterator.long" [color=gold fontsize=16 shape=none]
		"numpy.lib.arrayterator-classes" -> "numpy.lib.arrayterator.long" [color=gold penwidth=1 style=dashed]
	"numpy.lib.arrayterator-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.arrayterator" -> "numpy.lib.arrayterator-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arrayterator-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.arrayterator" -> "numpy.lib.arrayterator-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.arrayterator.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.arrayterator-nofta" -> "numpy.lib.arrayterator.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arrayterator.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.arrayterator-nofta" -> "numpy.lib.arrayterator.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arrayterator.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.arrayterator-nofta" -> "numpy.lib.arrayterator.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arrayterator.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.arrayterator-nofta" -> "numpy.lib.arrayterator.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arrayterator.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.arrayterator-nofta" -> "numpy.lib.arrayterator.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arrayterator.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.arrayterator-nofta" -> "numpy.lib.arrayterator.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.arrayterator.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.arrayterator-nofta" -> "numpy.lib.arrayterator.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.arrayterator.division" [color=black fontsize=16 shape=none]
		"numpy.lib.arrayterator-nofta" -> "numpy.lib.arrayterator.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.arrayterator.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.arrayterator-nofta" -> "numpy.lib.arrayterator.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraypad.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.arraypad.np" -> "numpy.lib.arraypad.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.arraypad.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.arraypad.np" -> "numpy.lib.arraypad.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.arraypad.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraypad.np" -> "numpy.lib.arraypad.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraypad.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.arraypad.np" -> "numpy.lib.arraypad.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.hermite.warnings" -> "numpy.polynomial.hermite.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.hermite.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite.warnings" -> "numpy.polynomial.hermite.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite.warnings" -> "numpy.polynomial.hermite.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite.warnings" -> "numpy.polynomial.hermite.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.financial-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.financial" -> "numpy.lib.financial-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.financial-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.financial" -> "numpy.lib.financial-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.financial-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial" -> "numpy.lib.financial-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial._convert_when" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial._convert_when" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial._g_div_gp" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial._g_div_gp" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial._rbl" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial._rbl" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial.fv" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial.fv" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial.ipmt" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial.ipmt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial.irr" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial.irr" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial.mirr" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial.mirr" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial.nper" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial.nper" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial.npv" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial.npv" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial.pmt" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial.pmt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial.ppmt" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial.ppmt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial.pv" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial.pv" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial.rate" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial-functions" -> "numpy.lib.financial.rate" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.financial" -> "numpy.lib.financial-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.financial.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.financial-nofta" -> "numpy.lib.financial.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.financial.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.financial-nofta" -> "numpy.lib.financial.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.financial.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.financial-nofta" -> "numpy.lib.financial.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.financial.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.financial-nofta" -> "numpy.lib.financial.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.financial.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.financial-nofta" -> "numpy.lib.financial.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.financial.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.financial-nofta" -> "numpy.lib.financial.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.financial._when_to_num" [color=black fontsize=16 shape=none]
		"numpy.lib.financial-nofta" -> "numpy.lib.financial._when_to_num" [color=black penwidth=1 style=dashed]
	"numpy.lib.financial.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.financial-nofta" -> "numpy.lib.financial.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.financial.division" [color=black fontsize=16 shape=none]
		"numpy.lib.financial-nofta" -> "numpy.lib.financial.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.financial.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.financial-nofta" -> "numpy.lib.financial.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.shape_base.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.shape_base.warnings" -> "numpy.lib.shape_base.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.shape_base.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.shape_base.warnings" -> "numpy.lib.shape_base.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.shape_base.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base.warnings" -> "numpy.lib.shape_base.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.shape_base.warnings" -> "numpy.lib.shape_base.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.nosetester.sys" -> "numpy.testing.nosetester.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.nosetester.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.nosetester.sys" -> "numpy.testing.nosetester.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.nosetester.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.nosetester.sys" -> "numpy.testing.nosetester.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.nosetester.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester.sys" -> "numpy.testing.nosetester.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.arrayprint" -> "numpy.core.arrayprint-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.arrayprint.array" [color=red fontsize=16 shape=none]
		"numpy.core.arrayprint-builtins" -> "numpy.core.arrayprint.array" [color=red penwidth=1 style=dashed]
	"numpy.core.arrayprint.datetime_as_string" [color=red fontsize=16 shape=none]
		"numpy.core.arrayprint-builtins" -> "numpy.core.arrayprint.datetime_as_string" [color=red penwidth=1 style=dashed]
	"numpy.core.arrayprint.datetime_data" [color=red fontsize=16 shape=none]
		"numpy.core.arrayprint-builtins" -> "numpy.core.arrayprint.datetime_data" [color=red penwidth=1 style=dashed]
	"numpy.core.arrayprint.format_longfloat" [color=red fontsize=16 shape=none]
		"numpy.core.arrayprint-builtins" -> "numpy.core.arrayprint.format_longfloat" [color=red penwidth=1 style=dashed]
	"numpy.core.arrayprint.reduce" [color=red fontsize=16 shape=none]
		"numpy.core.arrayprint-builtins" -> "numpy.core.arrayprint.reduce" [color=red penwidth=1 style=dashed]
	"numpy.core.arrayprint-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.arrayprint" -> "numpy.core.arrayprint-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.arrayprint.ComplexFormat" [color=gold fontsize=16 shape=none]
		"numpy.core.arrayprint-classes" -> "numpy.core.arrayprint.ComplexFormat" [color=gold penwidth=1 style=dashed]
	"numpy.core.arrayprint.DatetimeFormat" [color=gold fontsize=16 shape=none]
		"numpy.core.arrayprint-classes" -> "numpy.core.arrayprint.DatetimeFormat" [color=gold penwidth=1 style=dashed]
	"numpy.core.arrayprint.FloatFormat" [color=gold fontsize=16 shape=none]
		"numpy.core.arrayprint-classes" -> "numpy.core.arrayprint.FloatFormat" [color=gold penwidth=1 style=dashed]
	"numpy.core.arrayprint.IntegerFormat" [color=gold fontsize=16 shape=none]
		"numpy.core.arrayprint-classes" -> "numpy.core.arrayprint.IntegerFormat" [color=gold penwidth=1 style=dashed]
	"numpy.core.arrayprint.LongComplexFormat" [color=gold fontsize=16 shape=none]
		"numpy.core.arrayprint-classes" -> "numpy.core.arrayprint.LongComplexFormat" [color=gold penwidth=1 style=dashed]
	"numpy.core.arrayprint.LongFloatFormat" [color=gold fontsize=16 shape=none]
		"numpy.core.arrayprint-classes" -> "numpy.core.arrayprint.LongFloatFormat" [color=gold penwidth=1 style=dashed]
	"numpy.core.arrayprint.TimedeltaFormat" [color=gold fontsize=16 shape=none]
		"numpy.core.arrayprint-classes" -> "numpy.core.arrayprint.TimedeltaFormat" [color=gold penwidth=1 style=dashed]
	"numpy.core.arrayprint-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint" -> "numpy.core.arrayprint-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint._array2string" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint._array2string" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint._boolFormatter" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint._boolFormatter" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint._convert_arrays" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint._convert_arrays" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint._digits" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint._digits" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint._extendLine" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint._extendLine" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint._formatArray" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint._formatArray" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint._leading_trailing" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint._leading_trailing" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint.array2string" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint.array2string" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint.asarray" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint.get_printoptions" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint.get_printoptions" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint.product" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint.product" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint.ravel" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint.ravel" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint.repr_format" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint.repr_format" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint.set_printoptions" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint-functions" -> "numpy.core.arrayprint.set_printoptions" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint" -> "numpy.core.arrayprint-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint._MAXINT" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint._MAXINT" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint._MININT" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint._MININT" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.__all__" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.__all__" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.__docformat__" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.__docformat__" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint._float_output_precision" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint._float_output_precision" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint._float_output_suppress_small" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint._float_output_suppress_small" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint._formatter" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint._formatter" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint._inf_str" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint._inf_str" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint._line_width" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint._line_width" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint._nan_str" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint._nan_str" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint._summaryEdgeItems" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint._summaryEdgeItems" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint._summaryThreshold" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint._summaryThreshold" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.absolute" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.absolute" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.division" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.division" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.isinf" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.isinf" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.isnan" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.isnan" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.maximum" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.maximum" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.minimum" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.minimum" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.not_equal" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.not_equal" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.print_function" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint-nofta" -> "numpy.core.arrayprint.print_function" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.legendre.warnings" -> "numpy.polynomial.legendre.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.legendre.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.legendre.warnings" -> "numpy.polynomial.legendre.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.legendre.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre.warnings" -> "numpy.polynomial.legendre.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre.warnings" -> "numpy.polynomial.legendre.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib-builtins" [color=red fontsize=16 shape=none]
		"numpy.matrixlib" -> "numpy.matrixlib-builtins" [color=red penwidth=1 style=dashed]
	"numpy.matrixlib-classes" [color=gold fontsize=16 shape=none]
		"numpy.matrixlib" -> "numpy.matrixlib-classes" [color=gold penwidth=1 style=dashed]
	"numpy.matrixlib.matrix" [color=gold fontsize=16 shape=none]
		"numpy.matrixlib-classes" -> "numpy.matrixlib.matrix" [color=gold penwidth=1 style=dashed]
	"numpy.matrixlib-functions" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib" -> "numpy.matrixlib-functions" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib._numpy_tester" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib-functions" -> "numpy.matrixlib._numpy_tester" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.asmatrix" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib-functions" -> "numpy.matrixlib.asmatrix" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.bmat" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib-functions" -> "numpy.matrixlib.bmat" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.mat" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib-functions" -> "numpy.matrixlib.mat" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib-nofta" [color=black fontsize=16 shape=none]
		"numpy.matrixlib" -> "numpy.matrixlib-nofta" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.__all__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib-nofta" -> "numpy.matrixlib.__all__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib-nofta" -> "numpy.matrixlib.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.__doc__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib-nofta" -> "numpy.matrixlib.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.__file__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib-nofta" -> "numpy.matrixlib.__file__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.__name__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib-nofta" -> "numpy.matrixlib.__name__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.__package__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib-nofta" -> "numpy.matrixlib.__package__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.__path__" [color=black fontsize=16 shape=none]
		"numpy.matrixlib-nofta" -> "numpy.matrixlib.__path__" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.matrixlib-nofta" -> "numpy.matrixlib.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.bench" [color=black fontsize=16 shape=none]
		"numpy.matrixlib-nofta" -> "numpy.matrixlib.bench" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.division" [color=black fontsize=16 shape=none]
		"numpy.matrixlib-nofta" -> "numpy.matrixlib.division" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.print_function" [color=black fontsize=16 shape=none]
		"numpy.matrixlib-nofta" -> "numpy.matrixlib.print_function" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.test" [color=black fontsize=16 shape=none]
		"numpy.matrixlib-nofta" -> "numpy.matrixlib.test" [color=black penwidth=1 style=dashed]
	"numpy.core.function_base-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.function_base" -> "numpy.core.function_base-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.function_base.result_type" [color=red fontsize=16 shape=none]
		"numpy.core.function_base-builtins" -> "numpy.core.function_base.result_type" [color=red penwidth=1 style=dashed]
	"numpy.core.function_base.shares_memory" [color=red fontsize=16 shape=none]
		"numpy.core.function_base-builtins" -> "numpy.core.function_base.shares_memory" [color=red penwidth=1 style=dashed]
	"numpy.core.function_base-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.function_base" -> "numpy.core.function_base-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.function_base.TooHardError" [color=gold fontsize=16 shape=none]
		"numpy.core.function_base-classes" -> "numpy.core.function_base.TooHardError" [color=gold penwidth=1 style=dashed]
	"numpy.core.function_base-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.function_base" -> "numpy.core.function_base-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.function_base.linspace" [color=purple fontsize=16 shape=none]
		"numpy.core.function_base-functions" -> "numpy.core.function_base.linspace" [color=purple penwidth=1 style=dashed]
	"numpy.core.function_base.logspace" [color=purple fontsize=16 shape=none]
		"numpy.core.function_base-functions" -> "numpy.core.function_base.logspace" [color=purple penwidth=1 style=dashed]
	"numpy.core.function_base-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.function_base" -> "numpy.core.function_base-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.function_base.MAY_SHARE_BOUNDS" [color=black fontsize=16 shape=none]
		"numpy.core.function_base-nofta" -> "numpy.core.function_base.MAY_SHARE_BOUNDS" [color=black penwidth=1 style=dashed]
	"numpy.core.function_base.NaN" [color=black fontsize=16 shape=none]
		"numpy.core.function_base-nofta" -> "numpy.core.function_base.NaN" [color=black penwidth=1 style=dashed]
	"numpy.core.function_base.__all__" [color=black fontsize=16 shape=none]
		"numpy.core.function_base-nofta" -> "numpy.core.function_base.__all__" [color=black penwidth=1 style=dashed]
	"numpy.core.function_base.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.core.function_base-nofta" -> "numpy.core.function_base.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.core.function_base.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.function_base-nofta" -> "numpy.core.function_base.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.function_base.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.function_base-nofta" -> "numpy.core.function_base.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.function_base.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.function_base-nofta" -> "numpy.core.function_base.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.function_base.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.function_base-nofta" -> "numpy.core.function_base.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.function_base.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.core.function_base-nofta" -> "numpy.core.function_base.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.core.function_base.division" [color=black fontsize=16 shape=none]
		"numpy.core.function_base-nofta" -> "numpy.core.function_base.division" [color=black penwidth=1 style=dashed]
	"numpy.core.function_base.print_function" [color=black fontsize=16 shape=none]
		"numpy.core.function_base-nofta" -> "numpy.core.function_base.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.stride_tricks-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.stride_tricks" -> "numpy.lib.stride_tricks-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.stride_tricks-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.stride_tricks" -> "numpy.lib.stride_tricks-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.DummyArray" [color=gold fontsize=16 shape=none]
		"numpy.lib.stride_tricks-classes" -> "numpy.lib.stride_tricks.DummyArray" [color=gold penwidth=1 style=dashed]
	"numpy.lib.stride_tricks-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.stride_tricks" -> "numpy.lib.stride_tricks-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.stride_tricks._broadcast_shape" [color=purple fontsize=16 shape=none]
		"numpy.lib.stride_tricks-functions" -> "numpy.lib.stride_tricks._broadcast_shape" [color=purple penwidth=1 style=dashed]
	"numpy.lib.stride_tricks._broadcast_to" [color=purple fontsize=16 shape=none]
		"numpy.lib.stride_tricks-functions" -> "numpy.lib.stride_tricks._broadcast_to" [color=purple penwidth=1 style=dashed]
	"numpy.lib.stride_tricks._maybe_view_as_subclass" [color=purple fontsize=16 shape=none]
		"numpy.lib.stride_tricks-functions" -> "numpy.lib.stride_tricks._maybe_view_as_subclass" [color=purple penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.as_strided" [color=purple fontsize=16 shape=none]
		"numpy.lib.stride_tricks-functions" -> "numpy.lib.stride_tricks.as_strided" [color=purple penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.broadcast_arrays" [color=purple fontsize=16 shape=none]
		"numpy.lib.stride_tricks-functions" -> "numpy.lib.stride_tricks.broadcast_arrays" [color=purple penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.broadcast_to" [color=purple fontsize=16 shape=none]
		"numpy.lib.stride_tricks-functions" -> "numpy.lib.stride_tricks.broadcast_to" [color=purple penwidth=1 style=dashed]
	"numpy.lib.stride_tricks-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.stride_tricks" -> "numpy.lib.stride_tricks-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.stride_tricks-nofta" -> "numpy.lib.stride_tricks.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.stride_tricks-nofta" -> "numpy.lib.stride_tricks.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.stride_tricks-nofta" -> "numpy.lib.stride_tricks.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.stride_tricks-nofta" -> "numpy.lib.stride_tricks.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.stride_tricks-nofta" -> "numpy.lib.stride_tricks.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.stride_tricks-nofta" -> "numpy.lib.stride_tricks.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.stride_tricks-nofta" -> "numpy.lib.stride_tricks.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.division" [color=black fontsize=16 shape=none]
		"numpy.lib.stride_tricks-nofta" -> "numpy.lib.stride_tricks.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.stride_tricks.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.stride_tricks-nofta" -> "numpy.lib.stride_tricks.print_function" [color=black penwidth=1 style=dashed]
	"numpy-builtins" [color=red fontsize=16 shape=none]
		numpy -> "numpy-builtins" [color=red penwidth=1 style=dashed]
	"numpy.add_docstring" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.add_docstring" [color=red penwidth=1 style=dashed]
	"numpy.add_newdoc_ufunc" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.add_newdoc_ufunc" [color=red penwidth=1 style=dashed]
	"numpy.arange" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.arange" [color=red penwidth=1 style=dashed]
	"numpy.array" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.array" [color=red penwidth=1 style=dashed]
	"numpy.bincount" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.bincount" [color=red penwidth=1 style=dashed]
	"numpy.busday_count" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.busday_count" [color=red penwidth=1 style=dashed]
	"numpy.busday_offset" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.busday_offset" [color=red penwidth=1 style=dashed]
	"numpy.can_cast" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.can_cast" [color=red penwidth=1 style=dashed]
	"numpy.compare_chararrays" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.compare_chararrays" [color=red penwidth=1 style=dashed]
	"numpy.concatenate" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.concatenate" [color=red penwidth=1 style=dashed]
	"numpy.copyto" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.copyto" [color=red penwidth=1 style=dashed]
	"numpy.count_nonzero" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.count_nonzero" [color=red penwidth=1 style=dashed]
	"numpy.datetime_as_string" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.datetime_as_string" [color=red penwidth=1 style=dashed]
	"numpy.datetime_data" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.datetime_data" [color=red penwidth=1 style=dashed]
	"numpy.digitize" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.digitize" [color=red penwidth=1 style=dashed]
	"numpy.dot" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.dot" [color=red penwidth=1 style=dashed]
	"numpy.einsum" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.einsum" [color=red penwidth=1 style=dashed]
	"numpy.empty" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.empty" [color=red penwidth=1 style=dashed]
	"numpy.empty_like" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.empty_like" [color=red penwidth=1 style=dashed]
	"numpy.fastCopyAndTranspose" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.fastCopyAndTranspose" [color=red penwidth=1 style=dashed]
	"numpy.frombuffer" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.frombuffer" [color=red penwidth=1 style=dashed]
	"numpy.fromfile" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.fromfile" [color=red penwidth=1 style=dashed]
	"numpy.fromiter" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.fromiter" [color=red penwidth=1 style=dashed]
	"numpy.frompyfunc" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.frompyfunc" [color=red penwidth=1 style=dashed]
	"numpy.fromstring" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.fromstring" [color=red penwidth=1 style=dashed]
	"numpy.getbuffer" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.getbuffer" [color=red penwidth=1 style=dashed]
	"numpy.geterrobj" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.geterrobj" [color=red penwidth=1 style=dashed]
	"numpy.inner" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.inner" [color=red penwidth=1 style=dashed]
	"numpy.int_asbuffer" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.int_asbuffer" [color=red penwidth=1 style=dashed]
	"numpy.is_busday" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.is_busday" [color=red penwidth=1 style=dashed]
	"numpy.lexsort" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.lexsort" [color=red penwidth=1 style=dashed]
	"numpy.loads" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.loads" [color=red penwidth=1 style=dashed]
	"numpy.matmul" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.matmul" [color=red penwidth=1 style=dashed]
	"numpy.may_share_memory" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.may_share_memory" [color=red penwidth=1 style=dashed]
	"numpy.min_scalar_type" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.min_scalar_type" [color=red penwidth=1 style=dashed]
	"numpy.nested_iters" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.nested_iters" [color=red penwidth=1 style=dashed]
	"numpy.newbuffer" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.newbuffer" [color=red penwidth=1 style=dashed]
	"numpy.packbits" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.packbits" [color=red penwidth=1 style=dashed]
	"numpy.promote_types" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.promote_types" [color=red penwidth=1 style=dashed]
	"numpy.putmask" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.putmask" [color=red penwidth=1 style=dashed]
	"numpy.ravel_multi_index" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.ravel_multi_index" [color=red penwidth=1 style=dashed]
	"numpy.result_type" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.result_type" [color=red penwidth=1 style=dashed]
	"numpy.set_numeric_ops" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.set_numeric_ops" [color=red penwidth=1 style=dashed]
	"numpy.seterrobj" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.seterrobj" [color=red penwidth=1 style=dashed]
	"numpy.shares_memory" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.shares_memory" [color=red penwidth=1 style=dashed]
	"numpy.unpackbits" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.unpackbits" [color=red penwidth=1 style=dashed]
	"numpy.unravel_index" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.unravel_index" [color=red penwidth=1 style=dashed]
	"numpy.vdot" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.vdot" [color=red penwidth=1 style=dashed]
	"numpy.where" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.where" [color=red penwidth=1 style=dashed]
	"numpy.zeros" [color=red fontsize=16 shape=none]
		"numpy-builtins" -> "numpy.zeros" [color=red penwidth=1 style=dashed]
	"numpy-classes" [color=gold fontsize=16 shape=none]
		numpy -> "numpy-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ComplexWarning" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.ComplexWarning" [color=gold penwidth=1 style=dashed]
	"numpy.DataSource" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.DataSource" [color=gold penwidth=1 style=dashed]
	"numpy.MachAr" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.MachAr" [color=gold penwidth=1 style=dashed]
	"numpy.ModuleDeprecationWarning" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.ModuleDeprecationWarning" [color=gold penwidth=1 style=dashed]
	"numpy.PackageLoader" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.PackageLoader" [color=gold penwidth=1 style=dashed]
	"numpy.RankWarning" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.RankWarning" [color=gold penwidth=1 style=dashed]
	"numpy.Tester" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.Tester" [color=gold penwidth=1 style=dashed]
	"numpy.TooHardError" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.TooHardError" [color=gold penwidth=1 style=dashed]
	"numpy.VisibleDeprecationWarning" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.VisibleDeprecationWarning" [color=gold penwidth=1 style=dashed]
	"numpy._NoValue" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy._NoValue" [color=gold penwidth=1 style=dashed]
	"numpy.bool" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.bool" [color=gold penwidth=1 style=dashed]
	"numpy.bool8" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.bool8" [color=gold penwidth=1 style=dashed]
	"numpy.bool_" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.bool_" [color=gold penwidth=1 style=dashed]
	"numpy.broadcast" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.broadcast" [color=gold penwidth=1 style=dashed]
	"numpy.busdaycalendar" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.busdaycalendar" [color=gold penwidth=1 style=dashed]
	"numpy.byte" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.byte" [color=gold penwidth=1 style=dashed]
	"numpy.bytes_" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.bytes_" [color=gold penwidth=1 style=dashed]
	"numpy.cdouble" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.cdouble" [color=gold penwidth=1 style=dashed]
	"numpy.cfloat" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.cfloat" [color=gold penwidth=1 style=dashed]
	"numpy.character" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.character" [color=gold penwidth=1 style=dashed]
	"numpy.chararray" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.chararray" [color=gold penwidth=1 style=dashed]
	"numpy.clongdouble" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.clongdouble" [color=gold penwidth=1 style=dashed]
	"numpy.clongfloat" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.clongfloat" [color=gold penwidth=1 style=dashed]
	"numpy.complex" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.complex" [color=gold penwidth=1 style=dashed]
	"numpy.complex128" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.complex128" [color=gold penwidth=1 style=dashed]
	"numpy.complex256" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.complex256" [color=gold penwidth=1 style=dashed]
	"numpy.complex64" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.complex64" [color=gold penwidth=1 style=dashed]
	"numpy.complex_" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.complex_" [color=gold penwidth=1 style=dashed]
	"numpy.complexfloating" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.complexfloating" [color=gold penwidth=1 style=dashed]
	"numpy.csingle" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.csingle" [color=gold penwidth=1 style=dashed]
	"numpy.datetime64" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.datetime64" [color=gold penwidth=1 style=dashed]
	"numpy.double" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.double" [color=gold penwidth=1 style=dashed]
	"numpy.dtype" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.dtype" [color=gold penwidth=1 style=dashed]
	"numpy.errstate" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.errstate" [color=gold penwidth=1 style=dashed]
	"numpy.finfo" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.finfo" [color=gold penwidth=1 style=dashed]
	"numpy.flatiter" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.flatiter" [color=gold penwidth=1 style=dashed]
	"numpy.flexible" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.flexible" [color=gold penwidth=1 style=dashed]
	"numpy.float" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.float" [color=gold penwidth=1 style=dashed]
	"numpy.float128" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.float128" [color=gold penwidth=1 style=dashed]
	"numpy.float16" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.float16" [color=gold penwidth=1 style=dashed]
	"numpy.float32" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.float32" [color=gold penwidth=1 style=dashed]
	"numpy.float64" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.float64" [color=gold penwidth=1 style=dashed]
	"numpy.float_" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.float_" [color=gold penwidth=1 style=dashed]
	"numpy.floating" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.floating" [color=gold penwidth=1 style=dashed]
	"numpy.format_parser" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.format_parser" [color=gold penwidth=1 style=dashed]
	"numpy.generic" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.generic" [color=gold penwidth=1 style=dashed]
	"numpy.half" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.half" [color=gold penwidth=1 style=dashed]
	"numpy.iinfo" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.iinfo" [color=gold penwidth=1 style=dashed]
	"numpy.inexact" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.inexact" [color=gold penwidth=1 style=dashed]
	"numpy.int" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.int" [color=gold penwidth=1 style=dashed]
	"numpy.int0" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.int0" [color=gold penwidth=1 style=dashed]
	"numpy.int16" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.int16" [color=gold penwidth=1 style=dashed]
	"numpy.int32" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.int32" [color=gold penwidth=1 style=dashed]
	"numpy.int64" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.int64" [color=gold penwidth=1 style=dashed]
	"numpy.int8" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.int8" [color=gold penwidth=1 style=dashed]
	"numpy.int_" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.int_" [color=gold penwidth=1 style=dashed]
	"numpy.intc" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.intc" [color=gold penwidth=1 style=dashed]
	"numpy.integer" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.integer" [color=gold penwidth=1 style=dashed]
	"numpy.intp" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.intp" [color=gold penwidth=1 style=dashed]
	"numpy.long" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.long" [color=gold penwidth=1 style=dashed]
	"numpy.longcomplex" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.longcomplex" [color=gold penwidth=1 style=dashed]
	"numpy.longdouble" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.longdouble" [color=gold penwidth=1 style=dashed]
	"numpy.longfloat" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.longfloat" [color=gold penwidth=1 style=dashed]
	"numpy.longlong" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.longlong" [color=gold penwidth=1 style=dashed]
	"numpy.matrix" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.matrix" [color=gold penwidth=1 style=dashed]
	"numpy.memmap" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.memmap" [color=gold penwidth=1 style=dashed]
	"numpy.ndarray" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.ndenumerate" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.ndenumerate" [color=gold penwidth=1 style=dashed]
	"numpy.ndindex" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.ndindex" [color=gold penwidth=1 style=dashed]
	"numpy.nditer" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.nditer" [color=gold penwidth=1 style=dashed]
	"numpy.number" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.number" [color=gold penwidth=1 style=dashed]
	"numpy.object" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.object" [color=gold penwidth=1 style=dashed]
	"numpy.object0" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.object0" [color=gold penwidth=1 style=dashed]
	"numpy.object_" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.object_" [color=gold penwidth=1 style=dashed]
	"numpy.poly1d" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.poly1d" [color=gold penwidth=1 style=dashed]
	"numpy.recarray" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.recarray" [color=gold penwidth=1 style=dashed]
	"numpy.record" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.record" [color=gold penwidth=1 style=dashed]
	"numpy.short" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.short" [color=gold penwidth=1 style=dashed]
	"numpy.signedinteger" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.signedinteger" [color=gold penwidth=1 style=dashed]
	"numpy.single" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.single" [color=gold penwidth=1 style=dashed]
	"numpy.singlecomplex" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.singlecomplex" [color=gold penwidth=1 style=dashed]
	"numpy.str" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.str" [color=gold penwidth=1 style=dashed]
	"numpy.str_" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.str_" [color=gold penwidth=1 style=dashed]
	"numpy.string0" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.string0" [color=gold penwidth=1 style=dashed]
	"numpy.string_" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.string_" [color=gold penwidth=1 style=dashed]
	"numpy.timedelta64" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.timedelta64" [color=gold penwidth=1 style=dashed]
	"numpy.ubyte" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.ubyte" [color=gold penwidth=1 style=dashed]
	"numpy.ufunc" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.ufunc" [color=gold penwidth=1 style=dashed]
	"numpy.uint" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.uint" [color=gold penwidth=1 style=dashed]
	"numpy.uint0" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.uint0" [color=gold penwidth=1 style=dashed]
	"numpy.uint16" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.uint16" [color=gold penwidth=1 style=dashed]
	"numpy.uint32" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.uint32" [color=gold penwidth=1 style=dashed]
	"numpy.uint64" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.uint64" [color=gold penwidth=1 style=dashed]
	"numpy.uint8" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.uint8" [color=gold penwidth=1 style=dashed]
	"numpy.uintc" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.uintc" [color=gold penwidth=1 style=dashed]
	"numpy.uintp" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.uintp" [color=gold penwidth=1 style=dashed]
	"numpy.ulonglong" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.ulonglong" [color=gold penwidth=1 style=dashed]
	"numpy.unicode" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.unicode" [color=gold penwidth=1 style=dashed]
	"numpy.unicode0" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.unicode0" [color=gold penwidth=1 style=dashed]
	"numpy.unicode_" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.unicode_" [color=gold penwidth=1 style=dashed]
	"numpy.unsignedinteger" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.unsignedinteger" [color=gold penwidth=1 style=dashed]
	"numpy.ushort" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.ushort" [color=gold penwidth=1 style=dashed]
	"numpy.vectorize" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.vectorize" [color=gold penwidth=1 style=dashed]
	"numpy.void" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.void" [color=gold penwidth=1 style=dashed]
	"numpy.void0" [color=gold fontsize=16 shape=none]
		"numpy-classes" -> "numpy.void0" [color=gold penwidth=1 style=dashed]
	"numpy-functions" [color=purple fontsize=16 shape=none]
		numpy -> "numpy-functions" [color=purple penwidth=1 style=dashed]
	"numpy.add_newdoc" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.add_newdoc" [color=purple penwidth=1 style=dashed]
	"numpy.alen" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.alen" [color=purple penwidth=1 style=dashed]
	"numpy.all" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.all" [color=purple penwidth=1 style=dashed]
	"numpy.allclose" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.allclose" [color=purple penwidth=1 style=dashed]
	"numpy.alltrue" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.alltrue" [color=purple penwidth=1 style=dashed]
	"numpy.alterdot" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.alterdot" [color=purple penwidth=1 style=dashed]
	"numpy.amax" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.amax" [color=purple penwidth=1 style=dashed]
	"numpy.amin" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.amin" [color=purple penwidth=1 style=dashed]
	"numpy.angle" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.angle" [color=purple penwidth=1 style=dashed]
	"numpy.any" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.any" [color=purple penwidth=1 style=dashed]
	"numpy.append" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.append" [color=purple penwidth=1 style=dashed]
	"numpy.apply_along_axis" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.apply_along_axis" [color=purple penwidth=1 style=dashed]
	"numpy.apply_over_axes" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.apply_over_axes" [color=purple penwidth=1 style=dashed]
	"numpy.argmax" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.argmax" [color=purple penwidth=1 style=dashed]
	"numpy.argmin" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.argmin" [color=purple penwidth=1 style=dashed]
	"numpy.argpartition" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.argpartition" [color=purple penwidth=1 style=dashed]
	"numpy.argsort" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.argsort" [color=purple penwidth=1 style=dashed]
	"numpy.argwhere" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.argwhere" [color=purple penwidth=1 style=dashed]
	"numpy.around" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.around" [color=purple penwidth=1 style=dashed]
	"numpy.array2string" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.array2string" [color=purple penwidth=1 style=dashed]
	"numpy.array_equal" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.array_equal" [color=purple penwidth=1 style=dashed]
	"numpy.array_equiv" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.array_equiv" [color=purple penwidth=1 style=dashed]
	"numpy.array_repr" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.array_repr" [color=purple penwidth=1 style=dashed]
	"numpy.array_split" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.array_split" [color=purple penwidth=1 style=dashed]
	"numpy.array_str" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.array_str" [color=purple penwidth=1 style=dashed]
	"numpy.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.asarray" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.asarray_chkfinite" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.asarray_chkfinite" [color=purple penwidth=1 style=dashed]
	"numpy.ascontiguousarray" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.ascontiguousarray" [color=purple penwidth=1 style=dashed]
	"numpy.asfarray" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.asfarray" [color=purple penwidth=1 style=dashed]
	"numpy.asfortranarray" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.asfortranarray" [color=purple penwidth=1 style=dashed]
	"numpy.asmatrix" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.asmatrix" [color=purple penwidth=1 style=dashed]
	"numpy.asscalar" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.asscalar" [color=purple penwidth=1 style=dashed]
	"numpy.atleast_1d" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.atleast_1d" [color=purple penwidth=1 style=dashed]
	"numpy.atleast_2d" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.atleast_2d" [color=purple penwidth=1 style=dashed]
	"numpy.atleast_3d" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.atleast_3d" [color=purple penwidth=1 style=dashed]
	"numpy.average" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.average" [color=purple penwidth=1 style=dashed]
	"numpy.bartlett" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.bartlett" [color=purple penwidth=1 style=dashed]
	"numpy.base_repr" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.base_repr" [color=purple penwidth=1 style=dashed]
	"numpy.binary_repr" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.binary_repr" [color=purple penwidth=1 style=dashed]
	"numpy.blackman" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.blackman" [color=purple penwidth=1 style=dashed]
	"numpy.bmat" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.bmat" [color=purple penwidth=1 style=dashed]
	"numpy.broadcast_arrays" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.broadcast_arrays" [color=purple penwidth=1 style=dashed]
	"numpy.broadcast_to" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.broadcast_to" [color=purple penwidth=1 style=dashed]
	"numpy.byte_bounds" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.byte_bounds" [color=purple penwidth=1 style=dashed]
	"numpy.choose" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.choose" [color=purple penwidth=1 style=dashed]
	"numpy.clip" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.clip" [color=purple penwidth=1 style=dashed]
	"numpy.column_stack" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.column_stack" [color=purple penwidth=1 style=dashed]
	"numpy.common_type" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.common_type" [color=purple penwidth=1 style=dashed]
	"numpy.compress" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.compress" [color=purple penwidth=1 style=dashed]
	"numpy.convolve" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.convolve" [color=purple penwidth=1 style=dashed]
	"numpy.copy" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.copy" [color=purple penwidth=1 style=dashed]
	"numpy.corrcoef" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.corrcoef" [color=purple penwidth=1 style=dashed]
	"numpy.correlate" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.correlate" [color=purple penwidth=1 style=dashed]
	"numpy.cov" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.cov" [color=purple penwidth=1 style=dashed]
	"numpy.cross" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.cross" [color=purple penwidth=1 style=dashed]
	"numpy.cumprod" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.cumprod" [color=purple penwidth=1 style=dashed]
	"numpy.cumproduct" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.cumproduct" [color=purple penwidth=1 style=dashed]
	"numpy.cumsum" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.cumsum" [color=purple penwidth=1 style=dashed]
	"numpy.delete" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.delete" [color=purple penwidth=1 style=dashed]
	"numpy.deprecate" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.deprecate" [color=purple penwidth=1 style=dashed]
	"numpy.deprecate_with_doc" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.deprecate_with_doc" [color=purple penwidth=1 style=dashed]
	"numpy.diag" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.diag" [color=purple penwidth=1 style=dashed]
	"numpy.diag_indices" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.diag_indices" [color=purple penwidth=1 style=dashed]
	"numpy.diag_indices_from" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.diag_indices_from" [color=purple penwidth=1 style=dashed]
	"numpy.diagflat" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.diagflat" [color=purple penwidth=1 style=dashed]
	"numpy.diagonal" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.diagonal" [color=purple penwidth=1 style=dashed]
	"numpy.diff" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.diff" [color=purple penwidth=1 style=dashed]
	"numpy.disp" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.disp" [color=purple penwidth=1 style=dashed]
	"numpy.dsplit" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.dsplit" [color=purple penwidth=1 style=dashed]
	"numpy.dstack" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.dstack" [color=purple penwidth=1 style=dashed]
	"numpy.ediff1d" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.ediff1d" [color=purple penwidth=1 style=dashed]
	"numpy.expand_dims" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.expand_dims" [color=purple penwidth=1 style=dashed]
	"numpy.extract" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.extract" [color=purple penwidth=1 style=dashed]
	"numpy.eye" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.eye" [color=purple penwidth=1 style=dashed]
	"numpy.fill_diagonal" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.fill_diagonal" [color=purple penwidth=1 style=dashed]
	"numpy.find_common_type" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.find_common_type" [color=purple penwidth=1 style=dashed]
	"numpy.fix" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.fix" [color=purple penwidth=1 style=dashed]
	"numpy.flatnonzero" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.flatnonzero" [color=purple penwidth=1 style=dashed]
	"numpy.fliplr" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.fliplr" [color=purple penwidth=1 style=dashed]
	"numpy.flipud" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.flipud" [color=purple penwidth=1 style=dashed]
	"numpy.fromfunction" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.fromfunction" [color=purple penwidth=1 style=dashed]
	"numpy.fromregex" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.fromregex" [color=purple penwidth=1 style=dashed]
	"numpy.full" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.full" [color=purple penwidth=1 style=dashed]
	"numpy.full_like" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.full_like" [color=purple penwidth=1 style=dashed]
	"numpy.fv" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.fv" [color=purple penwidth=1 style=dashed]
	"numpy.genfromtxt" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.genfromtxt" [color=purple penwidth=1 style=dashed]
	"numpy.get_array_wrap" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.get_array_wrap" [color=purple penwidth=1 style=dashed]
	"numpy.get_include" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.get_include" [color=purple penwidth=1 style=dashed]
	"numpy.get_printoptions" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.get_printoptions" [color=purple penwidth=1 style=dashed]
	"numpy.getbufsize" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.getbufsize" [color=purple penwidth=1 style=dashed]
	"numpy.geterr" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.geterr" [color=purple penwidth=1 style=dashed]
	"numpy.geterrcall" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.geterrcall" [color=purple penwidth=1 style=dashed]
	"numpy.gradient" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.gradient" [color=purple penwidth=1 style=dashed]
	"numpy.hamming" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.hamming" [color=purple penwidth=1 style=dashed]
	"numpy.hanning" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.hanning" [color=purple penwidth=1 style=dashed]
	"numpy.histogram" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.histogram" [color=purple penwidth=1 style=dashed]
	"numpy.histogram2d" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.histogram2d" [color=purple penwidth=1 style=dashed]
	"numpy.histogramdd" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.histogramdd" [color=purple penwidth=1 style=dashed]
	"numpy.hsplit" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.hsplit" [color=purple penwidth=1 style=dashed]
	"numpy.hstack" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.hstack" [color=purple penwidth=1 style=dashed]
	"numpy.i0" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.i0" [color=purple penwidth=1 style=dashed]
	"numpy.identity" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.identity" [color=purple penwidth=1 style=dashed]
	"numpy.imag" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.imag" [color=purple penwidth=1 style=dashed]
	"numpy.in1d" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.in1d" [color=purple penwidth=1 style=dashed]
	"numpy.indices" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.indices" [color=purple penwidth=1 style=dashed]
	"numpy.info" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.info" [color=purple penwidth=1 style=dashed]
	"numpy.insert" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.insert" [color=purple penwidth=1 style=dashed]
	"numpy.interp" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.interp" [color=purple penwidth=1 style=dashed]
	"numpy.intersect1d" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.intersect1d" [color=purple penwidth=1 style=dashed]
	"numpy.ipmt" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.ipmt" [color=purple penwidth=1 style=dashed]
	"numpy.irr" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.irr" [color=purple penwidth=1 style=dashed]
	"numpy.isclose" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.isclose" [color=purple penwidth=1 style=dashed]
	"numpy.iscomplex" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.iscomplex" [color=purple penwidth=1 style=dashed]
	"numpy.iscomplexobj" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.iscomplexobj" [color=purple penwidth=1 style=dashed]
	"numpy.isfortran" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.isfortran" [color=purple penwidth=1 style=dashed]
	"numpy.isneginf" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.isneginf" [color=purple penwidth=1 style=dashed]
	"numpy.isposinf" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.isposinf" [color=purple penwidth=1 style=dashed]
	"numpy.isreal" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.isreal" [color=purple penwidth=1 style=dashed]
	"numpy.isrealobj" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.isrealobj" [color=purple penwidth=1 style=dashed]
	"numpy.isscalar" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.isscalar" [color=purple penwidth=1 style=dashed]
	"numpy.issctype" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.issctype" [color=purple penwidth=1 style=dashed]
	"numpy.issubclass_" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.issubclass_" [color=purple penwidth=1 style=dashed]
	"numpy.issubdtype" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.issubdtype" [color=purple penwidth=1 style=dashed]
	"numpy.issubsctype" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.issubsctype" [color=purple penwidth=1 style=dashed]
	"numpy.iterable" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.iterable" [color=purple penwidth=1 style=dashed]
	"numpy.ix_" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.ix_" [color=purple penwidth=1 style=dashed]
	"numpy.kaiser" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.kaiser" [color=purple penwidth=1 style=dashed]
	"numpy.kron" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.kron" [color=purple penwidth=1 style=dashed]
	"numpy.linspace" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.linspace" [color=purple penwidth=1 style=dashed]
	"numpy.load" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.load" [color=purple penwidth=1 style=dashed]
	"numpy.loadtxt" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.loadtxt" [color=purple penwidth=1 style=dashed]
	"numpy.logspace" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.logspace" [color=purple penwidth=1 style=dashed]
	"numpy.lookfor" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.lookfor" [color=purple penwidth=1 style=dashed]
	"numpy.mafromtxt" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.mafromtxt" [color=purple penwidth=1 style=dashed]
	"numpy.mask_indices" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.mask_indices" [color=purple penwidth=1 style=dashed]
	"numpy.mat" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.mat" [color=purple penwidth=1 style=dashed]
	"numpy.max" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.max" [color=purple penwidth=1 style=dashed]
	"numpy.maximum_sctype" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.maximum_sctype" [color=purple penwidth=1 style=dashed]
	"numpy.mean" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.mean" [color=purple penwidth=1 style=dashed]
	"numpy.median" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.median" [color=purple penwidth=1 style=dashed]
	"numpy.meshgrid" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.meshgrid" [color=purple penwidth=1 style=dashed]
	"numpy.min" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.min" [color=purple penwidth=1 style=dashed]
	"numpy.mintypecode" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.mintypecode" [color=purple penwidth=1 style=dashed]
	"numpy.mirr" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.mirr" [color=purple penwidth=1 style=dashed]
	"numpy.moveaxis" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.moveaxis" [color=purple penwidth=1 style=dashed]
	"numpy.msort" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.msort" [color=purple penwidth=1 style=dashed]
	"numpy.nan_to_num" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nan_to_num" [color=purple penwidth=1 style=dashed]
	"numpy.nanargmax" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nanargmax" [color=purple penwidth=1 style=dashed]
	"numpy.nanargmin" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nanargmin" [color=purple penwidth=1 style=dashed]
	"numpy.nanmax" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nanmax" [color=purple penwidth=1 style=dashed]
	"numpy.nanmean" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nanmean" [color=purple penwidth=1 style=dashed]
	"numpy.nanmedian" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nanmedian" [color=purple penwidth=1 style=dashed]
	"numpy.nanmin" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nanmin" [color=purple penwidth=1 style=dashed]
	"numpy.nanpercentile" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nanpercentile" [color=purple penwidth=1 style=dashed]
	"numpy.nanprod" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nanprod" [color=purple penwidth=1 style=dashed]
	"numpy.nanstd" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nanstd" [color=purple penwidth=1 style=dashed]
	"numpy.nansum" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nansum" [color=purple penwidth=1 style=dashed]
	"numpy.nanvar" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nanvar" [color=purple penwidth=1 style=dashed]
	"numpy.ndfromtxt" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.ndfromtxt" [color=purple penwidth=1 style=dashed]
	"numpy.ndim" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.ndim" [color=purple penwidth=1 style=dashed]
	"numpy.nonzero" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nonzero" [color=purple penwidth=1 style=dashed]
	"numpy.nper" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.nper" [color=purple penwidth=1 style=dashed]
	"numpy.npv" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.npv" [color=purple penwidth=1 style=dashed]
	"numpy.obj2sctype" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.obj2sctype" [color=purple penwidth=1 style=dashed]
	"numpy.ones" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.ones" [color=purple penwidth=1 style=dashed]
	"numpy.ones_like" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.ones_like" [color=purple penwidth=1 style=dashed]
	"numpy.outer" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.outer" [color=purple penwidth=1 style=dashed]
	"numpy.pad" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.pad" [color=purple penwidth=1 style=dashed]
	"numpy.partition" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.partition" [color=purple penwidth=1 style=dashed]
	"numpy.percentile" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.percentile" [color=purple penwidth=1 style=dashed]
	"numpy.piecewise" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.piecewise" [color=purple penwidth=1 style=dashed]
	"numpy.pkgload" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.pkgload" [color=purple penwidth=1 style=dashed]
	"numpy.place" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.place" [color=purple penwidth=1 style=dashed]
	"numpy.pmt" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.pmt" [color=purple penwidth=1 style=dashed]
	"numpy.poly" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.poly" [color=purple penwidth=1 style=dashed]
	"numpy.polyadd" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.polyadd" [color=purple penwidth=1 style=dashed]
	"numpy.polyder" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.polyder" [color=purple penwidth=1 style=dashed]
	"numpy.polydiv" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.polydiv" [color=purple penwidth=1 style=dashed]
	"numpy.polyfit" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.polyfit" [color=purple penwidth=1 style=dashed]
	"numpy.polyint" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.polyint" [color=purple penwidth=1 style=dashed]
	"numpy.polymul" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.polymul" [color=purple penwidth=1 style=dashed]
	"numpy.polysub" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.polysub" [color=purple penwidth=1 style=dashed]
	"numpy.polyval" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.polyval" [color=purple penwidth=1 style=dashed]
	"numpy.ppmt" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.ppmt" [color=purple penwidth=1 style=dashed]
	"numpy.prod" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.prod" [color=purple penwidth=1 style=dashed]
	"numpy.product" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.product" [color=purple penwidth=1 style=dashed]
	"numpy.ptp" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.ptp" [color=purple penwidth=1 style=dashed]
	"numpy.put" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.put" [color=purple penwidth=1 style=dashed]
	"numpy.pv" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.pv" [color=purple penwidth=1 style=dashed]
	"numpy.rank" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.rank" [color=purple penwidth=1 style=dashed]
	"numpy.rate" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.rate" [color=purple penwidth=1 style=dashed]
	"numpy.ravel" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.ravel" [color=purple penwidth=1 style=dashed]
	"numpy.real" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.real" [color=purple penwidth=1 style=dashed]
	"numpy.real_if_close" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.real_if_close" [color=purple penwidth=1 style=dashed]
	"numpy.recfromcsv" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.recfromcsv" [color=purple penwidth=1 style=dashed]
	"numpy.recfromtxt" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.recfromtxt" [color=purple penwidth=1 style=dashed]
	"numpy.repeat" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.repeat" [color=purple penwidth=1 style=dashed]
	"numpy.require" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.require" [color=purple penwidth=1 style=dashed]
	"numpy.reshape" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.reshape" [color=purple penwidth=1 style=dashed]
	"numpy.resize" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.resize" [color=purple penwidth=1 style=dashed]
	"numpy.restoredot" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.restoredot" [color=purple penwidth=1 style=dashed]
	"numpy.roll" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.roll" [color=purple penwidth=1 style=dashed]
	"numpy.rollaxis" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.rollaxis" [color=purple penwidth=1 style=dashed]
	"numpy.roots" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.roots" [color=purple penwidth=1 style=dashed]
	"numpy.rot90" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.rot90" [color=purple penwidth=1 style=dashed]
	"numpy.round" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.round" [color=purple penwidth=1 style=dashed]
	"numpy.round_" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.round_" [color=purple penwidth=1 style=dashed]
	"numpy.row_stack" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.row_stack" [color=purple penwidth=1 style=dashed]
	"numpy.safe_eval" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.safe_eval" [color=purple penwidth=1 style=dashed]
	"numpy.save" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.save" [color=purple penwidth=1 style=dashed]
	"numpy.savetxt" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.savetxt" [color=purple penwidth=1 style=dashed]
	"numpy.savez" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.savez" [color=purple penwidth=1 style=dashed]
	"numpy.savez_compressed" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.savez_compressed" [color=purple penwidth=1 style=dashed]
	"numpy.sctype2char" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.sctype2char" [color=purple penwidth=1 style=dashed]
	"numpy.searchsorted" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.searchsorted" [color=purple penwidth=1 style=dashed]
	"numpy.select" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.select" [color=purple penwidth=1 style=dashed]
	"numpy.set_printoptions" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.set_printoptions" [color=purple penwidth=1 style=dashed]
	"numpy.set_string_function" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.set_string_function" [color=purple penwidth=1 style=dashed]
	"numpy.setbufsize" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.setbufsize" [color=purple penwidth=1 style=dashed]
	"numpy.setdiff1d" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.setdiff1d" [color=purple penwidth=1 style=dashed]
	"numpy.seterr" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.seterr" [color=purple penwidth=1 style=dashed]
	"numpy.seterrcall" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.seterrcall" [color=purple penwidth=1 style=dashed]
	"numpy.setxor1d" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.setxor1d" [color=purple penwidth=1 style=dashed]
	"numpy.shape" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.shape" [color=purple penwidth=1 style=dashed]
	"numpy.show_config" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.show_config" [color=purple penwidth=1 style=dashed]
	"numpy.sinc" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.sinc" [color=purple penwidth=1 style=dashed]
	"numpy.size" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.size" [color=purple penwidth=1 style=dashed]
	"numpy.sometrue" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.sometrue" [color=purple penwidth=1 style=dashed]
	"numpy.sort" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.sort" [color=purple penwidth=1 style=dashed]
	"numpy.sort_complex" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.sort_complex" [color=purple penwidth=1 style=dashed]
	"numpy.source" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.source" [color=purple penwidth=1 style=dashed]
	"numpy.split" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.split" [color=purple penwidth=1 style=dashed]
	"numpy.squeeze" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.squeeze" [color=purple penwidth=1 style=dashed]
	"numpy.stack" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.stack" [color=purple penwidth=1 style=dashed]
	"numpy.std" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.std" [color=purple penwidth=1 style=dashed]
	"numpy.sum" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.sum" [color=purple penwidth=1 style=dashed]
	"numpy.swapaxes" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.swapaxes" [color=purple penwidth=1 style=dashed]
	"numpy.take" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.take" [color=purple penwidth=1 style=dashed]
	"numpy.tensordot" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.tensordot" [color=purple penwidth=1 style=dashed]
	"numpy.tile" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.tile" [color=purple penwidth=1 style=dashed]
	"numpy.trace" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.trace" [color=purple penwidth=1 style=dashed]
	"numpy.transpose" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.transpose" [color=purple penwidth=1 style=dashed]
	"numpy.trapz" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.trapz" [color=purple penwidth=1 style=dashed]
	"numpy.tri" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.tri" [color=purple penwidth=1 style=dashed]
	"numpy.tril" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.tril" [color=purple penwidth=1 style=dashed]
	"numpy.tril_indices" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.tril_indices" [color=purple penwidth=1 style=dashed]
	"numpy.tril_indices_from" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.tril_indices_from" [color=purple penwidth=1 style=dashed]
	"numpy.trim_zeros" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.trim_zeros" [color=purple penwidth=1 style=dashed]
	"numpy.triu" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.triu" [color=purple penwidth=1 style=dashed]
	"numpy.triu_indices" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.triu_indices" [color=purple penwidth=1 style=dashed]
	"numpy.triu_indices_from" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.triu_indices_from" [color=purple penwidth=1 style=dashed]
	"numpy.typename" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.typename" [color=purple penwidth=1 style=dashed]
	"numpy.union1d" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.union1d" [color=purple penwidth=1 style=dashed]
	"numpy.unique" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.unique" [color=purple penwidth=1 style=dashed]
	"numpy.unwrap" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.unwrap" [color=purple penwidth=1 style=dashed]
	"numpy.vander" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.vander" [color=purple penwidth=1 style=dashed]
	"numpy.var" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.var" [color=purple penwidth=1 style=dashed]
	"numpy.vsplit" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.vsplit" [color=purple penwidth=1 style=dashed]
	"numpy.vstack" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.vstack" [color=purple penwidth=1 style=dashed]
	"numpy.who" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.who" [color=purple penwidth=1 style=dashed]
	"numpy.zeros_like" [color=purple fontsize=16 shape=none]
		"numpy-functions" -> "numpy.zeros_like" [color=purple penwidth=1 style=dashed]
	"numpy-nofta" [color=black fontsize=16 shape=none]
		numpy -> "numpy-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ALLOW_THREADS" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.ALLOW_THREADS" [color=black penwidth=1 style=dashed]
	"numpy.BUFSIZE" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.BUFSIZE" [color=black penwidth=1 style=dashed]
	"numpy.CLIP" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.CLIP" [color=black penwidth=1 style=dashed]
	"numpy.ERR_CALL" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.ERR_CALL" [color=black penwidth=1 style=dashed]
	"numpy.ERR_DEFAULT" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.ERR_DEFAULT" [color=black penwidth=1 style=dashed]
	"numpy.ERR_IGNORE" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.ERR_IGNORE" [color=black penwidth=1 style=dashed]
	"numpy.ERR_LOG" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.ERR_LOG" [color=black penwidth=1 style=dashed]
	"numpy.ERR_PRINT" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.ERR_PRINT" [color=black penwidth=1 style=dashed]
	"numpy.ERR_RAISE" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.ERR_RAISE" [color=black penwidth=1 style=dashed]
	"numpy.ERR_WARN" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.ERR_WARN" [color=black penwidth=1 style=dashed]
	"numpy.FLOATING_POINT_SUPPORT" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.FLOATING_POINT_SUPPORT" [color=black penwidth=1 style=dashed]
	"numpy.FPE_DIVIDEBYZERO" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.FPE_DIVIDEBYZERO" [color=black penwidth=1 style=dashed]
	"numpy.FPE_INVALID" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.FPE_INVALID" [color=black penwidth=1 style=dashed]
	"numpy.FPE_OVERFLOW" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.FPE_OVERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.FPE_UNDERFLOW" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.FPE_UNDERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.False_" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.False_" [color=black penwidth=1 style=dashed]
	"numpy.Inf" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.Inf" [color=black penwidth=1 style=dashed]
	"numpy.Infinity" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.Infinity" [color=black penwidth=1 style=dashed]
	"numpy.MAXDIMS" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.MAXDIMS" [color=black penwidth=1 style=dashed]
	"numpy.MAY_SHARE_BOUNDS" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.MAY_SHARE_BOUNDS" [color=black penwidth=1 style=dashed]
	"numpy.MAY_SHARE_EXACT" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.MAY_SHARE_EXACT" [color=black penwidth=1 style=dashed]
	"numpy.NAN" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.NAN" [color=black penwidth=1 style=dashed]
	"numpy.NINF" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.NINF" [color=black penwidth=1 style=dashed]
	"numpy.NZERO" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.NZERO" [color=black penwidth=1 style=dashed]
	"numpy.NaN" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.NaN" [color=black penwidth=1 style=dashed]
	"numpy.PINF" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.PINF" [color=black penwidth=1 style=dashed]
	"numpy.PZERO" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.PZERO" [color=black penwidth=1 style=dashed]
	"numpy.RAISE" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.RAISE" [color=black penwidth=1 style=dashed]
	"numpy.SHIFT_DIVIDEBYZERO" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.SHIFT_DIVIDEBYZERO" [color=black penwidth=1 style=dashed]
	"numpy.SHIFT_INVALID" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.SHIFT_INVALID" [color=black penwidth=1 style=dashed]
	"numpy.SHIFT_OVERFLOW" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.SHIFT_OVERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.SHIFT_UNDERFLOW" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.SHIFT_UNDERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.ScalarType" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.ScalarType" [color=black penwidth=1 style=dashed]
	"numpy.True_" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.True_" [color=black penwidth=1 style=dashed]
	"numpy.UFUNC_BUFSIZE_DEFAULT" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.UFUNC_BUFSIZE_DEFAULT" [color=black penwidth=1 style=dashed]
	"numpy.UFUNC_PYVALS_NAME" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.UFUNC_PYVALS_NAME" [color=black penwidth=1 style=dashed]
	"numpy.WRAP" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.WRAP" [color=black penwidth=1 style=dashed]
	"numpy.__NUMPY_SETUP__" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.__NUMPY_SETUP__" [color=black penwidth=1 style=dashed]
	"numpy.__all__" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.__all__" [color=black penwidth=1 style=dashed]
	"numpy.__builtins__" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.__doc__" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.__file__" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.__file__" [color=black penwidth=1 style=dashed]
	"numpy.__git_revision__" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.__git_revision__" [color=black penwidth=1 style=dashed]
	"numpy.__mkl_version__" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.__mkl_version__" [color=black penwidth=1 style=dashed]
	"numpy.__name__" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.__name__" [color=black penwidth=1 style=dashed]
	"numpy.__package__" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.__package__" [color=black penwidth=1 style=dashed]
	"numpy.__path__" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.__path__" [color=black penwidth=1 style=dashed]
	"numpy.__version__" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.__version__" [color=black penwidth=1 style=dashed]
	"numpy.abs" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.abs" [color=black penwidth=1 style=dashed]
	"numpy.absolute" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.absolute" [color=black penwidth=1 style=dashed]
	"numpy.absolute_import" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.add" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.add" [color=black penwidth=1 style=dashed]
	"numpy.arccos" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.arccos" [color=black penwidth=1 style=dashed]
	"numpy.arccosh" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.arccosh" [color=black penwidth=1 style=dashed]
	"numpy.arcsin" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.arcsin" [color=black penwidth=1 style=dashed]
	"numpy.arcsinh" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.arcsinh" [color=black penwidth=1 style=dashed]
	"numpy.arctan" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.arctan" [color=black penwidth=1 style=dashed]
	"numpy.arctan2" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.arctan2" [color=black penwidth=1 style=dashed]
	"numpy.arctanh" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.arctanh" [color=black penwidth=1 style=dashed]
	"numpy.bench" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.bench" [color=black penwidth=1 style=dashed]
	"numpy.bitwise_and" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.bitwise_and" [color=black penwidth=1 style=dashed]
	"numpy.bitwise_not" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.bitwise_not" [color=black penwidth=1 style=dashed]
	"numpy.bitwise_or" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.bitwise_or" [color=black penwidth=1 style=dashed]
	"numpy.bitwise_xor" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.bitwise_xor" [color=black penwidth=1 style=dashed]
	"numpy.c_" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.c_" [color=black penwidth=1 style=dashed]
	"numpy.cast" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.cast" [color=black penwidth=1 style=dashed]
	"numpy.cbrt" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.cbrt" [color=black penwidth=1 style=dashed]
	"numpy.ceil" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.ceil" [color=black penwidth=1 style=dashed]
	"numpy.conj" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.conj" [color=black penwidth=1 style=dashed]
	"numpy.conjugate" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.conjugate" [color=black penwidth=1 style=dashed]
	"numpy.copysign" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.copysign" [color=black penwidth=1 style=dashed]
	"numpy.cos" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.cos" [color=black penwidth=1 style=dashed]
	"numpy.cosh" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.cosh" [color=black penwidth=1 style=dashed]
	"numpy.deg2rad" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.deg2rad" [color=black penwidth=1 style=dashed]
	"numpy.degrees" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.degrees" [color=black penwidth=1 style=dashed]
	"numpy.divide" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.divide" [color=black penwidth=1 style=dashed]
	"numpy.division" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.division" [color=black penwidth=1 style=dashed]
	"numpy.e" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.e" [color=black penwidth=1 style=dashed]
	"numpy.equal" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.equal" [color=black penwidth=1 style=dashed]
	"numpy.euler_gamma" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.euler_gamma" [color=black penwidth=1 style=dashed]
	"numpy.exp" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.exp" [color=black penwidth=1 style=dashed]
	"numpy.exp2" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.exp2" [color=black penwidth=1 style=dashed]
	"numpy.expm1" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.expm1" [color=black penwidth=1 style=dashed]
	"numpy.fabs" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.fabs" [color=black penwidth=1 style=dashed]
	"numpy.floor" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.floor" [color=black penwidth=1 style=dashed]
	"numpy.floor_divide" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.floor_divide" [color=black penwidth=1 style=dashed]
	"numpy.fmax" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.fmax" [color=black penwidth=1 style=dashed]
	"numpy.fmin" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.fmin" [color=black penwidth=1 style=dashed]
	"numpy.fmod" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.fmod" [color=black penwidth=1 style=dashed]
	"numpy.frexp" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.frexp" [color=black penwidth=1 style=dashed]
	"numpy.greater" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.greater" [color=black penwidth=1 style=dashed]
	"numpy.greater_equal" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.greater_equal" [color=black penwidth=1 style=dashed]
	"numpy.hypot" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.hypot" [color=black penwidth=1 style=dashed]
	"numpy.index_exp" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.index_exp" [color=black penwidth=1 style=dashed]
	"numpy.inf" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.inf" [color=black penwidth=1 style=dashed]
	"numpy.infty" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.infty" [color=black penwidth=1 style=dashed]
	"numpy.invert" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.invert" [color=black penwidth=1 style=dashed]
	"numpy.isfinite" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.isfinite" [color=black penwidth=1 style=dashed]
	"numpy.isinf" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.isinf" [color=black penwidth=1 style=dashed]
	"numpy.isnan" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.isnan" [color=black penwidth=1 style=dashed]
	"numpy.ldexp" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.ldexp" [color=black penwidth=1 style=dashed]
	"numpy.left_shift" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.left_shift" [color=black penwidth=1 style=dashed]
	"numpy.less" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.less" [color=black penwidth=1 style=dashed]
	"numpy.less_equal" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.less_equal" [color=black penwidth=1 style=dashed]
	"numpy.little_endian" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.little_endian" [color=black penwidth=1 style=dashed]
	"numpy.log" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.log" [color=black penwidth=1 style=dashed]
	"numpy.log10" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.log10" [color=black penwidth=1 style=dashed]
	"numpy.log1p" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.log1p" [color=black penwidth=1 style=dashed]
	"numpy.log2" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.log2" [color=black penwidth=1 style=dashed]
	"numpy.logaddexp" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.logaddexp" [color=black penwidth=1 style=dashed]
	"numpy.logaddexp2" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.logaddexp2" [color=black penwidth=1 style=dashed]
	"numpy.logical_and" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.logical_and" [color=black penwidth=1 style=dashed]
	"numpy.logical_not" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.logical_not" [color=black penwidth=1 style=dashed]
	"numpy.logical_or" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.logical_or" [color=black penwidth=1 style=dashed]
	"numpy.logical_xor" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.logical_xor" [color=black penwidth=1 style=dashed]
	"numpy.maximum" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.maximum" [color=black penwidth=1 style=dashed]
	"numpy.mgrid" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.mgrid" [color=black penwidth=1 style=dashed]
	"numpy.minimum" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.minimum" [color=black penwidth=1 style=dashed]
	"numpy.mod" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.mod" [color=black penwidth=1 style=dashed]
	"numpy.modf" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.modf" [color=black penwidth=1 style=dashed]
	"numpy.multiply" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.multiply" [color=black penwidth=1 style=dashed]
	"numpy.nan" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.nan" [color=black penwidth=1 style=dashed]
	"numpy.nbytes" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.nbytes" [color=black penwidth=1 style=dashed]
	"numpy.negative" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.negative" [color=black penwidth=1 style=dashed]
	"numpy.newaxis" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.newaxis" [color=black penwidth=1 style=dashed]
	"numpy.nextafter" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.nextafter" [color=black penwidth=1 style=dashed]
	"numpy.not_equal" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.not_equal" [color=black penwidth=1 style=dashed]
	"numpy.numarray" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.numarray" [color=black penwidth=1 style=dashed]
	"numpy.ogrid" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.ogrid" [color=black penwidth=1 style=dashed]
	"numpy.oldnumeric" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.oldnumeric" [color=black penwidth=1 style=dashed]
	"numpy.pi" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.pi" [color=black penwidth=1 style=dashed]
	"numpy.power" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.power" [color=black penwidth=1 style=dashed]
	"numpy.print_function" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.print_function" [color=black penwidth=1 style=dashed]
	"numpy.r_" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.r_" [color=black penwidth=1 style=dashed]
	"numpy.rad2deg" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.rad2deg" [color=black penwidth=1 style=dashed]
	"numpy.radians" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.radians" [color=black penwidth=1 style=dashed]
	"numpy.reciprocal" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.reciprocal" [color=black penwidth=1 style=dashed]
	"numpy.remainder" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.remainder" [color=black penwidth=1 style=dashed]
	"numpy.right_shift" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.right_shift" [color=black penwidth=1 style=dashed]
	"numpy.rint" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.rint" [color=black penwidth=1 style=dashed]
	"numpy.s_" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.s_" [color=black penwidth=1 style=dashed]
	"numpy.sctypeDict" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.sctypeDict" [color=black penwidth=1 style=dashed]
	"numpy.sctypeNA" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.sctypeNA" [color=black penwidth=1 style=dashed]
	"numpy.sctypes" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.sctypes" [color=black penwidth=1 style=dashed]
	"numpy.sign" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.sign" [color=black penwidth=1 style=dashed]
	"numpy.signbit" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.signbit" [color=black penwidth=1 style=dashed]
	"numpy.sin" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.sin" [color=black penwidth=1 style=dashed]
	"numpy.sinh" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.sinh" [color=black penwidth=1 style=dashed]
	"numpy.spacing" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.spacing" [color=black penwidth=1 style=dashed]
	"numpy.sqrt" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.sqrt" [color=black penwidth=1 style=dashed]
	"numpy.square" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.square" [color=black penwidth=1 style=dashed]
	"numpy.subtract" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.subtract" [color=black penwidth=1 style=dashed]
	"numpy.tan" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.tan" [color=black penwidth=1 style=dashed]
	"numpy.tanh" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.tanh" [color=black penwidth=1 style=dashed]
	"numpy.test" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.test" [color=black penwidth=1 style=dashed]
	"numpy.true_divide" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.true_divide" [color=black penwidth=1 style=dashed]
	"numpy.trunc" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.trunc" [color=black penwidth=1 style=dashed]
	"numpy.typeDict" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.typeDict" [color=black penwidth=1 style=dashed]
	"numpy.typeNA" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.typeNA" [color=black penwidth=1 style=dashed]
	"numpy.typecodes" [color=black fontsize=16 shape=none]
		"numpy-nofta" -> "numpy.typecodes" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.chebyshev" -> "numpy.polynomial.chebyshev-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.chebyshev" -> "numpy.polynomial.chebyshev-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.ABCPolyBase" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-classes" -> "numpy.polynomial.chebyshev.ABCPolyBase" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.Chebyshev" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-classes" -> "numpy.polynomial.chebyshev.Chebyshev" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev" -> "numpy.polynomial.chebyshev-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev._cseries_to_zseries" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev._cseries_to_zseries" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev._zseries_der" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev._zseries_der" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev._zseries_div" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev._zseries_div" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev._zseries_int" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev._zseries_int" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev._zseries_mul" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev._zseries_mul" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev._zseries_to_cseries" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev._zseries_to_cseries" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.cheb2poly" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.cheb2poly" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebadd" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebadd" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebcompanion" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebcompanion" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebder" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebder" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebdiv" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebdiv" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebfit" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebfit" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebfromroots" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebfromroots" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebgauss" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebgauss" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebgrid2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebgrid2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebgrid3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebgrid3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebint" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebint" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebline" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebline" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebmul" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebmul" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebmulx" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebmulx" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebpow" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebpow" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebpts1" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebpts1" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebpts2" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebpts2" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebroots" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebroots" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebsub" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebsub" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebtrim" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebtrim" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebval" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebval" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebval2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebval2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebval3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebval3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebvander" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebvander" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebvander2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebvander2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebvander3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebvander3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebweight" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.chebweight" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.poly2cheb" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-functions" -> "numpy.polynomial.chebyshev.poly2cheb" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev" -> "numpy.polynomial.chebyshev-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.__all__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.__all__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.__doc__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.__file__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.__file__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.__name__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.__name__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.__package__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.__package__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebdomain" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.chebdomain" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebone" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.chebone" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebx" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.chebx" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.chebzero" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.chebzero" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.division" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.division" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.print_function" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev-nofta" -> "numpy.polynomial.chebyshev.print_function" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.pu-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.laguerre.pu" -> "numpy.polynomial.laguerre.pu-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.pu-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.laguerre.pu" -> "numpy.polynomial.laguerre.pu-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.pu-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre.pu" -> "numpy.polynomial.laguerre.pu-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.pu-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre.pu" -> "numpy.polynomial.laguerre.pu-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.re-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio.re" -> "numpy.lib.npyio.re-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio.re-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio.re" -> "numpy.lib.npyio.re-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.re-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio.re" -> "numpy.lib.npyio.re-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.re-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio.re" -> "numpy.lib.npyio.re-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.hermite_e" -> "numpy.polynomial.hermite_e-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite_e" -> "numpy.polynomial.hermite_e-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.ABCPolyBase" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-classes" -> "numpy.polynomial.hermite_e.ABCPolyBase" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.HermiteE" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-classes" -> "numpy.polynomial.hermite_e.HermiteE" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e" -> "numpy.polynomial.hermite_e-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e._normed_hermite_e_n" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e._normed_hermite_e_n" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.herme2poly" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.herme2poly" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermeadd" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermeadd" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermecompanion" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermecompanion" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermeder" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermeder" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermediv" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermediv" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermefit" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermefit" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermefromroots" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermefromroots" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermegauss" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermegauss" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermegrid2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermegrid2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermegrid3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermegrid3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermeint" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermeint" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermeline" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermeline" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermemul" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermemul" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermemulx" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermemulx" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermepow" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermepow" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermeroots" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermeroots" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermesub" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermesub" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermetrim" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermetrim" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermeval" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermeval" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermeval2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermeval2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermeval3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermeval3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermevander" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermevander" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermevander2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermevander2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermevander3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermevander3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermeweight" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.hermeweight" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.poly2herme" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-functions" -> "numpy.polynomial.hermite_e.poly2herme" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e" -> "numpy.polynomial.hermite_e-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.__all__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.__all__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.__doc__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.__file__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.__file__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.__name__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.__name__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.__package__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.__package__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.division" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.division" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermedomain" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.hermedomain" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermeone" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.hermeone" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermex" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.hermex" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.hermezero" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.hermezero" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.print_function" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e-nofta" -> "numpy.polynomial.hermite_e.print_function" [color=black penwidth=1 style=dashed]
	"numpy.core.arrayprint.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.arrayprint.sys" -> "numpy.core.arrayprint.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.arrayprint.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.arrayprint.sys" -> "numpy.core.arrayprint.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.arrayprint.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.arrayprint.sys" -> "numpy.core.arrayprint.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.arrayprint.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.arrayprint.sys" -> "numpy.core.arrayprint.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.emath-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.emath" -> "numpy.lib.emath-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.emath-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.emath" -> "numpy.lib.emath-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.emath-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.emath" -> "numpy.lib.emath-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.emath-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.emath" -> "numpy.lib.emath-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.fromnumeric-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numeric.fromnumeric" -> "numpy.core.numeric.fromnumeric-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.fromnumeric-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric.fromnumeric" -> "numpy.core.numeric.fromnumeric-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.fromnumeric-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric.fromnumeric" -> "numpy.core.numeric.fromnumeric-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.fromnumeric-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numeric.fromnumeric" -> "numpy.core.numeric.fromnumeric-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma" -> "numpy.ma-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma" -> "numpy.ma-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.MAError" [color=gold fontsize=16 shape=none]
		"numpy.ma-classes" -> "numpy.ma.MAError" [color=gold penwidth=1 style=dashed]
	"numpy.ma.MaskError" [color=gold fontsize=16 shape=none]
		"numpy.ma-classes" -> "numpy.ma.MaskError" [color=gold penwidth=1 style=dashed]
	"numpy.ma.MaskType" [color=gold fontsize=16 shape=none]
		"numpy.ma-classes" -> "numpy.ma.MaskType" [color=gold penwidth=1 style=dashed]
	"numpy.ma.MaskedArray" [color=gold fontsize=16 shape=none]
		"numpy.ma-classes" -> "numpy.ma.MaskedArray" [color=gold penwidth=1 style=dashed]
	"numpy.ma.bool_" [color=gold fontsize=16 shape=none]
		"numpy.ma-classes" -> "numpy.ma.bool_" [color=gold penwidth=1 style=dashed]
	"numpy.ma.masked_array" [color=gold fontsize=16 shape=none]
		"numpy.ma-classes" -> "numpy.ma.masked_array" [color=gold penwidth=1 style=dashed]
	"numpy.ma.mvoid" [color=gold fontsize=16 shape=none]
		"numpy.ma-classes" -> "numpy.ma.mvoid" [color=gold penwidth=1 style=dashed]
	"numpy.ma-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma" -> "numpy.ma-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma._numpy_tester" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma._numpy_tester" [color=purple penwidth=1 style=dashed]
	"numpy.ma.allclose" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.allclose" [color=purple penwidth=1 style=dashed]
	"numpy.ma.allequal" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.allequal" [color=purple penwidth=1 style=dashed]
	"numpy.ma.amax" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.amax" [color=purple penwidth=1 style=dashed]
	"numpy.ma.amin" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.amin" [color=purple penwidth=1 style=dashed]
	"numpy.ma.append" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.append" [color=purple penwidth=1 style=dashed]
	"numpy.ma.apply_along_axis" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.apply_along_axis" [color=purple penwidth=1 style=dashed]
	"numpy.ma.apply_over_axes" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.apply_over_axes" [color=purple penwidth=1 style=dashed]
	"numpy.ma.argsort" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.argsort" [color=purple penwidth=1 style=dashed]
	"numpy.ma.array" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.array" [color=purple penwidth=1 style=dashed]
	"numpy.ma.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.ma.asarray" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.ma.average" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.average" [color=purple penwidth=1 style=dashed]
	"numpy.ma.choose" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.choose" [color=purple penwidth=1 style=dashed]
	"numpy.ma.clip" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.clip" [color=purple penwidth=1 style=dashed]
	"numpy.ma.clump_masked" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.clump_masked" [color=purple penwidth=1 style=dashed]
	"numpy.ma.clump_unmasked" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.clump_unmasked" [color=purple penwidth=1 style=dashed]
	"numpy.ma.common_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.common_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.compress_cols" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.compress_cols" [color=purple penwidth=1 style=dashed]
	"numpy.ma.compress_nd" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.compress_nd" [color=purple penwidth=1 style=dashed]
	"numpy.ma.compress_rowcols" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.compress_rowcols" [color=purple penwidth=1 style=dashed]
	"numpy.ma.compress_rows" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.compress_rows" [color=purple penwidth=1 style=dashed]
	"numpy.ma.compressed" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.compressed" [color=purple penwidth=1 style=dashed]
	"numpy.ma.concatenate" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.concatenate" [color=purple penwidth=1 style=dashed]
	"numpy.ma.corrcoef" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.corrcoef" [color=purple penwidth=1 style=dashed]
	"numpy.ma.count_masked" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.count_masked" [color=purple penwidth=1 style=dashed]
	"numpy.ma.cov" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.cov" [color=purple penwidth=1 style=dashed]
	"numpy.ma.default_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.default_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.diag" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.diag" [color=purple penwidth=1 style=dashed]
	"numpy.ma.diff" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.diff" [color=purple penwidth=1 style=dashed]
	"numpy.ma.dot" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.dot" [color=purple penwidth=1 style=dashed]
	"numpy.ma.dump" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.dump" [color=purple penwidth=1 style=dashed]
	"numpy.ma.dumps" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.dumps" [color=purple penwidth=1 style=dashed]
	"numpy.ma.ediff1d" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.ediff1d" [color=purple penwidth=1 style=dashed]
	"numpy.ma.expand_dims" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.expand_dims" [color=purple penwidth=1 style=dashed]
	"numpy.ma.filled" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.filled" [color=purple penwidth=1 style=dashed]
	"numpy.ma.fix_invalid" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.fix_invalid" [color=purple penwidth=1 style=dashed]
	"numpy.ma.flatnotmasked_contiguous" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.flatnotmasked_contiguous" [color=purple penwidth=1 style=dashed]
	"numpy.ma.flatnotmasked_edges" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.flatnotmasked_edges" [color=purple penwidth=1 style=dashed]
	"numpy.ma.flatten_mask" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.flatten_mask" [color=purple penwidth=1 style=dashed]
	"numpy.ma.flatten_structured_array" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.flatten_structured_array" [color=purple penwidth=1 style=dashed]
	"numpy.ma.fromflex" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.fromflex" [color=purple penwidth=1 style=dashed]
	"numpy.ma.getdata" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.getdata" [color=purple penwidth=1 style=dashed]
	"numpy.ma.getmask" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.getmask" [color=purple penwidth=1 style=dashed]
	"numpy.ma.getmaskarray" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.getmaskarray" [color=purple penwidth=1 style=dashed]
	"numpy.ma.in1d" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.in1d" [color=purple penwidth=1 style=dashed]
	"numpy.ma.indices" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.indices" [color=purple penwidth=1 style=dashed]
	"numpy.ma.inner" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.inner" [color=purple penwidth=1 style=dashed]
	"numpy.ma.innerproduct" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.innerproduct" [color=purple penwidth=1 style=dashed]
	"numpy.ma.intersect1d" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.intersect1d" [color=purple penwidth=1 style=dashed]
	"numpy.ma.isMA" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.isMA" [color=purple penwidth=1 style=dashed]
	"numpy.ma.isMaskedArray" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.isMaskedArray" [color=purple penwidth=1 style=dashed]
	"numpy.ma.is_mask" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.is_mask" [color=purple penwidth=1 style=dashed]
	"numpy.ma.is_masked" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.is_masked" [color=purple penwidth=1 style=dashed]
	"numpy.ma.isarray" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.isarray" [color=purple penwidth=1 style=dashed]
	"numpy.ma.left_shift" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.left_shift" [color=purple penwidth=1 style=dashed]
	"numpy.ma.load" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.load" [color=purple penwidth=1 style=dashed]
	"numpy.ma.loads" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.loads" [color=purple penwidth=1 style=dashed]
	"numpy.ma.make_mask" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.make_mask" [color=purple penwidth=1 style=dashed]
	"numpy.ma.make_mask_descr" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.make_mask_descr" [color=purple penwidth=1 style=dashed]
	"numpy.ma.make_mask_none" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.make_mask_none" [color=purple penwidth=1 style=dashed]
	"numpy.ma.mask_cols" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.mask_cols" [color=purple penwidth=1 style=dashed]
	"numpy.ma.mask_or" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.mask_or" [color=purple penwidth=1 style=dashed]
	"numpy.ma.mask_rowcols" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.mask_rowcols" [color=purple penwidth=1 style=dashed]
	"numpy.ma.mask_rows" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.mask_rows" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_all" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_all" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_all_like" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_all_like" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_equal" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_equal" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_greater" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_greater" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_greater_equal" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_greater_equal" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_inside" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_inside" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_invalid" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_invalid" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_less" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_less" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_less_equal" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_less_equal" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_not_equal" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_not_equal" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_object" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_object" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_outside" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_outside" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_values" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_values" [color=purple penwidth=1 style=dashed]
	"numpy.ma.masked_where" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.masked_where" [color=purple penwidth=1 style=dashed]
	"numpy.ma.max" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.max" [color=purple penwidth=1 style=dashed]
	"numpy.ma.maximum_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.maximum_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.median" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.median" [color=purple penwidth=1 style=dashed]
	"numpy.ma.min" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.min" [color=purple penwidth=1 style=dashed]
	"numpy.ma.minimum_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.minimum_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.ndim" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.ndim" [color=purple penwidth=1 style=dashed]
	"numpy.ma.notmasked_contiguous" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.notmasked_contiguous" [color=purple penwidth=1 style=dashed]
	"numpy.ma.notmasked_edges" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.notmasked_edges" [color=purple penwidth=1 style=dashed]
	"numpy.ma.outer" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.outer" [color=purple penwidth=1 style=dashed]
	"numpy.ma.outerproduct" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.outerproduct" [color=purple penwidth=1 style=dashed]
	"numpy.ma.polyfit" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.polyfit" [color=purple penwidth=1 style=dashed]
	"numpy.ma.power" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.power" [color=purple penwidth=1 style=dashed]
	"numpy.ma.ptp" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.ptp" [color=purple penwidth=1 style=dashed]
	"numpy.ma.put" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.put" [color=purple penwidth=1 style=dashed]
	"numpy.ma.putmask" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.putmask" [color=purple penwidth=1 style=dashed]
	"numpy.ma.rank" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.rank" [color=purple penwidth=1 style=dashed]
	"numpy.ma.reshape" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.reshape" [color=purple penwidth=1 style=dashed]
	"numpy.ma.resize" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.resize" [color=purple penwidth=1 style=dashed]
	"numpy.ma.right_shift" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.right_shift" [color=purple penwidth=1 style=dashed]
	"numpy.ma.round" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.round" [color=purple penwidth=1 style=dashed]
	"numpy.ma.round_" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.round_" [color=purple penwidth=1 style=dashed]
	"numpy.ma.set_fill_value" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.set_fill_value" [color=purple penwidth=1 style=dashed]
	"numpy.ma.setdiff1d" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.setdiff1d" [color=purple penwidth=1 style=dashed]
	"numpy.ma.setxor1d" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.setxor1d" [color=purple penwidth=1 style=dashed]
	"numpy.ma.shape" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.shape" [color=purple penwidth=1 style=dashed]
	"numpy.ma.size" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.size" [color=purple penwidth=1 style=dashed]
	"numpy.ma.sort" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.sort" [color=purple penwidth=1 style=dashed]
	"numpy.ma.squeeze" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.squeeze" [color=purple penwidth=1 style=dashed]
	"numpy.ma.take" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.take" [color=purple penwidth=1 style=dashed]
	"numpy.ma.transpose" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.transpose" [color=purple penwidth=1 style=dashed]
	"numpy.ma.union1d" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.union1d" [color=purple penwidth=1 style=dashed]
	"numpy.ma.unique" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.unique" [color=purple penwidth=1 style=dashed]
	"numpy.ma.vander" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.vander" [color=purple penwidth=1 style=dashed]
	"numpy.ma.where" [color=purple fontsize=16 shape=none]
		"numpy.ma-functions" -> "numpy.ma.where" [color=purple penwidth=1 style=dashed]
	"numpy.ma-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma" -> "numpy.ma-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.__all__" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.__all__" [color=black penwidth=1 style=dashed]
	"numpy.ma.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.ma.__doc__" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.ma.__file__" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.__file__" [color=black penwidth=1 style=dashed]
	"numpy.ma.__name__" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.__name__" [color=black penwidth=1 style=dashed]
	"numpy.ma.__package__" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.__package__" [color=black penwidth=1 style=dashed]
	"numpy.ma.__path__" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.__path__" [color=black penwidth=1 style=dashed]
	"numpy.ma.abs" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.abs" [color=black penwidth=1 style=dashed]
	"numpy.ma.absolute" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.absolute" [color=black penwidth=1 style=dashed]
	"numpy.ma.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.ma.add" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.add" [color=black penwidth=1 style=dashed]
	"numpy.ma.all" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.all" [color=black penwidth=1 style=dashed]
	"numpy.ma.alltrue" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.alltrue" [color=black penwidth=1 style=dashed]
	"numpy.ma.angle" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.angle" [color=black penwidth=1 style=dashed]
	"numpy.ma.anom" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.anom" [color=black penwidth=1 style=dashed]
	"numpy.ma.anomalies" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.anomalies" [color=black penwidth=1 style=dashed]
	"numpy.ma.any" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.any" [color=black penwidth=1 style=dashed]
	"numpy.ma.arange" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.arange" [color=black penwidth=1 style=dashed]
	"numpy.ma.arccos" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.arccos" [color=black penwidth=1 style=dashed]
	"numpy.ma.arccosh" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.arccosh" [color=black penwidth=1 style=dashed]
	"numpy.ma.arcsin" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.arcsin" [color=black penwidth=1 style=dashed]
	"numpy.ma.arcsinh" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.arcsinh" [color=black penwidth=1 style=dashed]
	"numpy.ma.arctan" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.arctan" [color=black penwidth=1 style=dashed]
	"numpy.ma.arctan2" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.arctan2" [color=black penwidth=1 style=dashed]
	"numpy.ma.arctanh" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.arctanh" [color=black penwidth=1 style=dashed]
	"numpy.ma.argmax" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.argmax" [color=black penwidth=1 style=dashed]
	"numpy.ma.argmin" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.argmin" [color=black penwidth=1 style=dashed]
	"numpy.ma.around" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.around" [color=black penwidth=1 style=dashed]
	"numpy.ma.atleast_1d" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.atleast_1d" [color=black penwidth=1 style=dashed]
	"numpy.ma.atleast_2d" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.atleast_2d" [color=black penwidth=1 style=dashed]
	"numpy.ma.atleast_3d" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.atleast_3d" [color=black penwidth=1 style=dashed]
	"numpy.ma.bench" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.bench" [color=black penwidth=1 style=dashed]
	"numpy.ma.bitwise_and" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.bitwise_and" [color=black penwidth=1 style=dashed]
	"numpy.ma.bitwise_or" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.bitwise_or" [color=black penwidth=1 style=dashed]
	"numpy.ma.bitwise_xor" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.bitwise_xor" [color=black penwidth=1 style=dashed]
	"numpy.ma.ceil" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.ceil" [color=black penwidth=1 style=dashed]
	"numpy.ma.column_stack" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.column_stack" [color=black penwidth=1 style=dashed]
	"numpy.ma.compress" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.compress" [color=black penwidth=1 style=dashed]
	"numpy.ma.conjugate" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.conjugate" [color=black penwidth=1 style=dashed]
	"numpy.ma.copy" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.copy" [color=black penwidth=1 style=dashed]
	"numpy.ma.cos" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.cos" [color=black penwidth=1 style=dashed]
	"numpy.ma.cosh" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.cosh" [color=black penwidth=1 style=dashed]
	"numpy.ma.count" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.count" [color=black penwidth=1 style=dashed]
	"numpy.ma.cumprod" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.cumprod" [color=black penwidth=1 style=dashed]
	"numpy.ma.cumsum" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.cumsum" [color=black penwidth=1 style=dashed]
	"numpy.ma.diagflat" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.diagflat" [color=black penwidth=1 style=dashed]
	"numpy.ma.diagonal" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.diagonal" [color=black penwidth=1 style=dashed]
	"numpy.ma.divide" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.divide" [color=black penwidth=1 style=dashed]
	"numpy.ma.division" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.division" [color=black penwidth=1 style=dashed]
	"numpy.ma.dstack" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.dstack" [color=black penwidth=1 style=dashed]
	"numpy.ma.empty" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.empty" [color=black penwidth=1 style=dashed]
	"numpy.ma.empty_like" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.empty_like" [color=black penwidth=1 style=dashed]
	"numpy.ma.equal" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.equal" [color=black penwidth=1 style=dashed]
	"numpy.ma.exp" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.exp" [color=black penwidth=1 style=dashed]
	"numpy.ma.fabs" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.fabs" [color=black penwidth=1 style=dashed]
	"numpy.ma.floor" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.floor" [color=black penwidth=1 style=dashed]
	"numpy.ma.floor_divide" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.floor_divide" [color=black penwidth=1 style=dashed]
	"numpy.ma.fmod" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.fmod" [color=black penwidth=1 style=dashed]
	"numpy.ma.frombuffer" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.frombuffer" [color=black penwidth=1 style=dashed]
	"numpy.ma.fromfunction" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.fromfunction" [color=black penwidth=1 style=dashed]
	"numpy.ma.greater" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.greater" [color=black penwidth=1 style=dashed]
	"numpy.ma.greater_equal" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.greater_equal" [color=black penwidth=1 style=dashed]
	"numpy.ma.harden_mask" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.harden_mask" [color=black penwidth=1 style=dashed]
	"numpy.ma.hsplit" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.hsplit" [color=black penwidth=1 style=dashed]
	"numpy.ma.hstack" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.hstack" [color=black penwidth=1 style=dashed]
	"numpy.ma.hypot" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.hypot" [color=black penwidth=1 style=dashed]
	"numpy.ma.identity" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.identity" [color=black penwidth=1 style=dashed]
	"numpy.ma.ids" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.ids" [color=black penwidth=1 style=dashed]
	"numpy.ma.less" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.less" [color=black penwidth=1 style=dashed]
	"numpy.ma.less_equal" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.less_equal" [color=black penwidth=1 style=dashed]
	"numpy.ma.log" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.log" [color=black penwidth=1 style=dashed]
	"numpy.ma.log10" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.log10" [color=black penwidth=1 style=dashed]
	"numpy.ma.log2" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.log2" [color=black penwidth=1 style=dashed]
	"numpy.ma.logical_and" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.logical_and" [color=black penwidth=1 style=dashed]
	"numpy.ma.logical_not" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.logical_not" [color=black penwidth=1 style=dashed]
	"numpy.ma.logical_or" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.logical_or" [color=black penwidth=1 style=dashed]
	"numpy.ma.logical_xor" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.logical_xor" [color=black penwidth=1 style=dashed]
	"numpy.ma.masked" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.masked" [color=black penwidth=1 style=dashed]
	"numpy.ma.masked_print_option" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.masked_print_option" [color=black penwidth=1 style=dashed]
	"numpy.ma.masked_singleton" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.masked_singleton" [color=black penwidth=1 style=dashed]
	"numpy.ma.maximum" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.maximum" [color=black penwidth=1 style=dashed]
	"numpy.ma.mean" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.mean" [color=black penwidth=1 style=dashed]
	"numpy.ma.minimum" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.minimum" [color=black penwidth=1 style=dashed]
	"numpy.ma.mod" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.mod" [color=black penwidth=1 style=dashed]
	"numpy.ma.mr_" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.mr_" [color=black penwidth=1 style=dashed]
	"numpy.ma.multiply" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.multiply" [color=black penwidth=1 style=dashed]
	"numpy.ma.negative" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.negative" [color=black penwidth=1 style=dashed]
	"numpy.ma.nomask" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.nomask" [color=black penwidth=1 style=dashed]
	"numpy.ma.nonzero" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.nonzero" [color=black penwidth=1 style=dashed]
	"numpy.ma.not_equal" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.not_equal" [color=black penwidth=1 style=dashed]
	"numpy.ma.ones" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.ones" [color=black penwidth=1 style=dashed]
	"numpy.ma.print_function" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.print_function" [color=black penwidth=1 style=dashed]
	"numpy.ma.prod" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.prod" [color=black penwidth=1 style=dashed]
	"numpy.ma.product" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.product" [color=black penwidth=1 style=dashed]
	"numpy.ma.ravel" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.ravel" [color=black penwidth=1 style=dashed]
	"numpy.ma.remainder" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.remainder" [color=black penwidth=1 style=dashed]
	"numpy.ma.repeat" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.repeat" [color=black penwidth=1 style=dashed]
	"numpy.ma.row_stack" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.row_stack" [color=black penwidth=1 style=dashed]
	"numpy.ma.sin" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.sin" [color=black penwidth=1 style=dashed]
	"numpy.ma.sinh" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.sinh" [color=black penwidth=1 style=dashed]
	"numpy.ma.soften_mask" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.soften_mask" [color=black penwidth=1 style=dashed]
	"numpy.ma.sometrue" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.sometrue" [color=black penwidth=1 style=dashed]
	"numpy.ma.sqrt" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.sqrt" [color=black penwidth=1 style=dashed]
	"numpy.ma.std" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.std" [color=black penwidth=1 style=dashed]
	"numpy.ma.subtract" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.subtract" [color=black penwidth=1 style=dashed]
	"numpy.ma.sum" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.sum" [color=black penwidth=1 style=dashed]
	"numpy.ma.swapaxes" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.swapaxes" [color=black penwidth=1 style=dashed]
	"numpy.ma.tan" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.tan" [color=black penwidth=1 style=dashed]
	"numpy.ma.tanh" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.tanh" [color=black penwidth=1 style=dashed]
	"numpy.ma.test" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.test" [color=black penwidth=1 style=dashed]
	"numpy.ma.trace" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.trace" [color=black penwidth=1 style=dashed]
	"numpy.ma.true_divide" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.true_divide" [color=black penwidth=1 style=dashed]
	"numpy.ma.var" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.var" [color=black penwidth=1 style=dashed]
	"numpy.ma.vstack" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.vstack" [color=black penwidth=1 style=dashed]
	"numpy.ma.zeros" [color=black fontsize=16 shape=none]
		"numpy.ma-nofta" -> "numpy.ma.zeros" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.format.sys" -> "numpy.lib.format.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.format.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.format.sys" -> "numpy.lib.format.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.format.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.format.sys" -> "numpy.lib.format.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.format.sys" -> "numpy.lib.format.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.random.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.random.np" -> "numpy.random.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.random.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.random.np" -> "numpy.random.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.random.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.random.np" -> "numpy.random.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.random.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.random.np" -> "numpy.random.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base.warnings" -> "numpy.lib.function_base.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base.warnings" -> "numpy.lib.function_base.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base.warnings" -> "numpy.lib.function_base.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base.warnings" -> "numpy.lib.function_base.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numerictypes.numbers-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numerictypes.numbers" -> "numpy.core.numerictypes.numbers-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numerictypes.numbers-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numerictypes.numbers" -> "numpy.core.numerictypes.numbers-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numerictypes.numbers-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numerictypes.numbers" -> "numpy.core.numerictypes.numbers-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numerictypes.numbers-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numerictypes.numbers" -> "numpy.core.numerictypes.numbers-nofta" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.lapack_lite-builtins" [color=red fontsize=16 shape=none]
		"numpy.linalg.linalg.lapack_lite" -> "numpy.linalg.linalg.lapack_lite-builtins" [color=red penwidth=1 style=dashed]
	"numpy.linalg.linalg.lapack_lite-classes" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg.lapack_lite" -> "numpy.linalg.linalg.lapack_lite-classes" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.lapack_lite-functions" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg.lapack_lite" -> "numpy.linalg.linalg.lapack_lite-functions" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.lapack_lite-nofta" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg.lapack_lite" -> "numpy.linalg.linalg.lapack_lite-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.utils.sys" -> "numpy.testing.utils.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.utils.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils.sys" -> "numpy.testing.utils.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils.sys" -> "numpy.testing.utils.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.utils.sys" -> "numpy.testing.utils.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.fromnumeric" -> "numpy.core.fromnumeric-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.fromnumeric._sum_" [color=red fontsize=16 shape=none]
		"numpy.core.fromnumeric-builtins" -> "numpy.core.fromnumeric._sum_" [color=red penwidth=1 style=dashed]
	"numpy.core.fromnumeric.array" [color=red fontsize=16 shape=none]
		"numpy.core.fromnumeric-builtins" -> "numpy.core.fromnumeric.array" [color=red penwidth=1 style=dashed]
	"numpy.core.fromnumeric.concatenate" [color=red fontsize=16 shape=none]
		"numpy.core.fromnumeric-builtins" -> "numpy.core.fromnumeric.concatenate" [color=red penwidth=1 style=dashed]
	"numpy.core.fromnumeric-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.fromnumeric" -> "numpy.core.fromnumeric-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.fromnumeric.VisibleDeprecationWarning" [color=gold fontsize=16 shape=none]
		"numpy.core.fromnumeric-classes" -> "numpy.core.fromnumeric.VisibleDeprecationWarning" [color=gold penwidth=1 style=dashed]
	"numpy.core.fromnumeric._gentype" [color=gold fontsize=16 shape=none]
		"numpy.core.fromnumeric-classes" -> "numpy.core.fromnumeric._gentype" [color=gold penwidth=1 style=dashed]
	"numpy.core.fromnumeric-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric" -> "numpy.core.fromnumeric-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric._dt_" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric._dt_" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric._wrapit" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric._wrapit" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.alen" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.alen" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.all" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.all" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.alltrue" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.alltrue" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.amax" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.amax" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.amin" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.amin" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.any" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.any" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.argmax" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.argmax" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.argmin" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.argmin" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.argpartition" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.argpartition" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.argsort" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.argsort" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.around" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.around" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.asarray" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.choose" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.choose" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.clip" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.clip" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.compress" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.compress" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.cumprod" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.cumprod" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.cumproduct" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.cumproduct" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.cumsum" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.cumsum" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.diagonal" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.diagonal" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.mean" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.mean" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.ndim" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.ndim" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.nonzero" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.nonzero" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.partition" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.partition" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.prod" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.prod" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.product" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.product" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.ptp" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.ptp" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.put" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.put" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.rank" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.rank" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.ravel" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.ravel" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.repeat" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.repeat" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.reshape" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.reshape" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.resize" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.resize" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.round_" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.round_" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.searchsorted" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.searchsorted" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.shape" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.shape" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.size" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.size" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.sometrue" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.sometrue" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.sort" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.sort" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.squeeze" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.squeeze" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.std" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.std" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.sum" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.sum" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.swapaxes" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.swapaxes" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.take" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.take" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.trace" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.trace" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.transpose" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.transpose" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.var" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric-functions" -> "numpy.core.fromnumeric.var" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric" -> "numpy.core.fromnumeric-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.__all__" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric-nofta" -> "numpy.core.fromnumeric.__all__" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric-nofta" -> "numpy.core.fromnumeric.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric-nofta" -> "numpy.core.fromnumeric.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric-nofta" -> "numpy.core.fromnumeric.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric-nofta" -> "numpy.core.fromnumeric.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric-nofta" -> "numpy.core.fromnumeric.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric-nofta" -> "numpy.core.fromnumeric.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.division" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric-nofta" -> "numpy.core.fromnumeric.division" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.print_function" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric-nofta" -> "numpy.core.fromnumeric.print_function" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib-builtins" [color=red fontsize=16 shape=none]
		"numpy.ctypeslib" -> "numpy.ctypeslib-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ctypeslib.array" [color=red fontsize=16 shape=none]
		"numpy.ctypeslib-builtins" -> "numpy.ctypeslib.array" [color=red penwidth=1 style=dashed]
	"numpy.ctypeslib-classes" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib" -> "numpy.ctypeslib-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib._ARRAY_TYPE" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib-classes" -> "numpy.ctypeslib._ARRAY_TYPE" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib._dtype" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib-classes" -> "numpy.ctypeslib._dtype" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib._ndptr" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib-classes" -> "numpy.ctypeslib._ndptr" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib._ndptr_base" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib-classes" -> "numpy.ctypeslib._ndptr_base" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib.c_intp" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib-classes" -> "numpy.ctypeslib.c_intp" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib.flagsobj" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib-classes" -> "numpy.ctypeslib.flagsobj" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib.integer" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib-classes" -> "numpy.ctypeslib.integer" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib.ndarray" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib-classes" -> "numpy.ctypeslib.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib.tp" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib-classes" -> "numpy.ctypeslib.tp" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib-functions" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib" -> "numpy.ctypeslib-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib._flags_fromnum" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib-functions" -> "numpy.ctypeslib._flags_fromnum" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib._num_fromflags" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib-functions" -> "numpy.ctypeslib._num_fromflags" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.as_array" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib-functions" -> "numpy.ctypeslib.as_array" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.as_ctypes" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib-functions" -> "numpy.ctypeslib.as_ctypes" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.ctypes_load_library" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib-functions" -> "numpy.ctypeslib.ctypes_load_library" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.deprecate" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib-functions" -> "numpy.ctypeslib.deprecate" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.load_library" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib-functions" -> "numpy.ctypeslib.load_library" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.ndpointer" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib-functions" -> "numpy.ctypeslib.ndpointer" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.prep_array" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib-functions" -> "numpy.ctypeslib.prep_array" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.prep_pointer" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib-functions" -> "numpy.ctypeslib.prep_pointer" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.prep_simple" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib-functions" -> "numpy.ctypeslib.prep_simple" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib-nofta" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib" -> "numpy.ctypeslib-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.__all__" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib.__all__" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.__doc__" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.__file__" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib.__file__" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.__name__" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib.__name__" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.__package__" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib.__package__" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib._flagdict" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib._flagdict" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib._flagnames" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib._flagnames" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib._pointer_type_cache" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib._pointer_type_cache" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib._typecodes" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib._typecodes" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.code" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib.code" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.division" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib.division" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.print_function" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib.print_function" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.simple_types" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib.simple_types" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.types" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib-nofta" -> "numpy.ctypeslib.types" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.types-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.fromnumeric.types" -> "numpy.core.fromnumeric.types-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.fromnumeric.types-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.fromnumeric.types" -> "numpy.core.fromnumeric.types-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.fromnumeric.types-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric.types" -> "numpy.core.fromnumeric.types-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.types-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric.types" -> "numpy.core.fromnumeric.types-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.scimath" -> "numpy.lib.scimath-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.scimath-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.scimath" -> "numpy.lib.scimath-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.scimath-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath" -> "numpy.lib.scimath-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath._fix_int_lt_zero" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath._fix_int_lt_zero" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath._fix_real_abs_gt_1" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath._fix_real_abs_gt_1" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath._fix_real_lt_zero" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath._fix_real_lt_zero" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath._tocomplex" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath._tocomplex" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.any" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath.any" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.arccos" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath.arccos" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.arcsin" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath.arcsin" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.arctanh" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath.arctanh" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.asarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.isreal" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath.isreal" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.log" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath.log" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.log10" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath.log10" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.log2" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath.log2" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.logn" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath.logn" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.power" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath.power" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath.sqrt" [color=purple fontsize=16 shape=none]
		"numpy.lib.scimath-functions" -> "numpy.lib.scimath.sqrt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.scimath-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath" -> "numpy.lib.scimath-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath-nofta" -> "numpy.lib.scimath.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath-nofta" -> "numpy.lib.scimath.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath-nofta" -> "numpy.lib.scimath.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath-nofta" -> "numpy.lib.scimath.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath-nofta" -> "numpy.lib.scimath.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath-nofta" -> "numpy.lib.scimath.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath._ln2" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath-nofta" -> "numpy.lib.scimath._ln2" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath-nofta" -> "numpy.lib.scimath.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath.division" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath-nofta" -> "numpy.lib.scimath.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.scimath.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.scimath-nofta" -> "numpy.lib.scimath.print_function" [color=black penwidth=1 style=dashed]
	"numpy.fft-builtins" [color=red fontsize=16 shape=none]
		"numpy.fft" -> "numpy.fft-builtins" [color=red penwidth=1 style=dashed]
	"numpy.fft-classes" [color=gold fontsize=16 shape=none]
		"numpy.fft" -> "numpy.fft-classes" [color=gold penwidth=1 style=dashed]
	"numpy.fft-functions" [color=purple fontsize=16 shape=none]
		"numpy.fft" -> "numpy.fft-functions" [color=purple penwidth=1 style=dashed]
	"numpy.fft._numpy_tester" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft._numpy_tester" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fft" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.fft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fft2" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.fft2" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftfreq" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.fftfreq" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftn" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.fftn" [color=purple penwidth=1 style=dashed]
	"numpy.fft.fftshift" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.fftshift" [color=purple penwidth=1 style=dashed]
	"numpy.fft.hfft" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.hfft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.ifft" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.ifft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.ifft2" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.ifft2" [color=purple penwidth=1 style=dashed]
	"numpy.fft.ifftn" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.ifftn" [color=purple penwidth=1 style=dashed]
	"numpy.fft.ifftshift" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.ifftshift" [color=purple penwidth=1 style=dashed]
	"numpy.fft.ihfft" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.ihfft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.irfft" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.irfft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.irfft2" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.irfft2" [color=purple penwidth=1 style=dashed]
	"numpy.fft.irfftn" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.irfftn" [color=purple penwidth=1 style=dashed]
	"numpy.fft.rfft" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.rfft" [color=purple penwidth=1 style=dashed]
	"numpy.fft.rfft2" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.rfft2" [color=purple penwidth=1 style=dashed]
	"numpy.fft.rfftfreq" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.rfftfreq" [color=purple penwidth=1 style=dashed]
	"numpy.fft.rfftn" [color=purple fontsize=16 shape=none]
		"numpy.fft-functions" -> "numpy.fft.rfftn" [color=purple penwidth=1 style=dashed]
	"numpy.fft-nofta" [color=black fontsize=16 shape=none]
		"numpy.fft" -> "numpy.fft-nofta" [color=black penwidth=1 style=dashed]
	"numpy.fft.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.fft-nofta" -> "numpy.fft.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.fft.__doc__" [color=black fontsize=16 shape=none]
		"numpy.fft-nofta" -> "numpy.fft.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.fft.__file__" [color=black fontsize=16 shape=none]
		"numpy.fft-nofta" -> "numpy.fft.__file__" [color=black penwidth=1 style=dashed]
	"numpy.fft.__name__" [color=black fontsize=16 shape=none]
		"numpy.fft-nofta" -> "numpy.fft.__name__" [color=black penwidth=1 style=dashed]
	"numpy.fft.__package__" [color=black fontsize=16 shape=none]
		"numpy.fft-nofta" -> "numpy.fft.__package__" [color=black penwidth=1 style=dashed]
	"numpy.fft.__path__" [color=black fontsize=16 shape=none]
		"numpy.fft-nofta" -> "numpy.fft.__path__" [color=black penwidth=1 style=dashed]
	"numpy.fft.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.fft-nofta" -> "numpy.fft.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.fft.bench" [color=black fontsize=16 shape=none]
		"numpy.fft-nofta" -> "numpy.fft.bench" [color=black penwidth=1 style=dashed]
	"numpy.fft.division" [color=black fontsize=16 shape=none]
		"numpy.fft-nofta" -> "numpy.fft.division" [color=black penwidth=1 style=dashed]
	"numpy.fft.print_function" [color=black fontsize=16 shape=none]
		"numpy.fft-nofta" -> "numpy.fft.print_function" [color=black penwidth=1 style=dashed]
	"numpy.fft.test" [color=black fontsize=16 shape=none]
		"numpy.fft-nofta" -> "numpy.fft.test" [color=black penwidth=1 style=dashed]
	"numpy.fft.using_mklfft" [color=black fontsize=16 shape=none]
		"numpy.fft-nofta" -> "numpy.fft.using_mklfft" [color=black penwidth=1 style=dashed]
	"numpy.lib-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib" -> "numpy.lib-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.add_docstring" [color=red fontsize=16 shape=none]
		"numpy.lib-builtins" -> "numpy.lib.add_docstring" [color=red penwidth=1 style=dashed]
	"numpy.lib.add_newdoc_ufunc" [color=red fontsize=16 shape=none]
		"numpy.lib-builtins" -> "numpy.lib.add_newdoc_ufunc" [color=red penwidth=1 style=dashed]
	"numpy.lib.bincount" [color=red fontsize=16 shape=none]
		"numpy.lib-builtins" -> "numpy.lib.bincount" [color=red penwidth=1 style=dashed]
	"numpy.lib.digitize" [color=red fontsize=16 shape=none]
		"numpy.lib-builtins" -> "numpy.lib.digitize" [color=red penwidth=1 style=dashed]
	"numpy.lib.loads" [color=red fontsize=16 shape=none]
		"numpy.lib-builtins" -> "numpy.lib.loads" [color=red penwidth=1 style=dashed]
	"numpy.lib.packbits" [color=red fontsize=16 shape=none]
		"numpy.lib-builtins" -> "numpy.lib.packbits" [color=red penwidth=1 style=dashed]
	"numpy.lib.ravel_multi_index" [color=red fontsize=16 shape=none]
		"numpy.lib-builtins" -> "numpy.lib.ravel_multi_index" [color=red penwidth=1 style=dashed]
	"numpy.lib.unpackbits" [color=red fontsize=16 shape=none]
		"numpy.lib-builtins" -> "numpy.lib.unpackbits" [color=red penwidth=1 style=dashed]
	"numpy.lib.unravel_index" [color=red fontsize=16 shape=none]
		"numpy.lib-builtins" -> "numpy.lib.unravel_index" [color=red penwidth=1 style=dashed]
	"numpy.lib-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib" -> "numpy.lib-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.Arrayterator" [color=gold fontsize=16 shape=none]
		"numpy.lib-classes" -> "numpy.lib.Arrayterator" [color=gold penwidth=1 style=dashed]
	"numpy.lib.DataSource" [color=gold fontsize=16 shape=none]
		"numpy.lib-classes" -> "numpy.lib.DataSource" [color=gold penwidth=1 style=dashed]
	"numpy.lib.NumpyVersion" [color=gold fontsize=16 shape=none]
		"numpy.lib-classes" -> "numpy.lib.NumpyVersion" [color=gold penwidth=1 style=dashed]
	"numpy.lib.RankWarning" [color=gold fontsize=16 shape=none]
		"numpy.lib-classes" -> "numpy.lib.RankWarning" [color=gold penwidth=1 style=dashed]
	"numpy.lib.ndenumerate" [color=gold fontsize=16 shape=none]
		"numpy.lib-classes" -> "numpy.lib.ndenumerate" [color=gold penwidth=1 style=dashed]
	"numpy.lib.ndindex" [color=gold fontsize=16 shape=none]
		"numpy.lib-classes" -> "numpy.lib.ndindex" [color=gold penwidth=1 style=dashed]
	"numpy.lib.poly1d" [color=gold fontsize=16 shape=none]
		"numpy.lib-classes" -> "numpy.lib.poly1d" [color=gold penwidth=1 style=dashed]
	"numpy.lib.vectorize" [color=gold fontsize=16 shape=none]
		"numpy.lib-classes" -> "numpy.lib.vectorize" [color=gold penwidth=1 style=dashed]
	"numpy.lib-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib" -> "numpy.lib-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib._numpy_tester" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib._numpy_tester" [color=purple penwidth=1 style=dashed]
	"numpy.lib.add_newdoc" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.add_newdoc" [color=purple penwidth=1 style=dashed]
	"numpy.lib.angle" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.angle" [color=purple penwidth=1 style=dashed]
	"numpy.lib.append" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.append" [color=purple penwidth=1 style=dashed]
	"numpy.lib.apply_along_axis" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.apply_along_axis" [color=purple penwidth=1 style=dashed]
	"numpy.lib.apply_over_axes" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.apply_over_axes" [color=purple penwidth=1 style=dashed]
	"numpy.lib.array_split" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.array_split" [color=purple penwidth=1 style=dashed]
	"numpy.lib.asarray_chkfinite" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.asarray_chkfinite" [color=purple penwidth=1 style=dashed]
	"numpy.lib.asfarray" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.asfarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.asscalar" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.asscalar" [color=purple penwidth=1 style=dashed]
	"numpy.lib.average" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.average" [color=purple penwidth=1 style=dashed]
	"numpy.lib.bartlett" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.bartlett" [color=purple penwidth=1 style=dashed]
	"numpy.lib.blackman" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.blackman" [color=purple penwidth=1 style=dashed]
	"numpy.lib.broadcast_arrays" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.broadcast_arrays" [color=purple penwidth=1 style=dashed]
	"numpy.lib.broadcast_to" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.broadcast_to" [color=purple penwidth=1 style=dashed]
	"numpy.lib.byte_bounds" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.byte_bounds" [color=purple penwidth=1 style=dashed]
	"numpy.lib.column_stack" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.column_stack" [color=purple penwidth=1 style=dashed]
	"numpy.lib.common_type" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.common_type" [color=purple penwidth=1 style=dashed]
	"numpy.lib.copy" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.copy" [color=purple penwidth=1 style=dashed]
	"numpy.lib.corrcoef" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.corrcoef" [color=purple penwidth=1 style=dashed]
	"numpy.lib.cov" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.cov" [color=purple penwidth=1 style=dashed]
	"numpy.lib.delete" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.delete" [color=purple penwidth=1 style=dashed]
	"numpy.lib.deprecate" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.deprecate" [color=purple penwidth=1 style=dashed]
	"numpy.lib.deprecate_with_doc" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.deprecate_with_doc" [color=purple penwidth=1 style=dashed]
	"numpy.lib.diag" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.diag" [color=purple penwidth=1 style=dashed]
	"numpy.lib.diag_indices" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.diag_indices" [color=purple penwidth=1 style=dashed]
	"numpy.lib.diag_indices_from" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.diag_indices_from" [color=purple penwidth=1 style=dashed]
	"numpy.lib.diagflat" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.diagflat" [color=purple penwidth=1 style=dashed]
	"numpy.lib.diff" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.diff" [color=purple penwidth=1 style=dashed]
	"numpy.lib.disp" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.disp" [color=purple penwidth=1 style=dashed]
	"numpy.lib.dsplit" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.dsplit" [color=purple penwidth=1 style=dashed]
	"numpy.lib.dstack" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.dstack" [color=purple penwidth=1 style=dashed]
	"numpy.lib.ediff1d" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.ediff1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.expand_dims" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.expand_dims" [color=purple penwidth=1 style=dashed]
	"numpy.lib.extract" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.extract" [color=purple penwidth=1 style=dashed]
	"numpy.lib.eye" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.eye" [color=purple penwidth=1 style=dashed]
	"numpy.lib.fill_diagonal" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.fill_diagonal" [color=purple penwidth=1 style=dashed]
	"numpy.lib.fix" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.fix" [color=purple penwidth=1 style=dashed]
	"numpy.lib.fliplr" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.fliplr" [color=purple penwidth=1 style=dashed]
	"numpy.lib.flipud" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.flipud" [color=purple penwidth=1 style=dashed]
	"numpy.lib.fromregex" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.fromregex" [color=purple penwidth=1 style=dashed]
	"numpy.lib.fv" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.fv" [color=purple penwidth=1 style=dashed]
	"numpy.lib.genfromtxt" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.genfromtxt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.get_array_wrap" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.get_array_wrap" [color=purple penwidth=1 style=dashed]
	"numpy.lib.get_include" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.get_include" [color=purple penwidth=1 style=dashed]
	"numpy.lib.gradient" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.gradient" [color=purple penwidth=1 style=dashed]
	"numpy.lib.hamming" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.hamming" [color=purple penwidth=1 style=dashed]
	"numpy.lib.hanning" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.hanning" [color=purple penwidth=1 style=dashed]
	"numpy.lib.histogram" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.histogram" [color=purple penwidth=1 style=dashed]
	"numpy.lib.histogram2d" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.histogram2d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.histogramdd" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.histogramdd" [color=purple penwidth=1 style=dashed]
	"numpy.lib.hsplit" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.hsplit" [color=purple penwidth=1 style=dashed]
	"numpy.lib.i0" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.i0" [color=purple penwidth=1 style=dashed]
	"numpy.lib.imag" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.imag" [color=purple penwidth=1 style=dashed]
	"numpy.lib.in1d" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.in1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.info" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.info" [color=purple penwidth=1 style=dashed]
	"numpy.lib.insert" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.insert" [color=purple penwidth=1 style=dashed]
	"numpy.lib.interp" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.interp" [color=purple penwidth=1 style=dashed]
	"numpy.lib.intersect1d" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.intersect1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.ipmt" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.ipmt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.irr" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.irr" [color=purple penwidth=1 style=dashed]
	"numpy.lib.iscomplex" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.iscomplex" [color=purple penwidth=1 style=dashed]
	"numpy.lib.iscomplexobj" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.iscomplexobj" [color=purple penwidth=1 style=dashed]
	"numpy.lib.isneginf" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.isneginf" [color=purple penwidth=1 style=dashed]
	"numpy.lib.isposinf" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.isposinf" [color=purple penwidth=1 style=dashed]
	"numpy.lib.isreal" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.isreal" [color=purple penwidth=1 style=dashed]
	"numpy.lib.isrealobj" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.isrealobj" [color=purple penwidth=1 style=dashed]
	"numpy.lib.issubclass_" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.issubclass_" [color=purple penwidth=1 style=dashed]
	"numpy.lib.issubdtype" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.issubdtype" [color=purple penwidth=1 style=dashed]
	"numpy.lib.issubsctype" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.issubsctype" [color=purple penwidth=1 style=dashed]
	"numpy.lib.iterable" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.iterable" [color=purple penwidth=1 style=dashed]
	"numpy.lib.ix_" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.ix_" [color=purple penwidth=1 style=dashed]
	"numpy.lib.kaiser" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.kaiser" [color=purple penwidth=1 style=dashed]
	"numpy.lib.kron" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.kron" [color=purple penwidth=1 style=dashed]
	"numpy.lib.load" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.load" [color=purple penwidth=1 style=dashed]
	"numpy.lib.loadtxt" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.loadtxt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.lookfor" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.lookfor" [color=purple penwidth=1 style=dashed]
	"numpy.lib.mafromtxt" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.mafromtxt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.mask_indices" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.mask_indices" [color=purple penwidth=1 style=dashed]
	"numpy.lib.median" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.median" [color=purple penwidth=1 style=dashed]
	"numpy.lib.meshgrid" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.meshgrid" [color=purple penwidth=1 style=dashed]
	"numpy.lib.mintypecode" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.mintypecode" [color=purple penwidth=1 style=dashed]
	"numpy.lib.mirr" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.mirr" [color=purple penwidth=1 style=dashed]
	"numpy.lib.msort" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.msort" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nan_to_num" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nan_to_num" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanargmax" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nanargmax" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanargmin" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nanargmin" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanmax" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nanmax" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanmean" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nanmean" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanmedian" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nanmedian" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanmin" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nanmin" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanpercentile" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nanpercentile" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanprod" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nanprod" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanstd" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nanstd" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nansum" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nansum" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanvar" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nanvar" [color=purple penwidth=1 style=dashed]
	"numpy.lib.ndfromtxt" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.ndfromtxt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nper" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.nper" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npv" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.npv" [color=purple penwidth=1 style=dashed]
	"numpy.lib.pad" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.pad" [color=purple penwidth=1 style=dashed]
	"numpy.lib.percentile" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.percentile" [color=purple penwidth=1 style=dashed]
	"numpy.lib.piecewise" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.piecewise" [color=purple penwidth=1 style=dashed]
	"numpy.lib.place" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.place" [color=purple penwidth=1 style=dashed]
	"numpy.lib.pmt" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.pmt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.poly" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.poly" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polyadd" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.polyadd" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polyder" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.polyder" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polydiv" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.polydiv" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polyfit" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.polyfit" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polyint" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.polyint" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polymul" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.polymul" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polysub" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.polysub" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polyval" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.polyval" [color=purple penwidth=1 style=dashed]
	"numpy.lib.ppmt" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.ppmt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.pv" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.pv" [color=purple penwidth=1 style=dashed]
	"numpy.lib.rate" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.rate" [color=purple penwidth=1 style=dashed]
	"numpy.lib.real" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.real" [color=purple penwidth=1 style=dashed]
	"numpy.lib.real_if_close" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.real_if_close" [color=purple penwidth=1 style=dashed]
	"numpy.lib.recfromcsv" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.recfromcsv" [color=purple penwidth=1 style=dashed]
	"numpy.lib.recfromtxt" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.recfromtxt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.roots" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.roots" [color=purple penwidth=1 style=dashed]
	"numpy.lib.rot90" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.rot90" [color=purple penwidth=1 style=dashed]
	"numpy.lib.row_stack" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.row_stack" [color=purple penwidth=1 style=dashed]
	"numpy.lib.safe_eval" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.safe_eval" [color=purple penwidth=1 style=dashed]
	"numpy.lib.save" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.save" [color=purple penwidth=1 style=dashed]
	"numpy.lib.savetxt" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.savetxt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.savez" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.savez" [color=purple penwidth=1 style=dashed]
	"numpy.lib.savez_compressed" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.savez_compressed" [color=purple penwidth=1 style=dashed]
	"numpy.lib.select" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.select" [color=purple penwidth=1 style=dashed]
	"numpy.lib.setdiff1d" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.setdiff1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.setxor1d" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.setxor1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.sinc" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.sinc" [color=purple penwidth=1 style=dashed]
	"numpy.lib.sort_complex" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.sort_complex" [color=purple penwidth=1 style=dashed]
	"numpy.lib.source" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.source" [color=purple penwidth=1 style=dashed]
	"numpy.lib.split" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.split" [color=purple penwidth=1 style=dashed]
	"numpy.lib.tile" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.tile" [color=purple penwidth=1 style=dashed]
	"numpy.lib.trapz" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.trapz" [color=purple penwidth=1 style=dashed]
	"numpy.lib.tri" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.tri" [color=purple penwidth=1 style=dashed]
	"numpy.lib.tril" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.tril" [color=purple penwidth=1 style=dashed]
	"numpy.lib.tril_indices" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.tril_indices" [color=purple penwidth=1 style=dashed]
	"numpy.lib.tril_indices_from" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.tril_indices_from" [color=purple penwidth=1 style=dashed]
	"numpy.lib.trim_zeros" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.trim_zeros" [color=purple penwidth=1 style=dashed]
	"numpy.lib.triu" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.triu" [color=purple penwidth=1 style=dashed]
	"numpy.lib.triu_indices" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.triu_indices" [color=purple penwidth=1 style=dashed]
	"numpy.lib.triu_indices_from" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.triu_indices_from" [color=purple penwidth=1 style=dashed]
	"numpy.lib.typename" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.typename" [color=purple penwidth=1 style=dashed]
	"numpy.lib.union1d" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.union1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.unique" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.unique" [color=purple penwidth=1 style=dashed]
	"numpy.lib.unwrap" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.unwrap" [color=purple penwidth=1 style=dashed]
	"numpy.lib.vander" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.vander" [color=purple penwidth=1 style=dashed]
	"numpy.lib.vsplit" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.vsplit" [color=purple penwidth=1 style=dashed]
	"numpy.lib.who" [color=purple fontsize=16 shape=none]
		"numpy.lib-functions" -> "numpy.lib.who" [color=purple penwidth=1 style=dashed]
	"numpy.lib-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib" -> "numpy.lib-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.__path__" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.__path__" [color=black penwidth=1 style=dashed]
	"numpy.lib.__version__" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.__version__" [color=black penwidth=1 style=dashed]
	"numpy.lib.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.bench" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.bench" [color=black penwidth=1 style=dashed]
	"numpy.lib.c_" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.c_" [color=black penwidth=1 style=dashed]
	"numpy.lib.division" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_exp" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.index_exp" [color=black penwidth=1 style=dashed]
	"numpy.lib.mgrid" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.mgrid" [color=black penwidth=1 style=dashed]
	"numpy.lib.ogrid" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.ogrid" [color=black penwidth=1 style=dashed]
	"numpy.lib.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.r_" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.r_" [color=black penwidth=1 style=dashed]
	"numpy.lib.s_" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.s_" [color=black penwidth=1 style=dashed]
	"numpy.lib.test" [color=black fontsize=16 shape=none]
		"numpy.lib-nofta" -> "numpy.lib.test" [color=black penwidth=1 style=dashed]
	"numpy.lib.nanfunctions-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.nanfunctions" -> "numpy.lib.nanfunctions-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.nanfunctions-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.nanfunctions" -> "numpy.lib.nanfunctions-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.nanfunctions-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions" -> "numpy.lib.nanfunctions-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions._copyto" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions._copyto" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions._divide_by_count" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions._divide_by_count" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions._nanmedian" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions._nanmedian" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions._nanmedian1d" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions._nanmedian1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions._nanmedian_small" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions._nanmedian_small" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions._nanpercentile" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions._nanpercentile" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions._nanpercentile1d" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions._nanpercentile1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions._replace_nan" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions._replace_nan" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions._ureduce" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions._ureduce" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.nanargmax" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions.nanargmax" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.nanargmin" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions.nanargmin" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.nanmax" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions.nanmax" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.nanmean" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions.nanmean" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.nanmedian" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions.nanmedian" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.nanmin" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions.nanmin" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.nanpercentile" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions.nanpercentile" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.nanprod" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions.nanprod" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.nanstd" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions.nanstd" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.nansum" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions.nansum" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.nanvar" [color=purple fontsize=16 shape=none]
		"numpy.lib.nanfunctions-functions" -> "numpy.lib.nanfunctions.nanvar" [color=purple penwidth=1 style=dashed]
	"numpy.lib.nanfunctions-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.nanfunctions" -> "numpy.lib.nanfunctions-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.nanfunctions-nofta" -> "numpy.lib.nanfunctions.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.nanfunctions-nofta" -> "numpy.lib.nanfunctions.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.nanfunctions-nofta" -> "numpy.lib.nanfunctions.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.nanfunctions-nofta" -> "numpy.lib.nanfunctions.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.nanfunctions-nofta" -> "numpy.lib.nanfunctions.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.nanfunctions-nofta" -> "numpy.lib.nanfunctions.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.nanfunctions-nofta" -> "numpy.lib.nanfunctions.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.division" [color=black fontsize=16 shape=none]
		"numpy.lib.nanfunctions-nofta" -> "numpy.lib.nanfunctions.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.nanfunctions.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.nanfunctions-nofta" -> "numpy.lib.nanfunctions.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.numpy-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.format.numpy" -> "numpy.lib.format.numpy-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.format.numpy-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.format.numpy" -> "numpy.lib.format.numpy-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.format.numpy-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.format.numpy" -> "numpy.lib.format.numpy-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.numpy-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.format.numpy" -> "numpy.lib.format.numpy-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.pu-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.pu" -> "numpy.polynomial.hermite_e.pu-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.pu-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.pu" -> "numpy.polynomial.hermite_e.pu-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.pu-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.pu" -> "numpy.polynomial.hermite_e.pu-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.pu-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.pu" -> "numpy.polynomial.hermite_e.pu-nofta" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.linalg.linalg.warnings" -> "numpy.linalg.linalg.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.linalg.linalg.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg.warnings" -> "numpy.linalg.linalg.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg.warnings" -> "numpy.linalg.linalg.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg.warnings" -> "numpy.linalg.linalg.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base" -> "numpy.lib.function_base-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base._insert" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base._insert" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.add_docstring" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.add_docstring" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.add_newdoc_ufunc" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.add_newdoc_ufunc" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.arange" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.arange" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.array" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.array" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.bincount" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.bincount" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.compiled_interp" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.compiled_interp" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.concatenate" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.concatenate" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.digitize" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.digitize" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.dot" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.dot" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.empty" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.empty" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.empty_like" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.empty_like" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.frompyfunc" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.frompyfunc" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.where" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.where" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.zeros" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base-builtins" -> "numpy.lib.function_base.zeros" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base" -> "numpy.lib.function_base-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.basestring" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base-classes" -> "numpy.lib.function_base.basestring" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.integer" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base-classes" -> "numpy.lib.function_base.integer" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.intp" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base-classes" -> "numpy.lib.function_base.intp" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.long" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base-classes" -> "numpy.lib.function_base.long" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.ndarray" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base-classes" -> "numpy.lib.function_base.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.number" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base-classes" -> "numpy.lib.function_base.number" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.range" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base-classes" -> "numpy.lib.function_base.range" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.vectorize" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base-classes" -> "numpy.lib.function_base.vectorize" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base" -> "numpy.lib.function_base-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._chbevl" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._chbevl" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._hist_bin_auto" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._hist_bin_auto" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._hist_bin_doane" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._hist_bin_doane" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._hist_bin_fd" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._hist_bin_fd" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._hist_bin_rice" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._hist_bin_rice" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._hist_bin_scott" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._hist_bin_scott" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._hist_bin_sqrt" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._hist_bin_sqrt" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._hist_bin_sturges" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._hist_bin_sturges" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._i0_1" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._i0_1" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._i0_2" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._i0_2" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._median" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._median" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._percentile" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._percentile" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base._ureduce" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base._ureduce" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.add_newdoc" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.add_newdoc" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.angle" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.angle" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.any" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.any" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.append" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.append" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.around" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.around" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.asarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.asarray_chkfinite" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.asarray_chkfinite" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.atleast_1d" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.atleast_1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.atleast_2d" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.atleast_2d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.average" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.average" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.bartlett" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.bartlett" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.blackman" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.blackman" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.copy" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.copy" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.corrcoef" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.corrcoef" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.cov" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.cov" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.delete" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.delete" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.deprecate" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.deprecate" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.diag" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.diag" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.diff" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.diff" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.disp" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.disp" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.extract" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.extract" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.gradient" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.gradient" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.hamming" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.hamming" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.hanning" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.hanning" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.histogram" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.histogram" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.histogramdd" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.histogramdd" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.i0" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.i0" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.insert" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.insert" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.interp" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.interp" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.isscalar" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.isscalar" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.iterable" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.iterable" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.kaiser" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.kaiser" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.linspace" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.linspace" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.mean" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.mean" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.median" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.median" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.meshgrid" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.meshgrid" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.msort" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.msort" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.nonzero" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.nonzero" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.ones" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.ones" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.partition" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.partition" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.percentile" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.percentile" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.piecewise" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.piecewise" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.place" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.place" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.ravel" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.ravel" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.select" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.select" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.sinc" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.sinc" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.sort" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.sort" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.sort_complex" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.sort_complex" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.sum" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.sum" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.take" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.take" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.trapz" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.trapz" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.trim_zeros" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.trim_zeros" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.unique" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.unique" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.unwrap" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base-functions" -> "numpy.lib.function_base.unwrap" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base" -> "numpy.lib.function_base-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base._hist_bin_selectors" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base._hist_bin_selectors" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base._i0A" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base._i0A" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base._i0B" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base._i0B" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.add" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.add" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.arctan2" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.arctan2" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.ceil" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.ceil" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.cos" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.cos" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.division" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.exp" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.exp" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.floor" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.floor" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.less_equal" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.less_equal" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.log10" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.log10" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.mod" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.mod" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.multiply" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.multiply" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.pi" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.pi" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.sin" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.sin" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.sqrt" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.sqrt" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.typecodes" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base-nofta" -> "numpy.lib.function_base.typecodes" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.ctypeslib.sys" -> "numpy.ctypeslib.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ctypeslib.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib.sys" -> "numpy.ctypeslib.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib.sys" -> "numpy.ctypeslib.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib.sys" -> "numpy.ctypeslib.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.itertools-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio.itertools" -> "numpy.lib.npyio.itertools-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio.itertools-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio.itertools" -> "numpy.lib.npyio.itertools-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.itertools-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio.itertools" -> "numpy.lib.npyio.itertools-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.itertools-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio.itertools" -> "numpy.lib.npyio.itertools-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numeric.sys" -> "numpy.core.numeric.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric.sys" -> "numpy.core.numeric.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric.sys" -> "numpy.core.numeric.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numeric.sys" -> "numpy.core.numeric.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.npyio.format-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.npyio.format" -> "numpy.lib.npyio.format-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.npyio.format-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.npyio.format" -> "numpy.lib.npyio.format-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.npyio.format-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.npyio.format" -> "numpy.lib.npyio.format-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.npyio.format-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.npyio.format" -> "numpy.lib.npyio.format-nofta" [color=black penwidth=1 style=dashed]
	"numpy.math-builtins" [color=red fontsize=16 shape=none]
		"numpy.math" -> "numpy.math-builtins" [color=red penwidth=1 style=dashed]
	"numpy.math-classes" [color=gold fontsize=16 shape=none]
		"numpy.math" -> "numpy.math-classes" [color=gold penwidth=1 style=dashed]
	"numpy.math-functions" [color=purple fontsize=16 shape=none]
		"numpy.math" -> "numpy.math-functions" [color=purple penwidth=1 style=dashed]
	"numpy.math-nofta" [color=black fontsize=16 shape=none]
		"numpy.math" -> "numpy.math-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.la-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.la" -> "numpy.polynomial.chebyshev.la-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.la-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.la" -> "numpy.polynomial.chebyshev.la-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.la-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.la" -> "numpy.polynomial.chebyshev.la-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.chebyshev.la-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.chebyshev.la" -> "numpy.polynomial.chebyshev.la-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.pickle-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.format.pickle" -> "numpy.lib.format.pickle-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.format.pickle-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.format.pickle" -> "numpy.lib.format.pickle-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.format.pickle-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.format.pickle" -> "numpy.lib.format.pickle-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.pickle-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.format.pickle" -> "numpy.lib.format.pickle-nofta" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k-builtins" [color=red fontsize=16 shape=none]
		"numpy.compat.py3k" -> "numpy.compat.py3k-builtins" [color=red penwidth=1 style=dashed]
	"numpy.compat.py3k-classes" [color=gold fontsize=16 shape=none]
		"numpy.compat.py3k" -> "numpy.compat.py3k-classes" [color=gold penwidth=1 style=dashed]
	"numpy.compat.py3k.asbytes" [color=gold fontsize=16 shape=none]
		"numpy.compat.py3k-classes" -> "numpy.compat.py3k.asbytes" [color=gold penwidth=1 style=dashed]
	"numpy.compat.py3k.asstr" [color=gold fontsize=16 shape=none]
		"numpy.compat.py3k-classes" -> "numpy.compat.py3k.asstr" [color=gold penwidth=1 style=dashed]
	"numpy.compat.py3k.basestring" [color=gold fontsize=16 shape=none]
		"numpy.compat.py3k-classes" -> "numpy.compat.py3k.basestring" [color=gold penwidth=1 style=dashed]
	"numpy.compat.py3k.bytes" [color=gold fontsize=16 shape=none]
		"numpy.compat.py3k-classes" -> "numpy.compat.py3k.bytes" [color=gold penwidth=1 style=dashed]
	"numpy.compat.py3k.long" [color=gold fontsize=16 shape=none]
		"numpy.compat.py3k-classes" -> "numpy.compat.py3k.long" [color=gold penwidth=1 style=dashed]
	"numpy.compat.py3k.unicode" [color=gold fontsize=16 shape=none]
		"numpy.compat.py3k-classes" -> "numpy.compat.py3k.unicode" [color=gold penwidth=1 style=dashed]
	"numpy.compat.py3k-functions" [color=purple fontsize=16 shape=none]
		"numpy.compat.py3k" -> "numpy.compat.py3k-functions" [color=purple penwidth=1 style=dashed]
	"numpy.compat.py3k.asbytes_nested" [color=purple fontsize=16 shape=none]
		"numpy.compat.py3k-functions" -> "numpy.compat.py3k.asbytes_nested" [color=purple penwidth=1 style=dashed]
	"numpy.compat.py3k.asunicode" [color=purple fontsize=16 shape=none]
		"numpy.compat.py3k-functions" -> "numpy.compat.py3k.asunicode" [color=purple penwidth=1 style=dashed]
	"numpy.compat.py3k.asunicode_nested" [color=purple fontsize=16 shape=none]
		"numpy.compat.py3k-functions" -> "numpy.compat.py3k.asunicode_nested" [color=purple penwidth=1 style=dashed]
	"numpy.compat.py3k.getexception" [color=purple fontsize=16 shape=none]
		"numpy.compat.py3k-functions" -> "numpy.compat.py3k.getexception" [color=purple penwidth=1 style=dashed]
	"numpy.compat.py3k.isfileobj" [color=purple fontsize=16 shape=none]
		"numpy.compat.py3k-functions" -> "numpy.compat.py3k.isfileobj" [color=purple penwidth=1 style=dashed]
	"numpy.compat.py3k.npy_load_module" [color=purple fontsize=16 shape=none]
		"numpy.compat.py3k-functions" -> "numpy.compat.py3k.npy_load_module" [color=purple penwidth=1 style=dashed]
	"numpy.compat.py3k.open_latin1" [color=purple fontsize=16 shape=none]
		"numpy.compat.py3k-functions" -> "numpy.compat.py3k.open_latin1" [color=purple penwidth=1 style=dashed]
	"numpy.compat.py3k.sixu" [color=purple fontsize=16 shape=none]
		"numpy.compat.py3k-functions" -> "numpy.compat.py3k.sixu" [color=purple penwidth=1 style=dashed]
	"numpy.compat.py3k-nofta" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k" -> "numpy.compat.py3k-nofta" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k.__all__" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k-nofta" -> "numpy.compat.py3k.__all__" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k-nofta" -> "numpy.compat.py3k.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k.__doc__" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k-nofta" -> "numpy.compat.py3k.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k.__file__" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k-nofta" -> "numpy.compat.py3k.__file__" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k.__name__" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k-nofta" -> "numpy.compat.py3k.__name__" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k.__package__" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k-nofta" -> "numpy.compat.py3k.__package__" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k-nofta" -> "numpy.compat.py3k.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k.division" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k-nofta" -> "numpy.compat.py3k.division" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k.integer_types" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k-nofta" -> "numpy.compat.py3k.integer_types" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k.print_function" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k-nofta" -> "numpy.compat.py3k.print_function" [color=black penwidth=1 style=dashed]
	"numpy.compat.py3k.strchar" [color=black fontsize=16 shape=none]
		"numpy.compat.py3k-nofta" -> "numpy.compat.py3k.strchar" [color=black penwidth=1 style=dashed]
	"numpy.lib.shape_base-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.shape_base" -> "numpy.lib.shape_base-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.shape_base.array" [color=red fontsize=16 shape=none]
		"numpy.lib.shape_base-builtins" -> "numpy.lib.shape_base.array" [color=red penwidth=1 style=dashed]
	"numpy.lib.shape_base.concatenate" [color=red fontsize=16 shape=none]
		"numpy.lib.shape_base-builtins" -> "numpy.lib.shape_base.concatenate" [color=red penwidth=1 style=dashed]
	"numpy.lib.shape_base.zeros" [color=red fontsize=16 shape=none]
		"numpy.lib.shape_base-builtins" -> "numpy.lib.shape_base.zeros" [color=red penwidth=1 style=dashed]
	"numpy.lib.shape_base-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.shape_base" -> "numpy.lib.shape_base-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.shape_base-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base" -> "numpy.lib.shape_base-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base._replace_zero_by_x_arrays" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base._replace_zero_by_x_arrays" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.apply_along_axis" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.apply_along_axis" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.apply_over_axes" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.apply_over_axes" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.array_split" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.array_split" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.asarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.atleast_3d" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.atleast_3d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.column_stack" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.column_stack" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.dsplit" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.dsplit" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.dstack" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.dstack" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.expand_dims" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.expand_dims" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.get_array_prepare" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.get_array_prepare" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.get_array_wrap" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.get_array_wrap" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.hsplit" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.hsplit" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.isscalar" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.isscalar" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.kron" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.kron" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.outer" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.outer" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.product" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.product" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.reshape" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.reshape" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.row_stack" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.row_stack" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.split" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.split" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.tile" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.tile" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.vsplit" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.vsplit" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base.vstack" [color=purple fontsize=16 shape=none]
		"numpy.lib.shape_base-functions" -> "numpy.lib.shape_base.vstack" [color=purple penwidth=1 style=dashed]
	"numpy.lib.shape_base-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.shape_base" -> "numpy.lib.shape_base-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.shape_base.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.shape_base-nofta" -> "numpy.lib.shape_base.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.shape_base.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.shape_base-nofta" -> "numpy.lib.shape_base.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.shape_base.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.shape_base-nofta" -> "numpy.lib.shape_base.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.shape_base.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.shape_base-nofta" -> "numpy.lib.shape_base.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.shape_base.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.shape_base-nofta" -> "numpy.lib.shape_base.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.shape_base.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.shape_base-nofta" -> "numpy.lib.shape_base.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.shape_base.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.shape_base-nofta" -> "numpy.lib.shape_base.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.shape_base.division" [color=black fontsize=16 shape=none]
		"numpy.lib.shape_base-nofta" -> "numpy.lib.shape_base.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.shape_base.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.shape_base-nofta" -> "numpy.lib.shape_base.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.polynomial" -> "numpy.lib.polynomial-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.polynomial.array" [color=red fontsize=16 shape=none]
		"numpy.lib.polynomial-builtins" -> "numpy.lib.polynomial.array" [color=red penwidth=1 style=dashed]
	"numpy.lib.polynomial.dot" [color=red fontsize=16 shape=none]
		"numpy.lib.polynomial-builtins" -> "numpy.lib.polynomial.dot" [color=red penwidth=1 style=dashed]
	"numpy.lib.polynomial-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.polynomial" -> "numpy.lib.polynomial-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.polynomial.RankWarning" [color=gold fontsize=16 shape=none]
		"numpy.lib.polynomial-classes" -> "numpy.lib.polynomial.RankWarning" [color=gold penwidth=1 style=dashed]
	"numpy.lib.polynomial.finfo" [color=gold fontsize=16 shape=none]
		"numpy.lib.polynomial-classes" -> "numpy.lib.polynomial.finfo" [color=gold penwidth=1 style=dashed]
	"numpy.lib.polynomial.poly1d" [color=gold fontsize=16 shape=none]
		"numpy.lib.polynomial-classes" -> "numpy.lib.polynomial.poly1d" [color=gold penwidth=1 style=dashed]
	"numpy.lib.polynomial-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial" -> "numpy.lib.polynomial-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial._raise_power" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial._raise_power" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.atleast_1d" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.atleast_1d" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.diag" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.diag" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.eigvals" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.eigvals" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.hstack" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.hstack" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.imag" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.imag" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.inv" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.inv" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.iscomplex" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.iscomplex" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.isscalar" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.isscalar" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.lstsq" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.lstsq" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.mintypecode" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.mintypecode" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.ones" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.ones" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.poly" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.poly" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.polyadd" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.polyadd" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.polyder" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.polyder" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.polydiv" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.polydiv" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.polyfit" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.polyfit" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.polyint" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.polyint" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.polymul" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.polymul" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.polysub" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.polysub" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.polyval" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.polyval" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.real" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.real" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.roots" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.roots" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.sort_complex" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.sort_complex" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.trim_zeros" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.trim_zeros" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial.vander" [color=purple fontsize=16 shape=none]
		"numpy.lib.polynomial-functions" -> "numpy.lib.polynomial.vander" [color=purple penwidth=1 style=dashed]
	"numpy.lib.polynomial-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial" -> "numpy.lib.polynomial-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial-nofta" -> "numpy.lib.polynomial.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial-nofta" -> "numpy.lib.polynomial.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial-nofta" -> "numpy.lib.polynomial.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial-nofta" -> "numpy.lib.polynomial.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial-nofta" -> "numpy.lib.polynomial.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial-nofta" -> "numpy.lib.polynomial.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial._poly_mat" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial-nofta" -> "numpy.lib.polynomial._poly_mat" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.abs" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial-nofta" -> "numpy.lib.polynomial.abs" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial-nofta" -> "numpy.lib.polynomial.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.division" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial-nofta" -> "numpy.lib.polynomial.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.polynomial.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.polynomial-nofta" -> "numpy.lib.polynomial.print_function" [color=black penwidth=1 style=dashed]
	"numpy.compat-builtins" [color=red fontsize=16 shape=none]
		"numpy.compat" -> "numpy.compat-builtins" [color=red penwidth=1 style=dashed]
	"numpy.compat-classes" [color=gold fontsize=16 shape=none]
		"numpy.compat" -> "numpy.compat-classes" [color=gold penwidth=1 style=dashed]
	"numpy.compat.asbytes" [color=gold fontsize=16 shape=none]
		"numpy.compat-classes" -> "numpy.compat.asbytes" [color=gold penwidth=1 style=dashed]
	"numpy.compat.asstr" [color=gold fontsize=16 shape=none]
		"numpy.compat-classes" -> "numpy.compat.asstr" [color=gold penwidth=1 style=dashed]
	"numpy.compat.basestring" [color=gold fontsize=16 shape=none]
		"numpy.compat-classes" -> "numpy.compat.basestring" [color=gold penwidth=1 style=dashed]
	"numpy.compat.bytes" [color=gold fontsize=16 shape=none]
		"numpy.compat-classes" -> "numpy.compat.bytes" [color=gold penwidth=1 style=dashed]
	"numpy.compat.long" [color=gold fontsize=16 shape=none]
		"numpy.compat-classes" -> "numpy.compat.long" [color=gold penwidth=1 style=dashed]
	"numpy.compat.unicode" [color=gold fontsize=16 shape=none]
		"numpy.compat-classes" -> "numpy.compat.unicode" [color=gold penwidth=1 style=dashed]
	"numpy.compat-functions" [color=purple fontsize=16 shape=none]
		"numpy.compat" -> "numpy.compat-functions" [color=purple penwidth=1 style=dashed]
	"numpy.compat.asbytes_nested" [color=purple fontsize=16 shape=none]
		"numpy.compat-functions" -> "numpy.compat.asbytes_nested" [color=purple penwidth=1 style=dashed]
	"numpy.compat.asunicode" [color=purple fontsize=16 shape=none]
		"numpy.compat-functions" -> "numpy.compat.asunicode" [color=purple penwidth=1 style=dashed]
	"numpy.compat.asunicode_nested" [color=purple fontsize=16 shape=none]
		"numpy.compat-functions" -> "numpy.compat.asunicode_nested" [color=purple penwidth=1 style=dashed]
	"numpy.compat.formatargspec" [color=purple fontsize=16 shape=none]
		"numpy.compat-functions" -> "numpy.compat.formatargspec" [color=purple penwidth=1 style=dashed]
	"numpy.compat.getargspec" [color=purple fontsize=16 shape=none]
		"numpy.compat-functions" -> "numpy.compat.getargspec" [color=purple penwidth=1 style=dashed]
	"numpy.compat.getexception" [color=purple fontsize=16 shape=none]
		"numpy.compat-functions" -> "numpy.compat.getexception" [color=purple penwidth=1 style=dashed]
	"numpy.compat.isfileobj" [color=purple fontsize=16 shape=none]
		"numpy.compat-functions" -> "numpy.compat.isfileobj" [color=purple penwidth=1 style=dashed]
	"numpy.compat.npy_load_module" [color=purple fontsize=16 shape=none]
		"numpy.compat-functions" -> "numpy.compat.npy_load_module" [color=purple penwidth=1 style=dashed]
	"numpy.compat.open_latin1" [color=purple fontsize=16 shape=none]
		"numpy.compat-functions" -> "numpy.compat.open_latin1" [color=purple penwidth=1 style=dashed]
	"numpy.compat.sixu" [color=purple fontsize=16 shape=none]
		"numpy.compat-functions" -> "numpy.compat.sixu" [color=purple penwidth=1 style=dashed]
	"numpy.compat-nofta" [color=black fontsize=16 shape=none]
		"numpy.compat" -> "numpy.compat-nofta" [color=black penwidth=1 style=dashed]
	"numpy.compat.__all__" [color=black fontsize=16 shape=none]
		"numpy.compat-nofta" -> "numpy.compat.__all__" [color=black penwidth=1 style=dashed]
	"numpy.compat.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.compat-nofta" -> "numpy.compat.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.compat.__doc__" [color=black fontsize=16 shape=none]
		"numpy.compat-nofta" -> "numpy.compat.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.compat.__file__" [color=black fontsize=16 shape=none]
		"numpy.compat-nofta" -> "numpy.compat.__file__" [color=black penwidth=1 style=dashed]
	"numpy.compat.__name__" [color=black fontsize=16 shape=none]
		"numpy.compat-nofta" -> "numpy.compat.__name__" [color=black penwidth=1 style=dashed]
	"numpy.compat.__package__" [color=black fontsize=16 shape=none]
		"numpy.compat-nofta" -> "numpy.compat.__package__" [color=black penwidth=1 style=dashed]
	"numpy.compat.__path__" [color=black fontsize=16 shape=none]
		"numpy.compat-nofta" -> "numpy.compat.__path__" [color=black penwidth=1 style=dashed]
	"numpy.compat.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.compat-nofta" -> "numpy.compat.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.compat.division" [color=black fontsize=16 shape=none]
		"numpy.compat-nofta" -> "numpy.compat.division" [color=black penwidth=1 style=dashed]
	"numpy.compat.integer_types" [color=black fontsize=16 shape=none]
		"numpy.compat-nofta" -> "numpy.compat.integer_types" [color=black penwidth=1 style=dashed]
	"numpy.compat.print_function" [color=black fontsize=16 shape=none]
		"numpy.compat-nofta" -> "numpy.compat.print_function" [color=black penwidth=1 style=dashed]
	"numpy.compat.strchar" [color=black fontsize=16 shape=none]
		"numpy.compat-nofta" -> "numpy.compat.strchar" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.hermite" -> "numpy.polynomial.hermite-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.hermite-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite" -> "numpy.polynomial.hermite-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite.ABCPolyBase" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite-classes" -> "numpy.polynomial.hermite.ABCPolyBase" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite.Hermite" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite-classes" -> "numpy.polynomial.hermite.Hermite" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite" -> "numpy.polynomial.hermite-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite._normed_hermite_n" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite._normed_hermite_n" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.herm2poly" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.herm2poly" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermadd" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermadd" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermcompanion" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermcompanion" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermder" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermder" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermdiv" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermdiv" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermfit" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermfit" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermfromroots" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermfromroots" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermgauss" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermgauss" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermgrid2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermgrid2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermgrid3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermgrid3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermint" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermint" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermline" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermline" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermmul" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermmul" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermmulx" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermmulx" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermpow" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermpow" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermroots" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermroots" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermsub" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermsub" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermtrim" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermtrim" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermval" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermval" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermval2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermval2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermval3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermval3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermvander" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermvander" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermvander2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermvander2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermvander3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermvander3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermweight" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.hermweight" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.poly2herm" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite-functions" -> "numpy.polynomial.hermite.poly2herm" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite" -> "numpy.polynomial.hermite-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.__all__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.__all__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.__doc__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.__file__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.__file__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.__name__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.__name__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.__package__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.__package__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.division" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.division" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermdomain" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.hermdomain" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermone" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.hermone" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermx" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.hermx" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.hermzero" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.hermzero" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.print_function" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite-nofta" -> "numpy.polynomial.hermite.print_function" [color=black penwidth=1 style=dashed]
	"numpy.emath-builtins" [color=red fontsize=16 shape=none]
		"numpy.emath" -> "numpy.emath-builtins" [color=red penwidth=1 style=dashed]
	"numpy.emath-classes" [color=gold fontsize=16 shape=none]
		"numpy.emath" -> "numpy.emath-classes" [color=gold penwidth=1 style=dashed]
	"numpy.emath-functions" [color=purple fontsize=16 shape=none]
		"numpy.emath" -> "numpy.emath-functions" [color=purple penwidth=1 style=dashed]
	"numpy.emath-nofta" [color=black fontsize=16 shape=none]
		"numpy.emath" -> "numpy.emath-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.np" -> "numpy.polynomial.hermite_e.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.np" -> "numpy.polynomial.hermite_e.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.np" -> "numpy.polynomial.hermite_e.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite_e.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite_e.np" -> "numpy.polynomial.hermite_e.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.fft.info-builtins" [color=red fontsize=16 shape=none]
		"numpy.fft.info" -> "numpy.fft.info-builtins" [color=red penwidth=1 style=dashed]
	"numpy.fft.info-classes" [color=gold fontsize=16 shape=none]
		"numpy.fft.info" -> "numpy.fft.info-classes" [color=gold penwidth=1 style=dashed]
	"numpy.fft.info-functions" [color=purple fontsize=16 shape=none]
		"numpy.fft.info" -> "numpy.fft.info-functions" [color=purple penwidth=1 style=dashed]
	"numpy.fft.info-nofta" [color=black fontsize=16 shape=none]
		"numpy.fft.info" -> "numpy.fft.info-nofta" [color=black penwidth=1 style=dashed]
	"numpy.fft.info.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.fft.info-nofta" -> "numpy.fft.info.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.fft.info.__doc__" [color=black fontsize=16 shape=none]
		"numpy.fft.info-nofta" -> "numpy.fft.info.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.fft.info.__file__" [color=black fontsize=16 shape=none]
		"numpy.fft.info-nofta" -> "numpy.fft.info.__file__" [color=black penwidth=1 style=dashed]
	"numpy.fft.info.__name__" [color=black fontsize=16 shape=none]
		"numpy.fft.info-nofta" -> "numpy.fft.info.__name__" [color=black penwidth=1 style=dashed]
	"numpy.fft.info.__package__" [color=black fontsize=16 shape=none]
		"numpy.fft.info-nofta" -> "numpy.fft.info.__package__" [color=black penwidth=1 style=dashed]
	"numpy.fft.info.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.fft.info-nofta" -> "numpy.fft.info.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.fft.info.depends" [color=black fontsize=16 shape=none]
		"numpy.fft.info-nofta" -> "numpy.fft.info.depends" [color=black penwidth=1 style=dashed]
	"numpy.fft.info.division" [color=black fontsize=16 shape=none]
		"numpy.fft.info-nofta" -> "numpy.fft.info.division" [color=black penwidth=1 style=dashed]
	"numpy.fft.info.print_function" [color=black fontsize=16 shape=none]
		"numpy.fft.info-nofta" -> "numpy.fft.info.print_function" [color=black penwidth=1 style=dashed]
	"numpy.core.records-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.records" -> "numpy.core.records-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.records-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.records" -> "numpy.core.records-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.records.bytes" [color=gold fontsize=16 shape=none]
		"numpy.core.records-classes" -> "numpy.core.records.bytes" [color=gold penwidth=1 style=dashed]
	"numpy.core.records.format_parser" [color=gold fontsize=16 shape=none]
		"numpy.core.records-classes" -> "numpy.core.records.format_parser" [color=gold penwidth=1 style=dashed]
	"numpy.core.records.long" [color=gold fontsize=16 shape=none]
		"numpy.core.records-classes" -> "numpy.core.records.long" [color=gold penwidth=1 style=dashed]
	"numpy.core.records.ndarray" [color=gold fontsize=16 shape=none]
		"numpy.core.records-classes" -> "numpy.core.records.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.core.records.recarray" [color=gold fontsize=16 shape=none]
		"numpy.core.records-classes" -> "numpy.core.records.recarray" [color=gold penwidth=1 style=dashed]
	"numpy.core.records.record" [color=gold fontsize=16 shape=none]
		"numpy.core.records-classes" -> "numpy.core.records.record" [color=gold penwidth=1 style=dashed]
	"numpy.core.records-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.records" -> "numpy.core.records-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.records.array" [color=purple fontsize=16 shape=none]
		"numpy.core.records-functions" -> "numpy.core.records.array" [color=purple penwidth=1 style=dashed]
	"numpy.core.records.find_duplicate" [color=purple fontsize=16 shape=none]
		"numpy.core.records-functions" -> "numpy.core.records.find_duplicate" [color=purple penwidth=1 style=dashed]
	"numpy.core.records.fromarrays" [color=purple fontsize=16 shape=none]
		"numpy.core.records-functions" -> "numpy.core.records.fromarrays" [color=purple penwidth=1 style=dashed]
	"numpy.core.records.fromfile" [color=purple fontsize=16 shape=none]
		"numpy.core.records-functions" -> "numpy.core.records.fromfile" [color=purple penwidth=1 style=dashed]
	"numpy.core.records.fromrecords" [color=purple fontsize=16 shape=none]
		"numpy.core.records-functions" -> "numpy.core.records.fromrecords" [color=purple penwidth=1 style=dashed]
	"numpy.core.records.fromstring" [color=purple fontsize=16 shape=none]
		"numpy.core.records-functions" -> "numpy.core.records.fromstring" [color=purple penwidth=1 style=dashed]
	"numpy.core.records.get_remaining_size" [color=purple fontsize=16 shape=none]
		"numpy.core.records-functions" -> "numpy.core.records.get_remaining_size" [color=purple penwidth=1 style=dashed]
	"numpy.core.records.isfileobj" [color=purple fontsize=16 shape=none]
		"numpy.core.records-functions" -> "numpy.core.records.isfileobj" [color=purple penwidth=1 style=dashed]
	"numpy.core.records-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.records" -> "numpy.core.records-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.records.__all__" [color=black fontsize=16 shape=none]
		"numpy.core.records-nofta" -> "numpy.core.records.__all__" [color=black penwidth=1 style=dashed]
	"numpy.core.records.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.core.records-nofta" -> "numpy.core.records.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.core.records.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.records-nofta" -> "numpy.core.records.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.records.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.records-nofta" -> "numpy.core.records.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.records.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.records-nofta" -> "numpy.core.records.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.records.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.records-nofta" -> "numpy.core.records.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.records._byteorderconv" [color=black fontsize=16 shape=none]
		"numpy.core.records-nofta" -> "numpy.core.records._byteorderconv" [color=black penwidth=1 style=dashed]
	"numpy.core.records.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.core.records-nofta" -> "numpy.core.records.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.core.records.division" [color=black fontsize=16 shape=none]
		"numpy.core.records-nofta" -> "numpy.core.records.division" [color=black penwidth=1 style=dashed]
	"numpy.core.records.numfmt" [color=black fontsize=16 shape=none]
		"numpy.core.records-nofta" -> "numpy.core.records.numfmt" [color=black penwidth=1 style=dashed]
	"numpy.core.records.print_function" [color=black fontsize=16 shape=none]
		"numpy.core.records-nofta" -> "numpy.core.records.print_function" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.polynomial" -> "numpy.polynomial.polynomial-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.polynomial-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polynomial" -> "numpy.polynomial.polynomial-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.ABCPolyBase" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polynomial-classes" -> "numpy.polynomial.polynomial.ABCPolyBase" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.Polynomial" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polynomial-classes" -> "numpy.polynomial.polynomial.Polynomial" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polynomial-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial" -> "numpy.polynomial.polynomial-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyadd" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyadd" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polycompanion" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polycompanion" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyder" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyder" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polydiv" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polydiv" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyfit" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyfit" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyfromroots" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyfromroots" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polygrid2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polygrid2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polygrid3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polygrid3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyint" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyint" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyline" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyline" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polymul" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polymul" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polymulx" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polymulx" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polypow" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polypow" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyroots" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyroots" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polysub" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polysub" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polytrim" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polytrim" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyval" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyval" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyval2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyval2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyval3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyval3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyvander" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyvander" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyvander2d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyvander2d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyvander3d" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial-functions" -> "numpy.polynomial.polynomial.polyvander3d" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial" -> "numpy.polynomial.polynomial-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.__all__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.__all__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.__doc__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.__file__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.__file__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.__name__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.__name__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.__package__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.__package__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.division" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.division" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polydomain" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.polydomain" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyone" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.polyone" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyx" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.polyx" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.polyzero" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.polyzero" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.print_function" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial-nofta" -> "numpy.polynomial.polynomial.print_function" [color=black penwidth=1 style=dashed]
	"numpy.core.fromnumeric.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.fromnumeric.warnings" -> "numpy.core.fromnumeric.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.fromnumeric.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.fromnumeric.warnings" -> "numpy.core.fromnumeric.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.fromnumeric.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.fromnumeric.warnings" -> "numpy.core.fromnumeric.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromnumeric.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.fromnumeric.warnings" -> "numpy.core.fromnumeric.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.laguerre.np" -> "numpy.polynomial.laguerre.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.laguerre.np" -> "numpy.polynomial.laguerre.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.laguerre.np" -> "numpy.polynomial.laguerre.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.laguerre.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.laguerre.np" -> "numpy.polynomial.laguerre.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numeric" -> "numpy.core.numeric-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.arange" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.arange" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.array" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.array" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.busday_count" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.busday_count" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.busday_offset" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.busday_offset" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.can_cast" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.can_cast" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.compare_chararrays" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.compare_chararrays" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.concatenate" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.concatenate" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.copyto" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.copyto" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.count_nonzero" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.count_nonzero" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.datetime_as_string" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.datetime_as_string" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.datetime_data" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.datetime_data" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.dot" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.dot" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.einsum" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.einsum" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.empty" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.empty" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.empty_like" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.empty_like" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.fastCopyAndTranspose" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.fastCopyAndTranspose" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.frombuffer" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.frombuffer" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.fromfile" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.fromfile" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.fromiter" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.fromiter" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.frompyfunc" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.frompyfunc" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.fromstring" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.fromstring" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.getbuffer" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.getbuffer" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.geterrobj" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.geterrobj" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.inner" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.inner" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.int_asbuffer" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.int_asbuffer" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.is_busday" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.is_busday" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.lexsort" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.lexsort" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.loads" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.loads" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.matmul" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.matmul" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.may_share_memory" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.may_share_memory" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.min_scalar_type" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.min_scalar_type" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.nested_iters" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.nested_iters" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.newbuffer" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.newbuffer" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.promote_types" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.promote_types" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.putmask" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.putmask" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.result_type" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.result_type" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.set_numeric_ops" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.set_numeric_ops" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.seterrobj" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.seterrobj" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.shares_memory" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.shares_memory" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.vdot" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.vdot" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.where" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.where" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.zeros" [color=red fontsize=16 shape=none]
		"numpy.core.numeric-builtins" -> "numpy.core.numeric.zeros" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric" -> "numpy.core.numeric-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.ComplexWarning" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.ComplexWarning" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.TooHardError" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.TooHardError" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric._unspecified" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric._unspecified" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.bool8" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.bool8" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.bool_" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.bool_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.broadcast" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.broadcast" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.busdaycalendar" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.busdaycalendar" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.byte" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.byte" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.bytes_" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.bytes_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.cdouble" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.cdouble" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.cfloat" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.cfloat" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.character" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.character" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.clongdouble" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.clongdouble" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.clongfloat" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.clongfloat" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.complex128" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.complex128" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.complex256" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.complex256" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.complex64" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.complex64" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.complex_" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.complex_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.complexfloating" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.complexfloating" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.csingle" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.csingle" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.datetime64" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.datetime64" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.double" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.double" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.dtype" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.dtype" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.errstate" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.errstate" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.flatiter" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.flatiter" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.flexible" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.flexible" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.float128" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.float128" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.float16" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.float16" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.float32" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.float32" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.float64" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.float64" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.float_" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.float_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.floating" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.floating" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.generic" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.generic" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.half" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.half" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.inexact" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.inexact" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.int0" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.int0" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.int16" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.int16" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.int32" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.int32" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.int64" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.int64" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.int8" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.int8" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.int_" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.int_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.intc" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.intc" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.integer" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.integer" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.intp" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.intp" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.longcomplex" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.longcomplex" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.longdouble" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.longdouble" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.longfloat" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.longfloat" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.longlong" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.longlong" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.ndarray" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.nditer" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.nditer" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.number" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.number" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.object0" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.object0" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.object_" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.object_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.short" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.short" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.signedinteger" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.signedinteger" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.single" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.single" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.singlecomplex" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.singlecomplex" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.str_" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.str_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.string0" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.string0" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.string_" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.string_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.timedelta64" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.timedelta64" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.ubyte" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.ubyte" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.ufunc" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.ufunc" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.uint" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.uint" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.uint0" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.uint0" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.uint16" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.uint16" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.uint32" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.uint32" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.uint64" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.uint64" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.uint8" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.uint8" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.uintc" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.uintc" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.uintp" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.uintp" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.ulonglong" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.ulonglong" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.unicode0" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.unicode0" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.unicode_" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.unicode_" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.unsignedinteger" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.unsignedinteger" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.ushort" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.ushort" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.void" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.void" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.void0" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric-classes" -> "numpy.core.numeric.void0" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric" -> "numpy.core.numeric-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric._maketup" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric._maketup" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric._mode_from_name" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric._mode_from_name" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric._move_axis_to_0" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric._move_axis_to_0" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric._setdef" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric._setdef" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric._validate_axis" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric._validate_axis" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.alen" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.alen" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.all" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.all" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.allclose" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.allclose" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.alltrue" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.alltrue" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.alterdot" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.alterdot" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.amax" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.amax" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.amin" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.amin" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.any" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.any" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.argmax" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.argmax" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.argmin" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.argmin" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.argpartition" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.argpartition" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.argsort" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.argsort" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.argwhere" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.argwhere" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.around" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.around" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.array2string" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.array2string" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.array_equal" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.array_equal" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.array_equiv" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.array_equiv" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.array_repr" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.array_repr" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.array_str" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.array_str" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.asarray" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.ascontiguousarray" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.ascontiguousarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.asfortranarray" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.asfortranarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.base_repr" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.base_repr" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.binary_repr" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.binary_repr" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.choose" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.choose" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.clip" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.clip" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.compress" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.compress" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.convolve" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.convolve" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.correlate" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.correlate" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.cross" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.cross" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.cumprod" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.cumprod" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.cumproduct" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.cumproduct" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.cumsum" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.cumsum" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.diagonal" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.diagonal" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.extend_all" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.extend_all" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.find_common_type" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.find_common_type" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.flatnonzero" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.flatnonzero" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.fromfunction" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.fromfunction" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.full" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.full" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.full_like" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.full_like" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.get_printoptions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.get_printoptions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.getbufsize" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.getbufsize" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.geterr" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.geterr" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.geterrcall" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.geterrcall" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.identity" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.identity" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.indices" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.indices" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.isclose" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.isclose" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.isfortran" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.isfortran" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.isscalar" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.isscalar" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.issctype" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.issctype" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.issubdtype" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.issubdtype" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.load" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.load" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.maximum_sctype" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.maximum_sctype" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.mean" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.mean" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.moveaxis" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.moveaxis" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.ndim" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.ndim" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.nonzero" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.nonzero" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.obj2sctype" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.obj2sctype" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.ones" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.ones" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.ones_like" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.ones_like" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.outer" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.outer" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.partition" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.partition" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.prod" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.prod" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.product" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.product" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.ptp" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.ptp" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.put" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.put" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.rank" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.rank" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.ravel" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.ravel" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.repeat" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.repeat" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.require" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.require" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.reshape" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.reshape" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.resize" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.resize" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.restoredot" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.restoredot" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.roll" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.roll" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.rollaxis" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.rollaxis" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.round_" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.round_" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.sctype2char" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.sctype2char" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.searchsorted" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.searchsorted" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.set_printoptions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.set_printoptions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.set_string_function" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.set_string_function" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.setbufsize" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.setbufsize" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.seterr" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.seterr" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.seterrcall" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.seterrcall" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.shape" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.shape" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.size" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.size" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.sometrue" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.sometrue" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.sort" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.sort" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.squeeze" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.squeeze" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.std" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.std" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.sum" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.sum" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.swapaxes" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.swapaxes" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.take" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.take" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.tensordot" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.tensordot" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.trace" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.trace" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.transpose" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.transpose" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.var" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.var" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.zeros_like" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric-functions" -> "numpy.core.numeric.zeros_like" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numeric" -> "numpy.core.numeric-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.ALLOW_THREADS" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.ALLOW_THREADS" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.BUFSIZE" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.BUFSIZE" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.CLIP" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.CLIP" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.ERR_CALL" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.ERR_CALL" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.ERR_DEFAULT" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.ERR_DEFAULT" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.ERR_IGNORE" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.ERR_IGNORE" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.ERR_LOG" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.ERR_LOG" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.ERR_PRINT" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.ERR_PRINT" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.ERR_RAISE" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.ERR_RAISE" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.ERR_WARN" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.ERR_WARN" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.FLOATING_POINT_SUPPORT" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.FLOATING_POINT_SUPPORT" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.FPE_DIVIDEBYZERO" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.FPE_DIVIDEBYZERO" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.FPE_INVALID" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.FPE_INVALID" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.FPE_OVERFLOW" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.FPE_OVERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.FPE_UNDERFLOW" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.FPE_UNDERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.False_" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.False_" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.Inf" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.Inf" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.Infinity" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.Infinity" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.MAXDIMS" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.MAXDIMS" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.MAY_SHARE_BOUNDS" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.MAY_SHARE_BOUNDS" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.MAY_SHARE_EXACT" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.MAY_SHARE_EXACT" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.NAN" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.NAN" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.NINF" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.NINF" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.NZERO" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.NZERO" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.NaN" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.NaN" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.PINF" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.PINF" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.PZERO" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.PZERO" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.RAISE" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.RAISE" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.SHIFT_DIVIDEBYZERO" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.SHIFT_DIVIDEBYZERO" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.SHIFT_INVALID" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.SHIFT_INVALID" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.SHIFT_OVERFLOW" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.SHIFT_OVERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.SHIFT_UNDERFLOW" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.SHIFT_UNDERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.ScalarType" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.ScalarType" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.True_" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.True_" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.UFUNC_BUFSIZE_DEFAULT" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.UFUNC_BUFSIZE_DEFAULT" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.UFUNC_PYVALS_NAME" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.UFUNC_PYVALS_NAME" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.WRAP" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.WRAP" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric._Unspecified" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric._Unspecified" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.__all__" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.__all__" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric._errdict" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric._errdict" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric._errdict_rev" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric._errdict_rev" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric._lkup" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric._lkup" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric._mode_from_name_dict" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric._mode_from_name_dict" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric._typelessdata" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric._typelessdata" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.absolute" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.absolute" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.add" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.add" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.arccos" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.arccos" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.arccosh" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.arccosh" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.arcsin" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.arcsin" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.arcsinh" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.arcsinh" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.arctan" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.arctan" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.arctan2" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.arctan2" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.arctanh" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.arctanh" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.bitwise_and" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.bitwise_and" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.bitwise_not" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.bitwise_not" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.bitwise_or" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.bitwise_or" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.bitwise_xor" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.bitwise_xor" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.cast" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.cast" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.cbrt" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.cbrt" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.ceil" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.ceil" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.conj" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.conj" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.conjugate" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.conjugate" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.copysign" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.copysign" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.cos" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.cos" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.cosh" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.cosh" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.deg2rad" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.deg2rad" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.degrees" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.degrees" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.divide" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.divide" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.division" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.division" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.e" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.e" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.equal" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.equal" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.euler_gamma" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.euler_gamma" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.exp" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.exp" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.exp2" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.exp2" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.expm1" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.expm1" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.fabs" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.fabs" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.floor" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.floor" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.floor_divide" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.floor_divide" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.fmax" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.fmax" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.fmin" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.fmin" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.fmod" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.fmod" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.frexp" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.frexp" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.greater" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.greater" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.greater_equal" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.greater_equal" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.hypot" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.hypot" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.inf" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.inf" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.infty" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.infty" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.invert" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.invert" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.isfinite" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.isfinite" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.isinf" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.isinf" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.isnan" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.isnan" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.ldexp" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.ldexp" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.left_shift" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.left_shift" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.less" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.less" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.less_equal" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.less_equal" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.little_endian" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.little_endian" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.log" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.log" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.log10" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.log10" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.log1p" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.log1p" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.log2" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.log2" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.logaddexp" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.logaddexp" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.logaddexp2" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.logaddexp2" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.logical_and" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.logical_and" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.logical_not" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.logical_not" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.logical_or" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.logical_or" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.logical_xor" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.logical_xor" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.maximum" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.maximum" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.minimum" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.minimum" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.mod" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.mod" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.modf" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.modf" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.multiply" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.multiply" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.nan" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.nan" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.nbytes" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.nbytes" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.negative" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.negative" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.newaxis" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.newaxis" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.nextafter" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.nextafter" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.not_equal" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.not_equal" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.pi" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.pi" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.power" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.power" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.print_function" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.print_function" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.rad2deg" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.rad2deg" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.radians" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.radians" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.reciprocal" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.reciprocal" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.remainder" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.remainder" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.right_shift" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.right_shift" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.rint" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.rint" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.sctypeDict" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.sctypeDict" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.sctypeNA" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.sctypeNA" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.sctypes" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.sctypes" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.sign" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.sign" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.signbit" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.signbit" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.sin" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.sin" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.sinh" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.sinh" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.spacing" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.spacing" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.sqrt" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.sqrt" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.square" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.square" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.subtract" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.subtract" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.tan" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.tan" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.tanh" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.tanh" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.true_divide" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.true_divide" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.trunc" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.trunc" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.typeDict" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.typeDict" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.typeNA" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.typeNA" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.typecodes" [color=black fontsize=16 shape=none]
		"numpy.core.numeric-nofta" -> "numpy.core.numeric.typecodes" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.la-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.legendre.la" -> "numpy.polynomial.legendre.la-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.legendre.la-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.legendre.la" -> "numpy.polynomial.legendre.la-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.legendre.la-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre.la" -> "numpy.polynomial.legendre.la-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.la-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre.la" -> "numpy.polynomial.legendre.la-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.defchararray" -> "numpy.core.defchararray-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.defchararray._len" [color=red fontsize=16 shape=none]
		"numpy.core.defchararray-builtins" -> "numpy.core.defchararray._len" [color=red penwidth=1 style=dashed]
	"numpy.core.defchararray._vec_string" [color=red fontsize=16 shape=none]
		"numpy.core.defchararray-builtins" -> "numpy.core.defchararray._vec_string" [color=red penwidth=1 style=dashed]
	"numpy.core.defchararray.compare_chararrays" [color=red fontsize=16 shape=none]
		"numpy.core.defchararray-builtins" -> "numpy.core.defchararray.compare_chararrays" [color=red penwidth=1 style=dashed]
	"numpy.core.defchararray.narray" [color=red fontsize=16 shape=none]
		"numpy.core.defchararray-builtins" -> "numpy.core.defchararray.narray" [color=red penwidth=1 style=dashed]
	"numpy.core.defchararray-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray" -> "numpy.core.defchararray-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray._bytes" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray-classes" -> "numpy.core.defchararray._bytes" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray._unicode" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray-classes" -> "numpy.core.defchararray._unicode" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray.asbytes" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray-classes" -> "numpy.core.defchararray.asbytes" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray.bool_" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray-classes" -> "numpy.core.defchararray.bool_" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray.character" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray-classes" -> "numpy.core.defchararray.character" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray.chararray" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray-classes" -> "numpy.core.defchararray.chararray" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray.integer" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray-classes" -> "numpy.core.defchararray.integer" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray.long" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray-classes" -> "numpy.core.defchararray.long" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray.ndarray" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray-classes" -> "numpy.core.defchararray.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray.object_" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray-classes" -> "numpy.core.defchararray.object_" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray.string_" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray-classes" -> "numpy.core.defchararray.string_" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray.unicode_" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray-classes" -> "numpy.core.defchararray.unicode_" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray" -> "numpy.core.defchararray-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray._clean_args" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray._clean_args" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray._get_num_chars" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray._get_num_chars" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray._to_string_or_unicode_array" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray._to_string_or_unicode_array" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray._use_unicode" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray._use_unicode" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.add" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.add" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.array" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.array" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.asarray" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.capitalize" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.capitalize" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.center" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.center" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.count" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.count" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.decode" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.decode" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.encode" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.encode" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.endswith" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.endswith" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.equal" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.equal" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.expandtabs" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.expandtabs" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.find" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.find" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.greater" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.greater" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.greater_equal" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.greater_equal" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.index" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.index" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.isalnum" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.isalnum" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.isalpha" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.isalpha" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.isdecimal" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.isdecimal" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.isdigit" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.isdigit" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.islower" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.islower" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.isnumeric" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.isnumeric" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.isspace" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.isspace" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.istitle" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.istitle" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.isupper" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.isupper" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.join" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.join" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.less" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.less" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.less_equal" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.less_equal" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.ljust" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.ljust" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.lower" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.lower" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.lstrip" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.lstrip" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.mod" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.mod" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.multiply" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.multiply" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.not_equal" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.not_equal" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.partition" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.partition" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.replace" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.replace" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.rfind" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.rfind" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.rindex" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.rindex" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.rjust" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.rjust" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.rpartition" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.rpartition" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.rsplit" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.rsplit" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.rstrip" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.rstrip" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.split" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.split" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.splitlines" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.splitlines" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.startswith" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.startswith" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.str_len" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.str_len" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.strip" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.strip" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.swapcase" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.swapcase" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.title" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.title" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.translate" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.translate" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.upper" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.upper" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.zfill" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray-functions" -> "numpy.core.defchararray.zfill" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray" -> "numpy.core.defchararray-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray.__all__" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray-nofta" -> "numpy.core.defchararray.__all__" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray-nofta" -> "numpy.core.defchararray.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray-nofta" -> "numpy.core.defchararray.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray.__file__" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray-nofta" -> "numpy.core.defchararray.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray.__name__" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray-nofta" -> "numpy.core.defchararray.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray.__package__" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray-nofta" -> "numpy.core.defchararray.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray._globalvar" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray-nofta" -> "numpy.core.defchararray._globalvar" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray-nofta" -> "numpy.core.defchararray.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray.division" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray-nofta" -> "numpy.core.defchararray.division" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray.print_function" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray-nofta" -> "numpy.core.defchararray.print_function" [color=black penwidth=1 style=dashed]
	"numpy.ctypeslib.ct-builtins" [color=red fontsize=16 shape=none]
		"numpy.ctypeslib.ct" -> "numpy.ctypeslib.ct-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ctypeslib.ct-classes" [color=gold fontsize=16 shape=none]
		"numpy.ctypeslib.ct" -> "numpy.ctypeslib.ct-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ctypeslib.ct-functions" [color=purple fontsize=16 shape=none]
		"numpy.ctypeslib.ct" -> "numpy.ctypeslib.ct-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ctypeslib.ct-nofta" [color=black fontsize=16 shape=none]
		"numpy.ctypeslib.ct" -> "numpy.ctypeslib.ct-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core-builtins" [color=red fontsize=16 shape=none]
		"numpy.core" -> "numpy.core-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.arange" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.arange" [color=red penwidth=1 style=dashed]
	"numpy.core.array" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.array" [color=red penwidth=1 style=dashed]
	"numpy.core.busday_count" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.busday_count" [color=red penwidth=1 style=dashed]
	"numpy.core.busday_offset" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.busday_offset" [color=red penwidth=1 style=dashed]
	"numpy.core.can_cast" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.can_cast" [color=red penwidth=1 style=dashed]
	"numpy.core.compare_chararrays" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.compare_chararrays" [color=red penwidth=1 style=dashed]
	"numpy.core.concatenate" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.concatenate" [color=red penwidth=1 style=dashed]
	"numpy.core.copyto" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.copyto" [color=red penwidth=1 style=dashed]
	"numpy.core.count_nonzero" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.count_nonzero" [color=red penwidth=1 style=dashed]
	"numpy.core.datetime_as_string" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.datetime_as_string" [color=red penwidth=1 style=dashed]
	"numpy.core.datetime_data" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.datetime_data" [color=red penwidth=1 style=dashed]
	"numpy.core.dot" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.dot" [color=red penwidth=1 style=dashed]
	"numpy.core.einsum" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.einsum" [color=red penwidth=1 style=dashed]
	"numpy.core.empty" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.empty" [color=red penwidth=1 style=dashed]
	"numpy.core.empty_like" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.empty_like" [color=red penwidth=1 style=dashed]
	"numpy.core.fastCopyAndTranspose" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.fastCopyAndTranspose" [color=red penwidth=1 style=dashed]
	"numpy.core.frombuffer" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.frombuffer" [color=red penwidth=1 style=dashed]
	"numpy.core.fromfile" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.fromfile" [color=red penwidth=1 style=dashed]
	"numpy.core.fromiter" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.fromiter" [color=red penwidth=1 style=dashed]
	"numpy.core.frompyfunc" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.frompyfunc" [color=red penwidth=1 style=dashed]
	"numpy.core.fromstring" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.fromstring" [color=red penwidth=1 style=dashed]
	"numpy.core.getbuffer" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.getbuffer" [color=red penwidth=1 style=dashed]
	"numpy.core.geterrobj" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.geterrobj" [color=red penwidth=1 style=dashed]
	"numpy.core.inner" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.inner" [color=red penwidth=1 style=dashed]
	"numpy.core.int_asbuffer" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.int_asbuffer" [color=red penwidth=1 style=dashed]
	"numpy.core.is_busday" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.is_busday" [color=red penwidth=1 style=dashed]
	"numpy.core.lexsort" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.lexsort" [color=red penwidth=1 style=dashed]
	"numpy.core.loads" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.loads" [color=red penwidth=1 style=dashed]
	"numpy.core.matmul" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.matmul" [color=red penwidth=1 style=dashed]
	"numpy.core.may_share_memory" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.may_share_memory" [color=red penwidth=1 style=dashed]
	"numpy.core.min_scalar_type" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.min_scalar_type" [color=red penwidth=1 style=dashed]
	"numpy.core.nested_iters" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.nested_iters" [color=red penwidth=1 style=dashed]
	"numpy.core.newbuffer" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.newbuffer" [color=red penwidth=1 style=dashed]
	"numpy.core.promote_types" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.promote_types" [color=red penwidth=1 style=dashed]
	"numpy.core.putmask" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.putmask" [color=red penwidth=1 style=dashed]
	"numpy.core.result_type" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.result_type" [color=red penwidth=1 style=dashed]
	"numpy.core.set_numeric_ops" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.set_numeric_ops" [color=red penwidth=1 style=dashed]
	"numpy.core.seterrobj" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.seterrobj" [color=red penwidth=1 style=dashed]
	"numpy.core.shares_memory" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.shares_memory" [color=red penwidth=1 style=dashed]
	"numpy.core.vdot" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.vdot" [color=red penwidth=1 style=dashed]
	"numpy.core.where" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.where" [color=red penwidth=1 style=dashed]
	"numpy.core.zeros" [color=red fontsize=16 shape=none]
		"numpy.core-builtins" -> "numpy.core.zeros" [color=red penwidth=1 style=dashed]
	"numpy.core-classes" [color=gold fontsize=16 shape=none]
		"numpy.core" -> "numpy.core-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.ComplexWarning" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.ComplexWarning" [color=gold penwidth=1 style=dashed]
	"numpy.core.MachAr" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.MachAr" [color=gold penwidth=1 style=dashed]
	"numpy.core.TooHardError" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.TooHardError" [color=gold penwidth=1 style=dashed]
	"numpy.core.bool8" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.bool8" [color=gold penwidth=1 style=dashed]
	"numpy.core.bool_" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.bool_" [color=gold penwidth=1 style=dashed]
	"numpy.core.broadcast" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.broadcast" [color=gold penwidth=1 style=dashed]
	"numpy.core.busdaycalendar" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.busdaycalendar" [color=gold penwidth=1 style=dashed]
	"numpy.core.byte" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.byte" [color=gold penwidth=1 style=dashed]
	"numpy.core.bytes_" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.bytes_" [color=gold penwidth=1 style=dashed]
	"numpy.core.cdouble" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.cdouble" [color=gold penwidth=1 style=dashed]
	"numpy.core.cfloat" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.cfloat" [color=gold penwidth=1 style=dashed]
	"numpy.core.character" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.character" [color=gold penwidth=1 style=dashed]
	"numpy.core.chararray" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.chararray" [color=gold penwidth=1 style=dashed]
	"numpy.core.clongdouble" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.clongdouble" [color=gold penwidth=1 style=dashed]
	"numpy.core.clongfloat" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.clongfloat" [color=gold penwidth=1 style=dashed]
	"numpy.core.complex128" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.complex128" [color=gold penwidth=1 style=dashed]
	"numpy.core.complex256" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.complex256" [color=gold penwidth=1 style=dashed]
	"numpy.core.complex64" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.complex64" [color=gold penwidth=1 style=dashed]
	"numpy.core.complex_" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.complex_" [color=gold penwidth=1 style=dashed]
	"numpy.core.complexfloating" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.complexfloating" [color=gold penwidth=1 style=dashed]
	"numpy.core.csingle" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.csingle" [color=gold penwidth=1 style=dashed]
	"numpy.core.datetime64" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.datetime64" [color=gold penwidth=1 style=dashed]
	"numpy.core.double" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.double" [color=gold penwidth=1 style=dashed]
	"numpy.core.dtype" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.dtype" [color=gold penwidth=1 style=dashed]
	"numpy.core.errstate" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.errstate" [color=gold penwidth=1 style=dashed]
	"numpy.core.finfo" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.finfo" [color=gold penwidth=1 style=dashed]
	"numpy.core.flatiter" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.flatiter" [color=gold penwidth=1 style=dashed]
	"numpy.core.flexible" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.flexible" [color=gold penwidth=1 style=dashed]
	"numpy.core.float128" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.float128" [color=gold penwidth=1 style=dashed]
	"numpy.core.float16" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.float16" [color=gold penwidth=1 style=dashed]
	"numpy.core.float32" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.float32" [color=gold penwidth=1 style=dashed]
	"numpy.core.float64" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.float64" [color=gold penwidth=1 style=dashed]
	"numpy.core.float_" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.float_" [color=gold penwidth=1 style=dashed]
	"numpy.core.floating" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.floating" [color=gold penwidth=1 style=dashed]
	"numpy.core.format_parser" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.format_parser" [color=gold penwidth=1 style=dashed]
	"numpy.core.generic" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.generic" [color=gold penwidth=1 style=dashed]
	"numpy.core.half" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.half" [color=gold penwidth=1 style=dashed]
	"numpy.core.iinfo" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.iinfo" [color=gold penwidth=1 style=dashed]
	"numpy.core.inexact" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.inexact" [color=gold penwidth=1 style=dashed]
	"numpy.core.int0" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.int0" [color=gold penwidth=1 style=dashed]
	"numpy.core.int16" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.int16" [color=gold penwidth=1 style=dashed]
	"numpy.core.int32" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.int32" [color=gold penwidth=1 style=dashed]
	"numpy.core.int64" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.int64" [color=gold penwidth=1 style=dashed]
	"numpy.core.int8" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.int8" [color=gold penwidth=1 style=dashed]
	"numpy.core.int_" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.int_" [color=gold penwidth=1 style=dashed]
	"numpy.core.intc" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.intc" [color=gold penwidth=1 style=dashed]
	"numpy.core.integer" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.integer" [color=gold penwidth=1 style=dashed]
	"numpy.core.intp" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.intp" [color=gold penwidth=1 style=dashed]
	"numpy.core.longcomplex" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.longcomplex" [color=gold penwidth=1 style=dashed]
	"numpy.core.longdouble" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.longdouble" [color=gold penwidth=1 style=dashed]
	"numpy.core.longfloat" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.longfloat" [color=gold penwidth=1 style=dashed]
	"numpy.core.longlong" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.longlong" [color=gold penwidth=1 style=dashed]
	"numpy.core.memmap" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.memmap" [color=gold penwidth=1 style=dashed]
	"numpy.core.ndarray" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.core.nditer" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.nditer" [color=gold penwidth=1 style=dashed]
	"numpy.core.number" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.number" [color=gold penwidth=1 style=dashed]
	"numpy.core.object0" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.object0" [color=gold penwidth=1 style=dashed]
	"numpy.core.object_" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.object_" [color=gold penwidth=1 style=dashed]
	"numpy.core.recarray" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.recarray" [color=gold penwidth=1 style=dashed]
	"numpy.core.record" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.record" [color=gold penwidth=1 style=dashed]
	"numpy.core.short" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.short" [color=gold penwidth=1 style=dashed]
	"numpy.core.signedinteger" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.signedinteger" [color=gold penwidth=1 style=dashed]
	"numpy.core.single" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.single" [color=gold penwidth=1 style=dashed]
	"numpy.core.singlecomplex" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.singlecomplex" [color=gold penwidth=1 style=dashed]
	"numpy.core.str_" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.str_" [color=gold penwidth=1 style=dashed]
	"numpy.core.string0" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.string0" [color=gold penwidth=1 style=dashed]
	"numpy.core.string_" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.string_" [color=gold penwidth=1 style=dashed]
	"numpy.core.timedelta64" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.timedelta64" [color=gold penwidth=1 style=dashed]
	"numpy.core.ubyte" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.ubyte" [color=gold penwidth=1 style=dashed]
	"numpy.core.ufunc" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.ufunc" [color=gold penwidth=1 style=dashed]
	"numpy.core.uint" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.uint" [color=gold penwidth=1 style=dashed]
	"numpy.core.uint0" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.uint0" [color=gold penwidth=1 style=dashed]
	"numpy.core.uint16" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.uint16" [color=gold penwidth=1 style=dashed]
	"numpy.core.uint32" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.uint32" [color=gold penwidth=1 style=dashed]
	"numpy.core.uint64" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.uint64" [color=gold penwidth=1 style=dashed]
	"numpy.core.uint8" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.uint8" [color=gold penwidth=1 style=dashed]
	"numpy.core.uintc" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.uintc" [color=gold penwidth=1 style=dashed]
	"numpy.core.uintp" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.uintp" [color=gold penwidth=1 style=dashed]
	"numpy.core.ulonglong" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.ulonglong" [color=gold penwidth=1 style=dashed]
	"numpy.core.unicode0" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.unicode0" [color=gold penwidth=1 style=dashed]
	"numpy.core.unicode_" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.unicode_" [color=gold penwidth=1 style=dashed]
	"numpy.core.unsignedinteger" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.unsignedinteger" [color=gold penwidth=1 style=dashed]
	"numpy.core.ushort" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.ushort" [color=gold penwidth=1 style=dashed]
	"numpy.core.void" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.void" [color=gold penwidth=1 style=dashed]
	"numpy.core.void0" [color=gold fontsize=16 shape=none]
		"numpy.core-classes" -> "numpy.core.void0" [color=gold penwidth=1 style=dashed]
	"numpy.core-functions" [color=purple fontsize=16 shape=none]
		"numpy.core" -> "numpy.core-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core._numpy_tester" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core._numpy_tester" [color=purple penwidth=1 style=dashed]
	"numpy.core._ufunc_reconstruct" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core._ufunc_reconstruct" [color=purple penwidth=1 style=dashed]
	"numpy.core.alen" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.alen" [color=purple penwidth=1 style=dashed]
	"numpy.core.all" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.all" [color=purple penwidth=1 style=dashed]
	"numpy.core.allclose" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.allclose" [color=purple penwidth=1 style=dashed]
	"numpy.core.alltrue" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.alltrue" [color=purple penwidth=1 style=dashed]
	"numpy.core.alterdot" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.alterdot" [color=purple penwidth=1 style=dashed]
	"numpy.core.amax" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.amax" [color=purple penwidth=1 style=dashed]
	"numpy.core.amin" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.amin" [color=purple penwidth=1 style=dashed]
	"numpy.core.any" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.any" [color=purple penwidth=1 style=dashed]
	"numpy.core.argmax" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.argmax" [color=purple penwidth=1 style=dashed]
	"numpy.core.argmin" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.argmin" [color=purple penwidth=1 style=dashed]
	"numpy.core.argpartition" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.argpartition" [color=purple penwidth=1 style=dashed]
	"numpy.core.argsort" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.argsort" [color=purple penwidth=1 style=dashed]
	"numpy.core.argwhere" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.argwhere" [color=purple penwidth=1 style=dashed]
	"numpy.core.around" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.around" [color=purple penwidth=1 style=dashed]
	"numpy.core.array2string" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.array2string" [color=purple penwidth=1 style=dashed]
	"numpy.core.array_equal" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.array_equal" [color=purple penwidth=1 style=dashed]
	"numpy.core.array_equiv" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.array_equiv" [color=purple penwidth=1 style=dashed]
	"numpy.core.array_repr" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.array_repr" [color=purple penwidth=1 style=dashed]
	"numpy.core.array_str" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.array_str" [color=purple penwidth=1 style=dashed]
	"numpy.core.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.asarray" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.ascontiguousarray" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.ascontiguousarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.asfortranarray" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.asfortranarray" [color=purple penwidth=1 style=dashed]
	"numpy.core.atleast_1d" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.atleast_1d" [color=purple penwidth=1 style=dashed]
	"numpy.core.atleast_2d" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.atleast_2d" [color=purple penwidth=1 style=dashed]
	"numpy.core.atleast_3d" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.atleast_3d" [color=purple penwidth=1 style=dashed]
	"numpy.core.base_repr" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.base_repr" [color=purple penwidth=1 style=dashed]
	"numpy.core.binary_repr" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.binary_repr" [color=purple penwidth=1 style=dashed]
	"numpy.core.choose" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.choose" [color=purple penwidth=1 style=dashed]
	"numpy.core.clip" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.clip" [color=purple penwidth=1 style=dashed]
	"numpy.core.compress" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.compress" [color=purple penwidth=1 style=dashed]
	"numpy.core.convolve" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.convolve" [color=purple penwidth=1 style=dashed]
	"numpy.core.correlate" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.correlate" [color=purple penwidth=1 style=dashed]
	"numpy.core.cross" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.cross" [color=purple penwidth=1 style=dashed]
	"numpy.core.cumprod" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.cumprod" [color=purple penwidth=1 style=dashed]
	"numpy.core.cumproduct" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.cumproduct" [color=purple penwidth=1 style=dashed]
	"numpy.core.cumsum" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.cumsum" [color=purple penwidth=1 style=dashed]
	"numpy.core.diagonal" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.diagonal" [color=purple penwidth=1 style=dashed]
	"numpy.core.find_common_type" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.find_common_type" [color=purple penwidth=1 style=dashed]
	"numpy.core.flatnonzero" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.flatnonzero" [color=purple penwidth=1 style=dashed]
	"numpy.core.fromfunction" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.fromfunction" [color=purple penwidth=1 style=dashed]
	"numpy.core.full" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.full" [color=purple penwidth=1 style=dashed]
	"numpy.core.full_like" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.full_like" [color=purple penwidth=1 style=dashed]
	"numpy.core.get_printoptions" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.get_printoptions" [color=purple penwidth=1 style=dashed]
	"numpy.core.getbufsize" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.getbufsize" [color=purple penwidth=1 style=dashed]
	"numpy.core.geterr" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.geterr" [color=purple penwidth=1 style=dashed]
	"numpy.core.geterrcall" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.geterrcall" [color=purple penwidth=1 style=dashed]
	"numpy.core.hstack" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.hstack" [color=purple penwidth=1 style=dashed]
	"numpy.core.identity" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.identity" [color=purple penwidth=1 style=dashed]
	"numpy.core.indices" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.indices" [color=purple penwidth=1 style=dashed]
	"numpy.core.isclose" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.isclose" [color=purple penwidth=1 style=dashed]
	"numpy.core.isfortran" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.isfortran" [color=purple penwidth=1 style=dashed]
	"numpy.core.isscalar" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.isscalar" [color=purple penwidth=1 style=dashed]
	"numpy.core.issctype" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.issctype" [color=purple penwidth=1 style=dashed]
	"numpy.core.issubdtype" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.issubdtype" [color=purple penwidth=1 style=dashed]
	"numpy.core.linspace" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.linspace" [color=purple penwidth=1 style=dashed]
	"numpy.core.load" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.load" [color=purple penwidth=1 style=dashed]
	"numpy.core.logspace" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.logspace" [color=purple penwidth=1 style=dashed]
	"numpy.core.max" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.max" [color=purple penwidth=1 style=dashed]
	"numpy.core.maximum_sctype" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.maximum_sctype" [color=purple penwidth=1 style=dashed]
	"numpy.core.mean" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.mean" [color=purple penwidth=1 style=dashed]
	"numpy.core.min" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.min" [color=purple penwidth=1 style=dashed]
	"numpy.core.moveaxis" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.moveaxis" [color=purple penwidth=1 style=dashed]
	"numpy.core.ndim" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.ndim" [color=purple penwidth=1 style=dashed]
	"numpy.core.nonzero" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.nonzero" [color=purple penwidth=1 style=dashed]
	"numpy.core.obj2sctype" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.obj2sctype" [color=purple penwidth=1 style=dashed]
	"numpy.core.ones" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.ones" [color=purple penwidth=1 style=dashed]
	"numpy.core.ones_like" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.ones_like" [color=purple penwidth=1 style=dashed]
	"numpy.core.outer" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.outer" [color=purple penwidth=1 style=dashed]
	"numpy.core.partition" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.partition" [color=purple penwidth=1 style=dashed]
	"numpy.core.prod" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.prod" [color=purple penwidth=1 style=dashed]
	"numpy.core.product" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.product" [color=purple penwidth=1 style=dashed]
	"numpy.core.ptp" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.ptp" [color=purple penwidth=1 style=dashed]
	"numpy.core.put" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.put" [color=purple penwidth=1 style=dashed]
	"numpy.core.rank" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.rank" [color=purple penwidth=1 style=dashed]
	"numpy.core.ravel" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.ravel" [color=purple penwidth=1 style=dashed]
	"numpy.core.repeat" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.repeat" [color=purple penwidth=1 style=dashed]
	"numpy.core.require" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.require" [color=purple penwidth=1 style=dashed]
	"numpy.core.reshape" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.reshape" [color=purple penwidth=1 style=dashed]
	"numpy.core.resize" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.resize" [color=purple penwidth=1 style=dashed]
	"numpy.core.restoredot" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.restoredot" [color=purple penwidth=1 style=dashed]
	"numpy.core.roll" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.roll" [color=purple penwidth=1 style=dashed]
	"numpy.core.rollaxis" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.rollaxis" [color=purple penwidth=1 style=dashed]
	"numpy.core.round" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.round" [color=purple penwidth=1 style=dashed]
	"numpy.core.round_" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.round_" [color=purple penwidth=1 style=dashed]
	"numpy.core.sctype2char" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.sctype2char" [color=purple penwidth=1 style=dashed]
	"numpy.core.searchsorted" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.searchsorted" [color=purple penwidth=1 style=dashed]
	"numpy.core.set_printoptions" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.set_printoptions" [color=purple penwidth=1 style=dashed]
	"numpy.core.set_string_function" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.set_string_function" [color=purple penwidth=1 style=dashed]
	"numpy.core.setbufsize" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.setbufsize" [color=purple penwidth=1 style=dashed]
	"numpy.core.seterr" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.seterr" [color=purple penwidth=1 style=dashed]
	"numpy.core.seterrcall" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.seterrcall" [color=purple penwidth=1 style=dashed]
	"numpy.core.shape" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.shape" [color=purple penwidth=1 style=dashed]
	"numpy.core.size" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.size" [color=purple penwidth=1 style=dashed]
	"numpy.core.sometrue" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.sometrue" [color=purple penwidth=1 style=dashed]
	"numpy.core.sort" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.sort" [color=purple penwidth=1 style=dashed]
	"numpy.core.squeeze" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.squeeze" [color=purple penwidth=1 style=dashed]
	"numpy.core.stack" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.stack" [color=purple penwidth=1 style=dashed]
	"numpy.core.std" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.std" [color=purple penwidth=1 style=dashed]
	"numpy.core.sum" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.sum" [color=purple penwidth=1 style=dashed]
	"numpy.core.swapaxes" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.swapaxes" [color=purple penwidth=1 style=dashed]
	"numpy.core.take" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.take" [color=purple penwidth=1 style=dashed]
	"numpy.core.tensordot" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.tensordot" [color=purple penwidth=1 style=dashed]
	"numpy.core.trace" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.trace" [color=purple penwidth=1 style=dashed]
	"numpy.core.transpose" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.transpose" [color=purple penwidth=1 style=dashed]
	"numpy.core.var" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.var" [color=purple penwidth=1 style=dashed]
	"numpy.core.vstack" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.vstack" [color=purple penwidth=1 style=dashed]
	"numpy.core.zeros_like" [color=purple fontsize=16 shape=none]
		"numpy.core-functions" -> "numpy.core.zeros_like" [color=purple penwidth=1 style=dashed]
	"numpy.core-nofta" [color=black fontsize=16 shape=none]
		"numpy.core" -> "numpy.core-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.ALLOW_THREADS" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.ALLOW_THREADS" [color=black penwidth=1 style=dashed]
	"numpy.core.BUFSIZE" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.BUFSIZE" [color=black penwidth=1 style=dashed]
	"numpy.core.CLIP" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.CLIP" [color=black penwidth=1 style=dashed]
	"numpy.core.ERR_CALL" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.ERR_CALL" [color=black penwidth=1 style=dashed]
	"numpy.core.ERR_DEFAULT" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.ERR_DEFAULT" [color=black penwidth=1 style=dashed]
	"numpy.core.ERR_IGNORE" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.ERR_IGNORE" [color=black penwidth=1 style=dashed]
	"numpy.core.ERR_LOG" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.ERR_LOG" [color=black penwidth=1 style=dashed]
	"numpy.core.ERR_PRINT" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.ERR_PRINT" [color=black penwidth=1 style=dashed]
	"numpy.core.ERR_RAISE" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.ERR_RAISE" [color=black penwidth=1 style=dashed]
	"numpy.core.ERR_WARN" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.ERR_WARN" [color=black penwidth=1 style=dashed]
	"numpy.core.FLOATING_POINT_SUPPORT" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.FLOATING_POINT_SUPPORT" [color=black penwidth=1 style=dashed]
	"numpy.core.FPE_DIVIDEBYZERO" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.FPE_DIVIDEBYZERO" [color=black penwidth=1 style=dashed]
	"numpy.core.FPE_INVALID" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.FPE_INVALID" [color=black penwidth=1 style=dashed]
	"numpy.core.FPE_OVERFLOW" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.FPE_OVERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.core.FPE_UNDERFLOW" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.FPE_UNDERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.core.False_" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.False_" [color=black penwidth=1 style=dashed]
	"numpy.core.Inf" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.Inf" [color=black penwidth=1 style=dashed]
	"numpy.core.Infinity" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.Infinity" [color=black penwidth=1 style=dashed]
	"numpy.core.MAXDIMS" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.MAXDIMS" [color=black penwidth=1 style=dashed]
	"numpy.core.MAY_SHARE_BOUNDS" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.MAY_SHARE_BOUNDS" [color=black penwidth=1 style=dashed]
	"numpy.core.MAY_SHARE_EXACT" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.MAY_SHARE_EXACT" [color=black penwidth=1 style=dashed]
	"numpy.core.NAN" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.NAN" [color=black penwidth=1 style=dashed]
	"numpy.core.NINF" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.NINF" [color=black penwidth=1 style=dashed]
	"numpy.core.NZERO" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.NZERO" [color=black penwidth=1 style=dashed]
	"numpy.core.NaN" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.NaN" [color=black penwidth=1 style=dashed]
	"numpy.core.PINF" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.PINF" [color=black penwidth=1 style=dashed]
	"numpy.core.PZERO" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.PZERO" [color=black penwidth=1 style=dashed]
	"numpy.core.RAISE" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.RAISE" [color=black penwidth=1 style=dashed]
	"numpy.core.SHIFT_DIVIDEBYZERO" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.SHIFT_DIVIDEBYZERO" [color=black penwidth=1 style=dashed]
	"numpy.core.SHIFT_INVALID" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.SHIFT_INVALID" [color=black penwidth=1 style=dashed]
	"numpy.core.SHIFT_OVERFLOW" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.SHIFT_OVERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.core.SHIFT_UNDERFLOW" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.SHIFT_UNDERFLOW" [color=black penwidth=1 style=dashed]
	"numpy.core.ScalarType" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.ScalarType" [color=black penwidth=1 style=dashed]
	"numpy.core.True_" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.True_" [color=black penwidth=1 style=dashed]
	"numpy.core.UFUNC_BUFSIZE_DEFAULT" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.UFUNC_BUFSIZE_DEFAULT" [color=black penwidth=1 style=dashed]
	"numpy.core.UFUNC_PYVALS_NAME" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.UFUNC_PYVALS_NAME" [color=black penwidth=1 style=dashed]
	"numpy.core.WRAP" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.WRAP" [color=black penwidth=1 style=dashed]
	"numpy.core.__all__" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.__all__" [color=black penwidth=1 style=dashed]
	"numpy.core.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.core.__doc__" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.core.__file__" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.__file__" [color=black penwidth=1 style=dashed]
	"numpy.core.__name__" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.__name__" [color=black penwidth=1 style=dashed]
	"numpy.core.__package__" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.__package__" [color=black penwidth=1 style=dashed]
	"numpy.core.__path__" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.__path__" [color=black penwidth=1 style=dashed]
	"numpy.core.__version__" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.__version__" [color=black penwidth=1 style=dashed]
	"numpy.core.abs" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.abs" [color=black penwidth=1 style=dashed]
	"numpy.core.absolute" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.absolute" [color=black penwidth=1 style=dashed]
	"numpy.core.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.core.add" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.add" [color=black penwidth=1 style=dashed]
	"numpy.core.arccos" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.arccos" [color=black penwidth=1 style=dashed]
	"numpy.core.arccosh" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.arccosh" [color=black penwidth=1 style=dashed]
	"numpy.core.arcsin" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.arcsin" [color=black penwidth=1 style=dashed]
	"numpy.core.arcsinh" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.arcsinh" [color=black penwidth=1 style=dashed]
	"numpy.core.arctan" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.arctan" [color=black penwidth=1 style=dashed]
	"numpy.core.arctan2" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.arctan2" [color=black penwidth=1 style=dashed]
	"numpy.core.arctanh" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.arctanh" [color=black penwidth=1 style=dashed]
	"numpy.core.bench" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.bench" [color=black penwidth=1 style=dashed]
	"numpy.core.bitwise_and" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.bitwise_and" [color=black penwidth=1 style=dashed]
	"numpy.core.bitwise_not" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.bitwise_not" [color=black penwidth=1 style=dashed]
	"numpy.core.bitwise_or" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.bitwise_or" [color=black penwidth=1 style=dashed]
	"numpy.core.bitwise_xor" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.bitwise_xor" [color=black penwidth=1 style=dashed]
	"numpy.core.cast" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.cast" [color=black penwidth=1 style=dashed]
	"numpy.core.cbrt" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.cbrt" [color=black penwidth=1 style=dashed]
	"numpy.core.ceil" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.ceil" [color=black penwidth=1 style=dashed]
	"numpy.core.conj" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.conj" [color=black penwidth=1 style=dashed]
	"numpy.core.conjugate" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.conjugate" [color=black penwidth=1 style=dashed]
	"numpy.core.copysign" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.copysign" [color=black penwidth=1 style=dashed]
	"numpy.core.cos" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.cos" [color=black penwidth=1 style=dashed]
	"numpy.core.cosh" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.cosh" [color=black penwidth=1 style=dashed]
	"numpy.core.deg2rad" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.deg2rad" [color=black penwidth=1 style=dashed]
	"numpy.core.degrees" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.degrees" [color=black penwidth=1 style=dashed]
	"numpy.core.divide" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.divide" [color=black penwidth=1 style=dashed]
	"numpy.core.division" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.division" [color=black penwidth=1 style=dashed]
	"numpy.core.e" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.e" [color=black penwidth=1 style=dashed]
	"numpy.core.equal" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.equal" [color=black penwidth=1 style=dashed]
	"numpy.core.euler_gamma" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.euler_gamma" [color=black penwidth=1 style=dashed]
	"numpy.core.exp" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.exp" [color=black penwidth=1 style=dashed]
	"numpy.core.exp2" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.exp2" [color=black penwidth=1 style=dashed]
	"numpy.core.expm1" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.expm1" [color=black penwidth=1 style=dashed]
	"numpy.core.fabs" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.fabs" [color=black penwidth=1 style=dashed]
	"numpy.core.floor" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.floor" [color=black penwidth=1 style=dashed]
	"numpy.core.floor_divide" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.floor_divide" [color=black penwidth=1 style=dashed]
	"numpy.core.fmax" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.fmax" [color=black penwidth=1 style=dashed]
	"numpy.core.fmin" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.fmin" [color=black penwidth=1 style=dashed]
	"numpy.core.fmod" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.fmod" [color=black penwidth=1 style=dashed]
	"numpy.core.frexp" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.frexp" [color=black penwidth=1 style=dashed]
	"numpy.core.greater" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.greater" [color=black penwidth=1 style=dashed]
	"numpy.core.greater_equal" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.greater_equal" [color=black penwidth=1 style=dashed]
	"numpy.core.hypot" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.hypot" [color=black penwidth=1 style=dashed]
	"numpy.core.inf" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.inf" [color=black penwidth=1 style=dashed]
	"numpy.core.infty" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.infty" [color=black penwidth=1 style=dashed]
	"numpy.core.invert" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.invert" [color=black penwidth=1 style=dashed]
	"numpy.core.isfinite" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.isfinite" [color=black penwidth=1 style=dashed]
	"numpy.core.isinf" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.isinf" [color=black penwidth=1 style=dashed]
	"numpy.core.isnan" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.isnan" [color=black penwidth=1 style=dashed]
	"numpy.core.ldexp" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.ldexp" [color=black penwidth=1 style=dashed]
	"numpy.core.left_shift" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.left_shift" [color=black penwidth=1 style=dashed]
	"numpy.core.less" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.less" [color=black penwidth=1 style=dashed]
	"numpy.core.less_equal" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.less_equal" [color=black penwidth=1 style=dashed]
	"numpy.core.little_endian" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.little_endian" [color=black penwidth=1 style=dashed]
	"numpy.core.log" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.log" [color=black penwidth=1 style=dashed]
	"numpy.core.log10" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.log10" [color=black penwidth=1 style=dashed]
	"numpy.core.log1p" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.log1p" [color=black penwidth=1 style=dashed]
	"numpy.core.log2" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.log2" [color=black penwidth=1 style=dashed]
	"numpy.core.logaddexp" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.logaddexp" [color=black penwidth=1 style=dashed]
	"numpy.core.logaddexp2" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.logaddexp2" [color=black penwidth=1 style=dashed]
	"numpy.core.logical_and" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.logical_and" [color=black penwidth=1 style=dashed]
	"numpy.core.logical_not" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.logical_not" [color=black penwidth=1 style=dashed]
	"numpy.core.logical_or" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.logical_or" [color=black penwidth=1 style=dashed]
	"numpy.core.logical_xor" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.logical_xor" [color=black penwidth=1 style=dashed]
	"numpy.core.maximum" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.maximum" [color=black penwidth=1 style=dashed]
	"numpy.core.minimum" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.minimum" [color=black penwidth=1 style=dashed]
	"numpy.core.mod" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.mod" [color=black penwidth=1 style=dashed]
	"numpy.core.modf" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.modf" [color=black penwidth=1 style=dashed]
	"numpy.core.multiply" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.multiply" [color=black penwidth=1 style=dashed]
	"numpy.core.nan" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.nan" [color=black penwidth=1 style=dashed]
	"numpy.core.nbytes" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.nbytes" [color=black penwidth=1 style=dashed]
	"numpy.core.negative" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.negative" [color=black penwidth=1 style=dashed]
	"numpy.core.newaxis" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.newaxis" [color=black penwidth=1 style=dashed]
	"numpy.core.nextafter" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.nextafter" [color=black penwidth=1 style=dashed]
	"numpy.core.not_equal" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.not_equal" [color=black penwidth=1 style=dashed]
	"numpy.core.pi" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.pi" [color=black penwidth=1 style=dashed]
	"numpy.core.power" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.power" [color=black penwidth=1 style=dashed]
	"numpy.core.print_function" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.print_function" [color=black penwidth=1 style=dashed]
	"numpy.core.rad2deg" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.rad2deg" [color=black penwidth=1 style=dashed]
	"numpy.core.radians" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.radians" [color=black penwidth=1 style=dashed]
	"numpy.core.reciprocal" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.reciprocal" [color=black penwidth=1 style=dashed]
	"numpy.core.remainder" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.remainder" [color=black penwidth=1 style=dashed]
	"numpy.core.right_shift" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.right_shift" [color=black penwidth=1 style=dashed]
	"numpy.core.rint" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.rint" [color=black penwidth=1 style=dashed]
	"numpy.core.sctypeDict" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.sctypeDict" [color=black penwidth=1 style=dashed]
	"numpy.core.sctypeNA" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.sctypeNA" [color=black penwidth=1 style=dashed]
	"numpy.core.sctypes" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.sctypes" [color=black penwidth=1 style=dashed]
	"numpy.core.sign" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.sign" [color=black penwidth=1 style=dashed]
	"numpy.core.signbit" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.signbit" [color=black penwidth=1 style=dashed]
	"numpy.core.sin" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.sin" [color=black penwidth=1 style=dashed]
	"numpy.core.sinh" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.sinh" [color=black penwidth=1 style=dashed]
	"numpy.core.spacing" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.spacing" [color=black penwidth=1 style=dashed]
	"numpy.core.sqrt" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.sqrt" [color=black penwidth=1 style=dashed]
	"numpy.core.square" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.square" [color=black penwidth=1 style=dashed]
	"numpy.core.subtract" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.subtract" [color=black penwidth=1 style=dashed]
	"numpy.core.tan" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.tan" [color=black penwidth=1 style=dashed]
	"numpy.core.tanh" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.tanh" [color=black penwidth=1 style=dashed]
	"numpy.core.test" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.test" [color=black penwidth=1 style=dashed]
	"numpy.core.true_divide" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.true_divide" [color=black penwidth=1 style=dashed]
	"numpy.core.trunc" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.trunc" [color=black penwidth=1 style=dashed]
	"numpy.core.typeDict" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.typeDict" [color=black penwidth=1 style=dashed]
	"numpy.core.typeNA" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.typeNA" [color=black penwidth=1 style=dashed]
	"numpy.core.typecodes" [color=black fontsize=16 shape=none]
		"numpy.core-nofta" -> "numpy.core.typecodes" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.nosetester.np" -> "numpy.testing.nosetester.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.nosetester.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.nosetester.np" -> "numpy.testing.nosetester.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.nosetester.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.nosetester.np" -> "numpy.testing.nosetester.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.nosetester.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester.np" -> "numpy.testing.nosetester.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.records.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.records.sys" -> "numpy.core.records.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.records.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.records.sys" -> "numpy.core.records.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.records.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.records.sys" -> "numpy.core.records.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.records.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.records.sys" -> "numpy.core.records.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.operator-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numeric.operator" -> "numpy.core.numeric.operator-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.operator-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric.operator" -> "numpy.core.numeric.operator-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.operator-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric.operator" -> "numpy.core.numeric.operator-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.operator-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numeric.operator" -> "numpy.core.numeric.operator-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.umath-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.extras.umath" -> "numpy.ma.extras.umath-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.extras.umath-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras.umath" -> "numpy.ma.extras.umath-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras.umath-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras.umath" -> "numpy.ma.extras.umath-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.umath-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.extras.umath" -> "numpy.ma.extras.umath-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.ma-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.extras.ma" -> "numpy.ma.extras.ma-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.extras.ma-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras.ma" -> "numpy.ma.extras.ma-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras.ma-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras.ma" -> "numpy.ma.extras.ma-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.ma-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.extras.ma" -> "numpy.ma.extras.ma-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.builtins-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numeric.builtins" -> "numpy.core.numeric.builtins-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.builtins-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric.builtins" -> "numpy.core.numeric.builtins-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.builtins-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric.builtins" -> "numpy.core.numeric.builtins-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.builtins-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numeric.builtins" -> "numpy.core.numeric.builtins-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.records.sb-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.records.sb" -> "numpy.core.records.sb-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.records.sb-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.records.sb" -> "numpy.core.records.sb-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.records.sb-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.records.sb" -> "numpy.core.records.sb-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.records.sb-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.records.sb" -> "numpy.core.records.sb-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.index_tricks" -> "numpy.lib.index_tricks-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.index_tricks.arange" [color=red fontsize=16 shape=none]
		"numpy.lib.index_tricks-builtins" -> "numpy.lib.index_tricks.arange" [color=red penwidth=1 style=dashed]
	"numpy.lib.index_tricks.array" [color=red fontsize=16 shape=none]
		"numpy.lib.index_tricks-builtins" -> "numpy.lib.index_tricks.array" [color=red penwidth=1 style=dashed]
	"numpy.lib.index_tricks.ravel_multi_index" [color=red fontsize=16 shape=none]
		"numpy.lib.index_tricks-builtins" -> "numpy.lib.index_tricks.ravel_multi_index" [color=red penwidth=1 style=dashed]
	"numpy.lib.index_tricks.unravel_index" [color=red fontsize=16 shape=none]
		"numpy.lib.index_tricks-builtins" -> "numpy.lib.index_tricks.unravel_index" [color=red penwidth=1 style=dashed]
	"numpy.lib.index_tricks-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks" -> "numpy.lib.index_tricks-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks.AxisConcatenator" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks-classes" -> "numpy.lib.index_tricks.AxisConcatenator" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks.CClass" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks-classes" -> "numpy.lib.index_tricks.CClass" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks.IndexExpression" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks-classes" -> "numpy.lib.index_tricks.IndexExpression" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks.RClass" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks-classes" -> "numpy.lib.index_tricks.RClass" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks.makemat" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks-classes" -> "numpy.lib.index_tricks.makemat" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks.nd_grid" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks-classes" -> "numpy.lib.index_tricks.nd_grid" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks.ndenumerate" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks-classes" -> "numpy.lib.index_tricks.ndenumerate" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks.ndindex" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks-classes" -> "numpy.lib.index_tricks.ndindex" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks" -> "numpy.lib.index_tricks-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.alltrue" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks-functions" -> "numpy.lib.index_tricks.alltrue" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.as_strided" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks-functions" -> "numpy.lib.index_tricks.as_strided" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.asarray" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks-functions" -> "numpy.lib.index_tricks.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.cumprod" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks-functions" -> "numpy.lib.index_tricks.cumprod" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.diag_indices" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks-functions" -> "numpy.lib.index_tricks.diag_indices" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.diag_indices_from" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks-functions" -> "numpy.lib.index_tricks.diag_indices_from" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.diff" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks-functions" -> "numpy.lib.index_tricks.diff" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.fill_diagonal" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks-functions" -> "numpy.lib.index_tricks.fill_diagonal" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.find_common_type" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks-functions" -> "numpy.lib.index_tricks.find_common_type" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.issubdtype" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks-functions" -> "numpy.lib.index_tricks.issubdtype" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.ix_" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks-functions" -> "numpy.lib.index_tricks.ix_" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks" -> "numpy.lib.index_tricks-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.ScalarType" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.ScalarType" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.__all__" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.__all__" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.c_" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.c_" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.division" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.index_exp" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.index_exp" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.mgrid" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.mgrid" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.ogrid" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.ogrid" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.r_" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.r_" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.s_" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks-nofta" -> "numpy.lib.index_tricks.s_" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.core.np" -> "numpy.ma.core.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.core.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.core.np" -> "numpy.ma.core.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.core.np" -> "numpy.ma.core.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.core.np" -> "numpy.ma.core.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.defchararray.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.defchararray.sys" -> "numpy.core.defchararray.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.defchararray.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.defchararray.sys" -> "numpy.core.defchararray.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.defchararray.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.defchararray.sys" -> "numpy.core.defchararray.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.defchararray.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.defchararray.sys" -> "numpy.core.defchararray.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polyutils-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.polyutils" -> "numpy.polynomial.polyutils-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.polyutils-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polyutils" -> "numpy.polynomial.polyutils-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.PolyBase" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polyutils-classes" -> "numpy.polynomial.polyutils.PolyBase" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.PolyDomainError" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polyutils-classes" -> "numpy.polynomial.polyutils.PolyDomainError" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.PolyError" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polyutils-classes" -> "numpy.polynomial.polyutils.PolyError" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.RankWarning" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polyutils-classes" -> "numpy.polynomial.polyutils.RankWarning" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polyutils-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polyutils" -> "numpy.polynomial.polyutils-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.as_series" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polyutils-functions" -> "numpy.polynomial.polyutils.as_series" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.getdomain" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polyutils-functions" -> "numpy.polynomial.polyutils.getdomain" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.mapdomain" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polyutils-functions" -> "numpy.polynomial.polyutils.mapdomain" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.mapparms" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polyutils-functions" -> "numpy.polynomial.polyutils.mapparms" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.trimcoef" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polyutils-functions" -> "numpy.polynomial.polyutils.trimcoef" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.trimseq" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polyutils-functions" -> "numpy.polynomial.polyutils.trimseq" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polyutils-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polyutils" -> "numpy.polynomial.polyutils-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.__all__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polyutils-nofta" -> "numpy.polynomial.polyutils.__all__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polyutils-nofta" -> "numpy.polynomial.polyutils.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.__doc__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polyutils-nofta" -> "numpy.polynomial.polyutils.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.__file__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polyutils-nofta" -> "numpy.polynomial.polyutils.__file__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.__name__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polyutils-nofta" -> "numpy.polynomial.polyutils.__name__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.__package__" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polyutils-nofta" -> "numpy.polynomial.polyutils.__package__" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polyutils-nofta" -> "numpy.polynomial.polyutils.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.division" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polyutils-nofta" -> "numpy.polynomial.polyutils.division" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polyutils.print_function" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polyutils-nofta" -> "numpy.polynomial.polyutils.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.utils.types-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.utils.types" -> "numpy.lib.utils.types-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.utils.types-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.utils.types" -> "numpy.lib.utils.types-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.utils.types-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.utils.types" -> "numpy.lib.utils.types-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.utils.types-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.utils.types" -> "numpy.lib.utils.types-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.arraysetops.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.arraysetops.np" -> "numpy.lib.arraysetops.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.arraysetops.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.arraysetops.np" -> "numpy.lib.arraysetops.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.arraysetops.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.arraysetops.np" -> "numpy.lib.arraysetops.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.arraysetops.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.arraysetops.np" -> "numpy.lib.arraysetops.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.financial.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.financial.np" -> "numpy.lib.financial.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.financial.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.financial.np" -> "numpy.lib.financial.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.financial.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.financial.np" -> "numpy.lib.financial.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.financial.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.financial.np" -> "numpy.lib.financial.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.legendre.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.legendre.np" -> "numpy.polynomial.legendre.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.legendre.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.legendre.np" -> "numpy.polynomial.legendre.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.legendre.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.legendre.np" -> "numpy.polynomial.legendre.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.legendre.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.legendre.np" -> "numpy.polynomial.legendre.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.ma.extras.np-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.extras.np" -> "numpy.ma.extras.np-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.extras.np-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.extras.np" -> "numpy.ma.extras.np-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.extras.np-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.extras.np" -> "numpy.ma.extras.np-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.extras.np-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.extras.np" -> "numpy.ma.extras.np-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.pu-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.polynomial.pu" -> "numpy.polynomial.polynomial.pu-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.pu-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.polynomial.pu" -> "numpy.polynomial.polynomial.pu-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.pu-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.polynomial.pu" -> "numpy.polynomial.polynomial.pu-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.polynomial.pu-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.polynomial.pu" -> "numpy.polynomial.polynomial.pu-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.format-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.format" -> "numpy.lib.format-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.format-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.format" -> "numpy.lib.format-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.format.asbytes" [color=gold fontsize=16 shape=none]
		"numpy.lib.format-classes" -> "numpy.lib.format.asbytes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.format.asstr" [color=gold fontsize=16 shape=none]
		"numpy.lib.format-classes" -> "numpy.lib.format.asstr" [color=gold penwidth=1 style=dashed]
	"numpy.lib.format.basestring" [color=gold fontsize=16 shape=none]
		"numpy.lib.format-classes" -> "numpy.lib.format.basestring" [color=gold penwidth=1 style=dashed]
	"numpy.lib.format.long" [color=gold fontsize=16 shape=none]
		"numpy.lib.format-classes" -> "numpy.lib.format.long" [color=gold penwidth=1 style=dashed]
	"numpy.lib.format-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.format" -> "numpy.lib.format-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format._check_version" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format._check_version" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format._filter_header" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format._filter_header" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format._read_array_header" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format._read_array_header" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format._read_bytes" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format._read_bytes" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format._write_array_header" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format._write_array_header" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.dtype_to_descr" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.dtype_to_descr" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.header_data_from_array_1_0" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.header_data_from_array_1_0" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.isfileobj" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.isfileobj" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.magic" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.magic" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.open_memmap" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.open_memmap" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.read_array" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.read_array" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.read_array_header_1_0" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.read_array_header_1_0" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.read_array_header_2_0" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.read_array_header_2_0" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.read_magic" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.read_magic" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.safe_eval" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.safe_eval" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.write_array" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.write_array" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.write_array_header_1_0" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.write_array_header_1_0" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.write_array_header_2_0" [color=purple fontsize=16 shape=none]
		"numpy.lib.format-functions" -> "numpy.lib.format.write_array_header_2_0" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.format" -> "numpy.lib.format-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.BUFFER_SIZE" [color=black fontsize=16 shape=none]
		"numpy.lib.format-nofta" -> "numpy.lib.format.BUFFER_SIZE" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.MAGIC_LEN" [color=black fontsize=16 shape=none]
		"numpy.lib.format-nofta" -> "numpy.lib.format.MAGIC_LEN" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.MAGIC_PREFIX" [color=black fontsize=16 shape=none]
		"numpy.lib.format-nofta" -> "numpy.lib.format.MAGIC_PREFIX" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.lib.format-nofta" -> "numpy.lib.format.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.__doc__" [color=black fontsize=16 shape=none]
		"numpy.lib.format-nofta" -> "numpy.lib.format.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.__file__" [color=black fontsize=16 shape=none]
		"numpy.lib.format-nofta" -> "numpy.lib.format.__file__" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.__name__" [color=black fontsize=16 shape=none]
		"numpy.lib.format-nofta" -> "numpy.lib.format.__name__" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.__package__" [color=black fontsize=16 shape=none]
		"numpy.lib.format-nofta" -> "numpy.lib.format.__package__" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.lib.format-nofta" -> "numpy.lib.format.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.division" [color=black fontsize=16 shape=none]
		"numpy.lib.format-nofta" -> "numpy.lib.format.division" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.print_function" [color=black fontsize=16 shape=none]
		"numpy.lib.format-nofta" -> "numpy.lib.format.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.collections-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base.collections" -> "numpy.lib.function_base.collections-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.collections-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base.collections" -> "numpy.lib.function_base.collections-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.collections-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base.collections" -> "numpy.lib.function_base.collections-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.collections-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base.collections" -> "numpy.lib.function_base.collections-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.nosetester" -> "numpy.testing.nosetester-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.nosetester-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.nosetester" -> "numpy.testing.nosetester-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.nosetester.NoseTester" [color=gold fontsize=16 shape=none]
		"numpy.testing.nosetester-classes" -> "numpy.testing.nosetester.NoseTester" [color=gold penwidth=1 style=dashed]
	"numpy.testing.nosetester.basestring" [color=gold fontsize=16 shape=none]
		"numpy.testing.nosetester-classes" -> "numpy.testing.nosetester.basestring" [color=gold penwidth=1 style=dashed]
	"numpy.testing.nosetester-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.nosetester" -> "numpy.testing.nosetester-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.nosetester._numpy_tester" [color=purple fontsize=16 shape=none]
		"numpy.testing.nosetester-functions" -> "numpy.testing.nosetester._numpy_tester" [color=purple penwidth=1 style=dashed]
	"numpy.testing.nosetester.get_package_name" [color=purple fontsize=16 shape=none]
		"numpy.testing.nosetester-functions" -> "numpy.testing.nosetester.get_package_name" [color=purple penwidth=1 style=dashed]
	"numpy.testing.nosetester.import_nose" [color=purple fontsize=16 shape=none]
		"numpy.testing.nosetester-functions" -> "numpy.testing.nosetester.import_nose" [color=purple penwidth=1 style=dashed]
	"numpy.testing.nosetester.run_module_suite" [color=purple fontsize=16 shape=none]
		"numpy.testing.nosetester-functions" -> "numpy.testing.nosetester.run_module_suite" [color=purple penwidth=1 style=dashed]
	"numpy.testing.nosetester-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester" -> "numpy.testing.nosetester-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester-nofta" -> "numpy.testing.nosetester.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester.__doc__" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester-nofta" -> "numpy.testing.nosetester.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester.__file__" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester-nofta" -> "numpy.testing.nosetester.__file__" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester.__name__" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester-nofta" -> "numpy.testing.nosetester.__name__" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester.__package__" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester-nofta" -> "numpy.testing.nosetester.__package__" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester-nofta" -> "numpy.testing.nosetester.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester.division" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester-nofta" -> "numpy.testing.nosetester.division" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester.print_function" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester-nofta" -> "numpy.testing.nosetester.print_function" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.function_base-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.index_tricks.function_base" -> "numpy.lib.index_tricks.function_base-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.index_tricks.function_base-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks.function_base" -> "numpy.lib.index_tricks.function_base-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks.function_base-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks.function_base" -> "numpy.lib.index_tricks.function_base-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.function_base-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks.function_base" -> "numpy.lib.index_tricks.function_base-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.getlimits.ntypes-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.getlimits.ntypes" -> "numpy.core.getlimits.ntypes-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.getlimits.ntypes-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.getlimits.ntypes" -> "numpy.core.getlimits.ntypes-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.getlimits.ntypes-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.getlimits.ntypes" -> "numpy.core.getlimits.ntypes-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.getlimits.ntypes-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.getlimits.ntypes" -> "numpy.core.getlimits.ntypes-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.nosetester.os-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.nosetester.os" -> "numpy.testing.nosetester.os-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.nosetester.os-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.nosetester.os" -> "numpy.testing.nosetester.os-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.nosetester.os-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.nosetester.os" -> "numpy.testing.nosetester.os-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.nosetester.os-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.nosetester.os" -> "numpy.testing.nosetester.os-nofta" [color=black penwidth=1 style=dashed]
	"numpy.core.numeric.pickle-builtins" [color=red fontsize=16 shape=none]
		"numpy.core.numeric.pickle" -> "numpy.core.numeric.pickle-builtins" [color=red penwidth=1 style=dashed]
	"numpy.core.numeric.pickle-classes" [color=gold fontsize=16 shape=none]
		"numpy.core.numeric.pickle" -> "numpy.core.numeric.pickle-classes" [color=gold penwidth=1 style=dashed]
	"numpy.core.numeric.pickle-functions" [color=purple fontsize=16 shape=none]
		"numpy.core.numeric.pickle" -> "numpy.core.numeric.pickle-functions" [color=purple penwidth=1 style=dashed]
	"numpy.core.numeric.pickle-nofta" [color=black fontsize=16 shape=none]
		"numpy.core.numeric.pickle" -> "numpy.core.numeric.pickle-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.index_tricks.matrix-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.index_tricks.matrix" -> "numpy.lib.index_tricks.matrix-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.index_tricks.matrix-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.index_tricks.matrix" -> "numpy.lib.index_tricks.matrix-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.index_tricks.matrix-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.index_tricks.matrix" -> "numpy.lib.index_tricks.matrix-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.index_tricks.matrix-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.index_tricks.matrix" -> "numpy.lib.index_tricks.matrix-nofta" [color=black penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.N-builtins" [color=red fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix.N" -> "numpy.matrixlib.defmatrix.N-builtins" [color=red penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.N-classes" [color=gold fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix.N" -> "numpy.matrixlib.defmatrix.N-classes" [color=gold penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.N-functions" [color=purple fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix.N" -> "numpy.matrixlib.defmatrix.N-functions" [color=purple penwidth=1 style=dashed]
	"numpy.matrixlib.defmatrix.N-nofta" [color=black fontsize=16 shape=none]
		"numpy.matrixlib.defmatrix.N" -> "numpy.matrixlib.defmatrix.N-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.format.warnings-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.format.warnings" -> "numpy.lib.format.warnings-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.format.warnings-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.format.warnings" -> "numpy.lib.format.warnings-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.format.warnings-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.format.warnings" -> "numpy.lib.format.warnings-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.format.warnings-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.format.warnings" -> "numpy.lib.format.warnings-nofta" [color=black penwidth=1 style=dashed]
	"numpy.polynomial.hermite.la-builtins" [color=red fontsize=16 shape=none]
		"numpy.polynomial.hermite.la" -> "numpy.polynomial.hermite.la-builtins" [color=red penwidth=1 style=dashed]
	"numpy.polynomial.hermite.la-classes" [color=gold fontsize=16 shape=none]
		"numpy.polynomial.hermite.la" -> "numpy.polynomial.hermite.la-classes" [color=gold penwidth=1 style=dashed]
	"numpy.polynomial.hermite.la-functions" [color=purple fontsize=16 shape=none]
		"numpy.polynomial.hermite.la" -> "numpy.polynomial.hermite.la-functions" [color=purple penwidth=1 style=dashed]
	"numpy.polynomial.hermite.la-nofta" [color=black fontsize=16 shape=none]
		"numpy.polynomial.hermite.la" -> "numpy.polynomial.hermite.la-nofta" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg-builtins" [color=red fontsize=16 shape=none]
		"numpy.linalg.linalg" -> "numpy.linalg.linalg-builtins" [color=red penwidth=1 style=dashed]
	"numpy.linalg.linalg._fastCT" [color=red fontsize=16 shape=none]
		"numpy.linalg.linalg-builtins" -> "numpy.linalg.linalg._fastCT" [color=red penwidth=1 style=dashed]
	"numpy.linalg.linalg.array" [color=red fontsize=16 shape=none]
		"numpy.linalg.linalg-builtins" -> "numpy.linalg.linalg.array" [color=red penwidth=1 style=dashed]
	"numpy.linalg.linalg.dot" [color=red fontsize=16 shape=none]
		"numpy.linalg.linalg-builtins" -> "numpy.linalg.linalg.dot" [color=red penwidth=1 style=dashed]
	"numpy.linalg.linalg.empty" [color=red fontsize=16 shape=none]
		"numpy.linalg.linalg-builtins" -> "numpy.linalg.linalg.empty" [color=red penwidth=1 style=dashed]
	"numpy.linalg.linalg.empty_like" [color=red fontsize=16 shape=none]
		"numpy.linalg.linalg-builtins" -> "numpy.linalg.linalg.empty_like" [color=red penwidth=1 style=dashed]
	"numpy.linalg.linalg.fastCopyAndTranspose" [color=red fontsize=16 shape=none]
		"numpy.linalg.linalg-builtins" -> "numpy.linalg.linalg.fastCopyAndTranspose" [color=red penwidth=1 style=dashed]
	"numpy.linalg.linalg.geterrobj" [color=red fontsize=16 shape=none]
		"numpy.linalg.linalg-builtins" -> "numpy.linalg.linalg.geterrobj" [color=red penwidth=1 style=dashed]
	"numpy.linalg.linalg.zeros" [color=red fontsize=16 shape=none]
		"numpy.linalg.linalg-builtins" -> "numpy.linalg.linalg.zeros" [color=red penwidth=1 style=dashed]
	"numpy.linalg.linalg-classes" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg" -> "numpy.linalg.linalg-classes" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.LinAlgError" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.LinAlgError" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.asbytes" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.asbytes" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.broadcast" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.broadcast" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.cdouble" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.cdouble" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.complexfloating" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.complexfloating" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.csingle" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.csingle" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.double" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.double" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.errstate" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.errstate" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.finfo" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.finfo" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.fortran_int" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.fortran_int" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.inexact" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.inexact" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.intc" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.intc" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.intp" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.intp" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.longdouble" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.longdouble" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.object_" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.object_" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg.single" [color=gold fontsize=16 shape=none]
		"numpy.linalg.linalg-classes" -> "numpy.linalg.linalg.single" [color=gold penwidth=1 style=dashed]
	"numpy.linalg.linalg-functions" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg" -> "numpy.linalg.linalg-functions" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._assertFinite" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._assertFinite" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._assertNdSquareness" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._assertNdSquareness" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._assertNoEmpty2d" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._assertNoEmpty2d" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._assertRank2" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._assertRank2" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._assertRankAtLeast2" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._assertRankAtLeast2" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._assertSquareness" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._assertSquareness" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._commonType" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._commonType" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._complexType" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._complexType" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._convertarray" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._convertarray" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._determine_error_states" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._determine_error_states" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._fastCopyAndTranspose" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._fastCopyAndTranspose" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._linalgRealType" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._linalgRealType" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._makearray" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._makearray" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._multi_dot" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._multi_dot" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._multi_dot_matrix_chain_order" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._multi_dot_matrix_chain_order" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._multi_dot_three" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._multi_dot_three" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._multi_svd_norm" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._multi_svd_norm" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._raise_linalgerror_nonposdef" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._raise_linalgerror_nonposdef" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._raise_linalgerror_singular" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._raise_linalgerror_singular" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._raise_linalgerror_svd_nonconvergence" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._raise_linalgerror_svd_nonconvergence" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._realType" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._realType" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg._to_native_byte_order" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg._to_native_byte_order" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.all" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.all" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.amax" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.amax" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.amin" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.amin" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.asanyarray" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.asanyarray" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.asarray" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.asarray" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.asfarray" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.asfarray" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.atleast_2d" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.atleast_2d" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.cholesky" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.cholesky" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.cond" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.cond" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.det" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.det" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.eig" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.eig" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.eigh" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.eigh" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.eigvals" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.eigvals" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.eigvalsh" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.eigvalsh" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.get_linalg_error_extobj" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.get_linalg_error_extobj" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.inv" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.inv" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.isComplexType" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.isComplexType" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.isscalar" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.isscalar" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.lstsq" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.lstsq" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.matrix_power" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.matrix_power" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.matrix_rank" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.matrix_rank" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.multi_dot" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.multi_dot" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.norm" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.norm" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.pinv" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.pinv" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.product" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.product" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.qr" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.qr" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.ravel" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.ravel" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.rollaxis" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.rollaxis" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.size" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.size" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.slogdet" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.slogdet" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.solve" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.solve" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.sum" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.sum" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.svd" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.svd" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.tensorinv" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.tensorinv" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.tensorsolve" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.tensorsolve" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.transpose" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.transpose" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg.triu" [color=purple fontsize=16 shape=none]
		"numpy.linalg.linalg-functions" -> "numpy.linalg.linalg.triu" [color=purple penwidth=1 style=dashed]
	"numpy.linalg.linalg-nofta" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg" -> "numpy.linalg.linalg-nofta" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.Inf" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.Inf" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg._A" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg._A" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg._L" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg._L" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg._N" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg._N" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg._S" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg._S" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg._V" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg._V" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.__all__" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.__all__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.__doc__" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.__file__" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.__file__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.__name__" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.__name__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.__package__" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.__package__" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg._complex_types_map" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg._complex_types_map" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg._linalg_error_extobj" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg._linalg_error_extobj" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg._real_types_map" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg._real_types_map" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.abs" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.abs" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.add" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.add" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.division" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.division" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.isfinite" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.isfinite" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.maximum" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.maximum" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.multiply" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.multiply" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.newaxis" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.newaxis" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.print_function" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.print_function" [color=black penwidth=1 style=dashed]
	"numpy.linalg.linalg.sqrt" [color=black fontsize=16 shape=none]
		"numpy.linalg.linalg-nofta" -> "numpy.linalg.linalg.sqrt" [color=black penwidth=1 style=dashed]
	"numpy.ma.core.pickle-builtins" [color=red fontsize=16 shape=none]
		"numpy.ma.core.pickle" -> "numpy.ma.core.pickle-builtins" [color=red penwidth=1 style=dashed]
	"numpy.ma.core.pickle-classes" [color=gold fontsize=16 shape=none]
		"numpy.ma.core.pickle" -> "numpy.ma.core.pickle-classes" [color=gold penwidth=1 style=dashed]
	"numpy.ma.core.pickle-functions" [color=purple fontsize=16 shape=none]
		"numpy.ma.core.pickle" -> "numpy.ma.core.pickle-functions" [color=purple penwidth=1 style=dashed]
	"numpy.ma.core.pickle-nofta" [color=black fontsize=16 shape=none]
		"numpy.ma.core.pickle" -> "numpy.ma.core.pickle-nofta" [color=black penwidth=1 style=dashed]
	"numpy.lib.function_base.sys-builtins" [color=red fontsize=16 shape=none]
		"numpy.lib.function_base.sys" -> "numpy.lib.function_base.sys-builtins" [color=red penwidth=1 style=dashed]
	"numpy.lib.function_base.sys-classes" [color=gold fontsize=16 shape=none]
		"numpy.lib.function_base.sys" -> "numpy.lib.function_base.sys-classes" [color=gold penwidth=1 style=dashed]
	"numpy.lib.function_base.sys-functions" [color=purple fontsize=16 shape=none]
		"numpy.lib.function_base.sys" -> "numpy.lib.function_base.sys-functions" [color=purple penwidth=1 style=dashed]
	"numpy.lib.function_base.sys-nofta" [color=black fontsize=16 shape=none]
		"numpy.lib.function_base.sys" -> "numpy.lib.function_base.sys-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils-builtins" [color=red fontsize=16 shape=none]
		"numpy.testing.utils" -> "numpy.testing.utils-builtins" [color=red penwidth=1 style=dashed]
	"numpy.testing.utils.arange" [color=red fontsize=16 shape=none]
		"numpy.testing.utils-builtins" -> "numpy.testing.utils.arange" [color=red penwidth=1 style=dashed]
	"numpy.testing.utils.empty" [color=red fontsize=16 shape=none]
		"numpy.testing.utils-builtins" -> "numpy.testing.utils.empty" [color=red penwidth=1 style=dashed]
	"numpy.testing.utils-classes" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils" -> "numpy.testing.utils-classes" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.IgnoreException" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils-classes" -> "numpy.testing.utils.IgnoreException" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.KnownFailureException" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils-classes" -> "numpy.testing.utils.KnownFailureException" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.KnownFailureTest" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils-classes" -> "numpy.testing.utils.KnownFailureTest" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.SkipTest" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils-classes" -> "numpy.testing.utils.SkipTest" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.StringIO" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils-classes" -> "numpy.testing.utils.StringIO" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.WarningManager" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils-classes" -> "numpy.testing.utils.WarningManager" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.WarningMessage" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils-classes" -> "numpy.testing.utils.WarningMessage" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.clear_and_catch_warnings" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils-classes" -> "numpy.testing.utils.clear_and_catch_warnings" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.float32" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils-classes" -> "numpy.testing.utils.float32" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.ndarray" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils-classes" -> "numpy.testing.utils.ndarray" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils.partial" [color=gold fontsize=16 shape=none]
		"numpy.testing.utils-classes" -> "numpy.testing.utils.partial" [color=gold penwidth=1 style=dashed]
	"numpy.testing.utils-functions" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils" -> "numpy.testing.utils-functions" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils._assert_no_warnings_context" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils._assert_no_warnings_context" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils._assert_valid_refcount" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils._assert_valid_refcount" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils._assert_warns_context" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils._assert_warns_context" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils._gen_alignment_data" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils._gen_alignment_data" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils._integer_repr" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils._integer_repr" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.array_repr" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.array_repr" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_allclose" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_allclose" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_almost_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_almost_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_approx_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_approx_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_array_almost_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_array_almost_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_array_almost_equal_nulp" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_array_almost_equal_nulp" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_array_compare" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_array_compare" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_array_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_array_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_array_less" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_array_less" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_array_max_ulp" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_array_max_ulp" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_no_warnings" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_no_warnings" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_raises" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_raises" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_raises_regex" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_raises_regex" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_string_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_string_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.assert_warns" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.assert_warns" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.build_err_msg" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.build_err_msg" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.decorate_methods" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.decorate_methods" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.deprecate" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.deprecate" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.gisfinite" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.gisfinite" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.gisinf" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.gisinf" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.gisnan" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.gisnan" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.import_nose" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.import_nose" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.integer_repr" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.integer_repr" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.jiffies" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.jiffies" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.measure" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.measure" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.memusage" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.memusage" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.mkdtemp" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.mkdtemp" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.mkstemp" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.mkstemp" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.nulp_diff" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.nulp_diff" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.print_assert_equal" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.print_assert_equal" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.raises" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.raises" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.rand" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.rand" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.rundocs" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.rundocs" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.runstring" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.runstring" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.tempdir" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.tempdir" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils.temppath" [color=purple fontsize=16 shape=none]
		"numpy.testing.utils-functions" -> "numpy.testing.utils.temppath" [color=purple penwidth=1 style=dashed]
	"numpy.testing.utils-nofta" [color=black fontsize=16 shape=none]
		"numpy.testing.utils" -> "numpy.testing.utils-nofta" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.__all__" [color=black fontsize=16 shape=none]
		"numpy.testing.utils-nofta" -> "numpy.testing.utils.__all__" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.__builtins__" [color=black fontsize=16 shape=none]
		"numpy.testing.utils-nofta" -> "numpy.testing.utils.__builtins__" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.__doc__" [color=black fontsize=16 shape=none]
		"numpy.testing.utils-nofta" -> "numpy.testing.utils.__doc__" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.__file__" [color=black fontsize=16 shape=none]
		"numpy.testing.utils-nofta" -> "numpy.testing.utils.__file__" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.__name__" [color=black fontsize=16 shape=none]
		"numpy.testing.utils-nofta" -> "numpy.testing.utils.__name__" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.__package__" [color=black fontsize=16 shape=none]
		"numpy.testing.utils-nofta" -> "numpy.testing.utils.__package__" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.absolute_import" [color=black fontsize=16 shape=none]
		"numpy.testing.utils-nofta" -> "numpy.testing.utils.absolute_import" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.assert_raises_regex_impl" [color=black fontsize=16 shape=none]
		"numpy.testing.utils-nofta" -> "numpy.testing.utils.assert_raises_regex_impl" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.division" [color=black fontsize=16 shape=none]
		"numpy.testing.utils-nofta" -> "numpy.testing.utils.division" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.print_function" [color=black fontsize=16 shape=none]
		"numpy.testing.utils-nofta" -> "numpy.testing.utils.print_function" [color=black penwidth=1 style=dashed]
	"numpy.testing.utils.verbose" [color=black fontsize=16 shape=none]
		"numpy.testing.utils-nofta" -> "numpy.testing.utils.verbose" [color=black penwidth=1 style=dashed]
}
